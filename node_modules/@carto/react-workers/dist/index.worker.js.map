{"version":3,"file":"index.worker.js","mappings":"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","sources":["webpack://cartoReactWorkers/../../node_modules/@turf/bbox-polygon/dist/js/index.js","webpack://cartoReactWorkers/../../node_modules/@turf/bbox/dist/js/index.js","webpack://cartoReactWorkers/../../node_modules/@turf/boolean-disjoint/dist/js/index.js","webpack://cartoReactWorkers/../../node_modules/@turf/boolean-intersects/dist/js/index.js","webpack://cartoReactWorkers/../../node_modules/@turf/boolean-point-in-polygon/dist/js/index.js","webpack://cartoReactWorkers/../../node_modules/@turf/boolean-point-on-line/dist/js/index.js","webpack://cartoReactWorkers/../../node_modules/@turf/boolean-within/dist/js/index.js","webpack://cartoReactWorkers/../../node_modules/@turf/helpers/dist/js/index.js","webpack://cartoReactWorkers/../../node_modules/@turf/intersect/dist/js/index.js","webpack://cartoReactWorkers/../../node_modules/@turf/invariant/dist/js/index.js","webpack://cartoReactWorkers/../../node_modules/@turf/line-intersect/dist/js/index.js","webpack://cartoReactWorkers/../../node_modules/@turf/line-segment/dist/js/index.js","webpack://cartoReactWorkers/../../node_modules/@turf/meta/dist/js/index.js","webpack://cartoReactWorkers/../../node_modules/@turf/polygon-to-line/dist/js/index.js","webpack://cartoReactWorkers/../../node_modules/geojson-rbush/index.js","webpack://cartoReactWorkers/../../node_modules/polygon-clipping/dist/polygon-clipping.umd.js","webpack://cartoReactWorkers/../../node_modules/rbush/rbush.min.js","webpack://cartoReactWorkers/../../node_modules/thenby/thenBy.module.js","webpack://cartoReactWorkers/../react-core/dist/index.js","webpack://cartoReactWorkers/webpack/bootstrap","webpack://cartoReactWorkers/../../node_modules/@babel/runtime/helpers/esm/defineProperty.js","webpack://cartoReactWorkers/../../node_modules/@babel/runtime/helpers/esm/typeof.js","webpack://cartoReactWorkers/../../node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","webpack://cartoReactWorkers/../../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","webpack://cartoReactWorkers/../../node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","webpack://cartoReactWorkers/../../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","webpack://cartoReactWorkers/../../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","webpack://cartoReactWorkers/../../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","webpack://cartoReactWorkers/./src/utils/sorting.js","webpack://cartoReactWorkers/../../node_modules/@babel/runtime/helpers/esm/toArray.js","webpack://cartoReactWorkers/../../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","webpack://cartoReactWorkers/../../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","webpack://cartoReactWorkers/./src/workerMethods.js","webpack://cartoReactWorkers/./src/workers/features.worker.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar helpers_1 = require(\"@turf/helpers\");\n/**\n * Takes a bbox and returns an equivalent {@link Polygon|polygon}.\n *\n * @name bboxPolygon\n * @param {BBox} bbox extent in [minX, minY, maxX, maxY] order\n * @param {Object} [options={}] Optional parameters\n * @param {Properties} [options.properties={}] Translate properties to Polygon\n * @param {string|number} [options.id={}] Translate Id to Polygon\n * @returns {Feature<Polygon>} a Polygon representation of the bounding box\n * @example\n * var bbox = [0, 0, 10, 10];\n *\n * var poly = turf.bboxPolygon(bbox);\n *\n * //addToMap\n * var addToMap = [poly]\n */\nfunction bboxPolygon(bbox, options) {\n    if (options === void 0) { options = {}; }\n    // Convert BBox positions to Numbers\n    // No performance loss for including Number()\n    // https://github.com/Turfjs/turf/issues/1119\n    var west = Number(bbox[0]);\n    var south = Number(bbox[1]);\n    var east = Number(bbox[2]);\n    var north = Number(bbox[3]);\n    if (bbox.length === 6) {\n        throw new Error(\"@turf/bbox-polygon does not support BBox with 6 positions\");\n    }\n    var lowLeft = [west, south];\n    var topLeft = [west, north];\n    var topRight = [east, north];\n    var lowRight = [east, south];\n    return helpers_1.polygon([[lowLeft, lowRight, topRight, topLeft, lowLeft]], options.properties, { bbox: bbox, id: options.id });\n}\nexports.default = bboxPolygon;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar meta_1 = require(\"@turf/meta\");\n/**\n * Takes a set of features, calculates the bbox of all input features, and returns a bounding box.\n *\n * @name bbox\n * @param {GeoJSON} geojson any GeoJSON object\n * @returns {BBox} bbox extent in [minX, minY, maxX, maxY] order\n * @example\n * var line = turf.lineString([[-74, 40], [-78, 42], [-82, 35]]);\n * var bbox = turf.bbox(line);\n * var bboxPolygon = turf.bboxPolygon(bbox);\n *\n * //addToMap\n * var addToMap = [line, bboxPolygon]\n */\nfunction bbox(geojson) {\n    var result = [Infinity, Infinity, -Infinity, -Infinity];\n    meta_1.coordEach(geojson, function (coord) {\n        if (result[0] > coord[0]) {\n            result[0] = coord[0];\n        }\n        if (result[1] > coord[1]) {\n            result[1] = coord[1];\n        }\n        if (result[2] < coord[0]) {\n            result[2] = coord[0];\n        }\n        if (result[3] < coord[1]) {\n            result[3] = coord[1];\n        }\n    });\n    return result;\n}\nbbox[\"default\"] = bbox;\nexports.default = bbox;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar boolean_point_in_polygon_1 = __importDefault(require(\"@turf/boolean-point-in-polygon\"));\nvar line_intersect_1 = __importDefault(require(\"@turf/line-intersect\"));\nvar meta_1 = require(\"@turf/meta\");\nvar polygon_to_line_1 = __importDefault(require(\"@turf/polygon-to-line\"));\n/**\n * Boolean-disjoint returns (TRUE) if the intersection of the two geometries is an empty set.\n *\n * @name booleanDisjoint\n * @param {Geometry|Feature<any>} feature1 GeoJSON Feature or Geometry\n * @param {Geometry|Feature<any>} feature2 GeoJSON Feature or Geometry\n * @returns {boolean} true/false\n * @example\n * var point = turf.point([2, 2]);\n * var line = turf.lineString([[1, 1], [1, 2], [1, 3], [1, 4]]);\n *\n * turf.booleanDisjoint(line, point);\n * //=true\n */\nfunction booleanDisjoint(feature1, feature2) {\n    var bool = true;\n    meta_1.flattenEach(feature1, function (flatten1) {\n        meta_1.flattenEach(feature2, function (flatten2) {\n            if (bool === false) {\n                return false;\n            }\n            bool = disjoint(flatten1.geometry, flatten2.geometry);\n        });\n    });\n    return bool;\n}\n/**\n * Disjoint operation for simple Geometries (Point/LineString/Polygon)\n *\n * @private\n * @param {Geometry<any>} geom1 GeoJSON Geometry\n * @param {Geometry<any>} geom2 GeoJSON Geometry\n * @returns {boolean} true/false\n */\nfunction disjoint(geom1, geom2) {\n    switch (geom1.type) {\n        case \"Point\":\n            switch (geom2.type) {\n                case \"Point\":\n                    return !compareCoords(geom1.coordinates, geom2.coordinates);\n                case \"LineString\":\n                    return !isPointOnLine(geom2, geom1);\n                case \"Polygon\":\n                    return !boolean_point_in_polygon_1.default(geom1, geom2);\n            }\n            /* istanbul ignore next */\n            break;\n        case \"LineString\":\n            switch (geom2.type) {\n                case \"Point\":\n                    return !isPointOnLine(geom1, geom2);\n                case \"LineString\":\n                    return !isLineOnLine(geom1, geom2);\n                case \"Polygon\":\n                    return !isLineInPoly(geom2, geom1);\n            }\n            /* istanbul ignore next */\n            break;\n        case \"Polygon\":\n            switch (geom2.type) {\n                case \"Point\":\n                    return !boolean_point_in_polygon_1.default(geom2, geom1);\n                case \"LineString\":\n                    return !isLineInPoly(geom1, geom2);\n                case \"Polygon\":\n                    return !isPolyInPoly(geom2, geom1);\n            }\n    }\n    return false;\n}\n// http://stackoverflow.com/a/11908158/1979085\nfunction isPointOnLine(lineString, pt) {\n    for (var i = 0; i < lineString.coordinates.length - 1; i++) {\n        if (isPointOnLineSegment(lineString.coordinates[i], lineString.coordinates[i + 1], pt.coordinates)) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction isLineOnLine(lineString1, lineString2) {\n    var doLinesIntersect = line_intersect_1.default(lineString1, lineString2);\n    if (doLinesIntersect.features.length > 0) {\n        return true;\n    }\n    return false;\n}\nfunction isLineInPoly(polygon, lineString) {\n    for (var _i = 0, _a = lineString.coordinates; _i < _a.length; _i++) {\n        var coord = _a[_i];\n        if (boolean_point_in_polygon_1.default(coord, polygon)) {\n            return true;\n        }\n    }\n    var doLinesIntersect = line_intersect_1.default(lineString, polygon_to_line_1.default(polygon));\n    if (doLinesIntersect.features.length > 0) {\n        return true;\n    }\n    return false;\n}\n/**\n * Is Polygon (geom1) in Polygon (geom2)\n * Only takes into account outer rings\n * See http://stackoverflow.com/a/4833823/1979085\n *\n * @private\n * @param {Geometry|Feature<Polygon>} feature1 Polygon1\n * @param {Geometry|Feature<Polygon>} feature2 Polygon2\n * @returns {boolean} true/false\n */\nfunction isPolyInPoly(feature1, feature2) {\n    for (var _i = 0, _a = feature1.coordinates[0]; _i < _a.length; _i++) {\n        var coord1 = _a[_i];\n        if (boolean_point_in_polygon_1.default(coord1, feature2)) {\n            return true;\n        }\n    }\n    for (var _b = 0, _c = feature2.coordinates[0]; _b < _c.length; _b++) {\n        var coord2 = _c[_b];\n        if (boolean_point_in_polygon_1.default(coord2, feature1)) {\n            return true;\n        }\n    }\n    var doLinesIntersect = line_intersect_1.default(polygon_to_line_1.default(feature1), polygon_to_line_1.default(feature2));\n    if (doLinesIntersect.features.length > 0) {\n        return true;\n    }\n    return false;\n}\nfunction isPointOnLineSegment(lineSegmentStart, lineSegmentEnd, pt) {\n    var dxc = pt[0] - lineSegmentStart[0];\n    var dyc = pt[1] - lineSegmentStart[1];\n    var dxl = lineSegmentEnd[0] - lineSegmentStart[0];\n    var dyl = lineSegmentEnd[1] - lineSegmentStart[1];\n    var cross = dxc * dyl - dyc * dxl;\n    if (cross !== 0) {\n        return false;\n    }\n    if (Math.abs(dxl) >= Math.abs(dyl)) {\n        if (dxl > 0) {\n            return lineSegmentStart[0] <= pt[0] && pt[0] <= lineSegmentEnd[0];\n        }\n        else {\n            return lineSegmentEnd[0] <= pt[0] && pt[0] <= lineSegmentStart[0];\n        }\n    }\n    else if (dyl > 0) {\n        return lineSegmentStart[1] <= pt[1] && pt[1] <= lineSegmentEnd[1];\n    }\n    else {\n        return lineSegmentEnd[1] <= pt[1] && pt[1] <= lineSegmentStart[1];\n    }\n}\n/**\n * compareCoords\n *\n * @private\n * @param {Position} pair1 point [x,y]\n * @param {Position} pair2 point [x,y]\n * @returns {boolean} true/false if coord pairs match\n */\nfunction compareCoords(pair1, pair2) {\n    return pair1[0] === pair2[0] && pair1[1] === pair2[1];\n}\nexports.default = booleanDisjoint;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar boolean_disjoint_1 = __importDefault(require(\"@turf/boolean-disjoint\"));\nvar meta_1 = require(\"@turf/meta\");\n/**\n * Boolean-intersects returns (TRUE) two geometries intersect.\n *\n * @name booleanIntersects\n * @param {Geometry|Feature<any>} feature1 GeoJSON Feature or Geometry\n * @param {Geometry|Feature<any>} feature2 GeoJSON Feature or Geometry\n * @returns {boolean} true/false\n * @example\n * var point = turf.point([2, 2]);\n * var line = turf.lineString([[1, 1], [1, 2], [1, 3], [1, 4]]);\n *\n * turf.booleanIntersects(line, point);\n * //=true\n */\nfunction booleanIntersects(feature1, feature2) {\n    var bool = false;\n    meta_1.flattenEach(feature1, function (flatten1) {\n        meta_1.flattenEach(feature2, function (flatten2) {\n            if (bool === true) {\n                return true;\n            }\n            bool = !boolean_disjoint_1.default(flatten1.geometry, flatten2.geometry);\n        });\n    });\n    return bool;\n}\nexports.default = booleanIntersects;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar invariant_1 = require(\"@turf/invariant\");\n// http://en.wikipedia.org/wiki/Even%E2%80%93odd_rule\n// modified from: https://github.com/substack/point-in-polygon/blob/master/index.js\n// which was modified from http://www.ecse.rpi.edu/Homepages/wrf/Research/Short_Notes/pnpoly.html\n/**\n * Takes a {@link Point} and a {@link Polygon} or {@link MultiPolygon} and determines if the point\n * resides inside the polygon. The polygon can be convex or concave. The function accounts for holes.\n *\n * @name booleanPointInPolygon\n * @param {Coord} point input point\n * @param {Feature<Polygon|MultiPolygon>} polygon input polygon or multipolygon\n * @param {Object} [options={}] Optional parameters\n * @param {boolean} [options.ignoreBoundary=false] True if polygon boundary should be ignored when determining if\n * the point is inside the polygon otherwise false.\n * @returns {boolean} `true` if the Point is inside the Polygon; `false` if the Point is not inside the Polygon\n * @example\n * var pt = turf.point([-77, 44]);\n * var poly = turf.polygon([[\n *   [-81, 41],\n *   [-81, 47],\n *   [-72, 47],\n *   [-72, 41],\n *   [-81, 41]\n * ]]);\n *\n * turf.booleanPointInPolygon(pt, poly);\n * //= true\n */\nfunction booleanPointInPolygon(point, polygon, options) {\n    if (options === void 0) { options = {}; }\n    // validation\n    if (!point) {\n        throw new Error(\"point is required\");\n    }\n    if (!polygon) {\n        throw new Error(\"polygon is required\");\n    }\n    var pt = invariant_1.getCoord(point);\n    var geom = invariant_1.getGeom(polygon);\n    var type = geom.type;\n    var bbox = polygon.bbox;\n    var polys = geom.coordinates;\n    // Quick elimination if point is not inside bbox\n    if (bbox && inBBox(pt, bbox) === false) {\n        return false;\n    }\n    // normalize to multipolygon\n    if (type === \"Polygon\") {\n        polys = [polys];\n    }\n    var insidePoly = false;\n    for (var i = 0; i < polys.length && !insidePoly; i++) {\n        // check if it is in the outer ring first\n        if (inRing(pt, polys[i][0], options.ignoreBoundary)) {\n            var inHole = false;\n            var k = 1;\n            // check for the point in any of the holes\n            while (k < polys[i].length && !inHole) {\n                if (inRing(pt, polys[i][k], !options.ignoreBoundary)) {\n                    inHole = true;\n                }\n                k++;\n            }\n            if (!inHole) {\n                insidePoly = true;\n            }\n        }\n    }\n    return insidePoly;\n}\nexports.default = booleanPointInPolygon;\n/**\n * inRing\n *\n * @private\n * @param {Array<number>} pt [x,y]\n * @param {Array<Array<number>>} ring [[x,y], [x,y],..]\n * @param {boolean} ignoreBoundary ignoreBoundary\n * @returns {boolean} inRing\n */\nfunction inRing(pt, ring, ignoreBoundary) {\n    var isInside = false;\n    if (ring[0][0] === ring[ring.length - 1][0] &&\n        ring[0][1] === ring[ring.length - 1][1]) {\n        ring = ring.slice(0, ring.length - 1);\n    }\n    for (var i = 0, j = ring.length - 1; i < ring.length; j = i++) {\n        var xi = ring[i][0];\n        var yi = ring[i][1];\n        var xj = ring[j][0];\n        var yj = ring[j][1];\n        var onBoundary = pt[1] * (xi - xj) + yi * (xj - pt[0]) + yj * (pt[0] - xi) === 0 &&\n            (xi - pt[0]) * (xj - pt[0]) <= 0 &&\n            (yi - pt[1]) * (yj - pt[1]) <= 0;\n        if (onBoundary) {\n            return !ignoreBoundary;\n        }\n        var intersect = yi > pt[1] !== yj > pt[1] &&\n            pt[0] < ((xj - xi) * (pt[1] - yi)) / (yj - yi) + xi;\n        if (intersect) {\n            isInside = !isInside;\n        }\n    }\n    return isInside;\n}\n/**\n * inBBox\n *\n * @private\n * @param {Position} pt point [x,y]\n * @param {BBox} bbox BBox [west, south, east, north]\n * @returns {boolean} true/false if point is inside BBox\n */\nfunction inBBox(pt, bbox) {\n    return (bbox[0] <= pt[0] && bbox[1] <= pt[1] && bbox[2] >= pt[0] && bbox[3] >= pt[1]);\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar invariant_1 = require(\"@turf/invariant\");\n/**\n * Returns true if a point is on a line. Accepts a optional parameter to ignore the\n * start and end vertices of the linestring.\n *\n * @name booleanPointOnLine\n * @param {Coord} pt GeoJSON Point\n * @param {Feature<LineString>} line GeoJSON LineString\n * @param {Object} [options={}] Optional parameters\n * @param {boolean} [options.ignoreEndVertices=false] whether to ignore the start and end vertices.\n * @param {number} [options.epsilon] Fractional number to compare with the cross product result. Useful for dealing with floating points such as lng/lat points\n * @returns {boolean} true/false\n * @example\n * var pt = turf.point([0, 0]);\n * var line = turf.lineString([[-1, -1],[1, 1],[1.5, 2.2]]);\n * var isPointOnLine = turf.booleanPointOnLine(pt, line);\n * //=true\n */\nfunction booleanPointOnLine(pt, line, options) {\n    if (options === void 0) { options = {}; }\n    // Normalize inputs\n    var ptCoords = invariant_1.getCoord(pt);\n    var lineCoords = invariant_1.getCoords(line);\n    // Main\n    for (var i = 0; i < lineCoords.length - 1; i++) {\n        var ignoreBoundary = false;\n        if (options.ignoreEndVertices) {\n            if (i === 0) {\n                ignoreBoundary = \"start\";\n            }\n            if (i === lineCoords.length - 2) {\n                ignoreBoundary = \"end\";\n            }\n            if (i === 0 && i + 1 === lineCoords.length - 1) {\n                ignoreBoundary = \"both\";\n            }\n        }\n        if (isPointOnLineSegment(lineCoords[i], lineCoords[i + 1], ptCoords, ignoreBoundary, typeof options.epsilon === \"undefined\" ? null : options.epsilon)) {\n            return true;\n        }\n    }\n    return false;\n}\n// See http://stackoverflow.com/a/4833823/1979085\n// See https://stackoverflow.com/a/328122/1048847\n/**\n * @private\n * @param {Position} lineSegmentStart coord pair of start of line\n * @param {Position} lineSegmentEnd coord pair of end of line\n * @param {Position} pt coord pair of point to check\n * @param {boolean|string} excludeBoundary whether the point is allowed to fall on the line ends.\n * @param {number} epsilon Fractional number to compare with the cross product result. Useful for dealing with floating points such as lng/lat points\n * If true which end to ignore.\n * @returns {boolean} true/false\n */\nfunction isPointOnLineSegment(lineSegmentStart, lineSegmentEnd, pt, excludeBoundary, epsilon) {\n    var x = pt[0];\n    var y = pt[1];\n    var x1 = lineSegmentStart[0];\n    var y1 = lineSegmentStart[1];\n    var x2 = lineSegmentEnd[0];\n    var y2 = lineSegmentEnd[1];\n    var dxc = pt[0] - x1;\n    var dyc = pt[1] - y1;\n    var dxl = x2 - x1;\n    var dyl = y2 - y1;\n    var cross = dxc * dyl - dyc * dxl;\n    if (epsilon !== null) {\n        if (Math.abs(cross) > epsilon) {\n            return false;\n        }\n    }\n    else if (cross !== 0) {\n        return false;\n    }\n    if (!excludeBoundary) {\n        if (Math.abs(dxl) >= Math.abs(dyl)) {\n            return dxl > 0 ? x1 <= x && x <= x2 : x2 <= x && x <= x1;\n        }\n        return dyl > 0 ? y1 <= y && y <= y2 : y2 <= y && y <= y1;\n    }\n    else if (excludeBoundary === \"start\") {\n        if (Math.abs(dxl) >= Math.abs(dyl)) {\n            return dxl > 0 ? x1 < x && x <= x2 : x2 <= x && x < x1;\n        }\n        return dyl > 0 ? y1 < y && y <= y2 : y2 <= y && y < y1;\n    }\n    else if (excludeBoundary === \"end\") {\n        if (Math.abs(dxl) >= Math.abs(dyl)) {\n            return dxl > 0 ? x1 <= x && x < x2 : x2 < x && x <= x1;\n        }\n        return dyl > 0 ? y1 <= y && y < y2 : y2 < y && y <= y1;\n    }\n    else if (excludeBoundary === \"both\") {\n        if (Math.abs(dxl) >= Math.abs(dyl)) {\n            return dxl > 0 ? x1 < x && x < x2 : x2 < x && x < x1;\n        }\n        return dyl > 0 ? y1 < y && y < y2 : y2 < y && y < y1;\n    }\n    return false;\n}\nexports.default = booleanPointOnLine;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar bbox_1 = __importDefault(require(\"@turf/bbox\"));\nvar boolean_point_on_line_1 = __importDefault(require(\"@turf/boolean-point-on-line\"));\nvar boolean_point_in_polygon_1 = __importDefault(require(\"@turf/boolean-point-in-polygon\"));\nvar invariant_1 = require(\"@turf/invariant\");\n/**\n * Boolean-within returns true if the first geometry is completely within the second geometry.\n * The interiors of both geometries must intersect and, the interior and boundary of the primary (geometry a)\n * must not intersect the exterior of the secondary (geometry b).\n * Boolean-within returns the exact opposite result of the `@turf/boolean-contains`.\n *\n * @name booleanWithin\n * @param {Geometry|Feature<any>} feature1 GeoJSON Feature or Geometry\n * @param {Geometry|Feature<any>} feature2 GeoJSON Feature or Geometry\n * @returns {boolean} true/false\n * @example\n * var line = turf.lineString([[1, 1], [1, 2], [1, 3], [1, 4]]);\n * var point = turf.point([1, 2]);\n *\n * turf.booleanWithin(point, line);\n * //=true\n */\nfunction booleanWithin(feature1, feature2) {\n    var geom1 = invariant_1.getGeom(feature1);\n    var geom2 = invariant_1.getGeom(feature2);\n    var type1 = geom1.type;\n    var type2 = geom2.type;\n    switch (type1) {\n        case \"Point\":\n            switch (type2) {\n                case \"MultiPoint\":\n                    return isPointInMultiPoint(geom1, geom2);\n                case \"LineString\":\n                    return boolean_point_on_line_1.default(geom1, geom2, { ignoreEndVertices: true });\n                case \"Polygon\":\n                case \"MultiPolygon\":\n                    return boolean_point_in_polygon_1.default(geom1, geom2, { ignoreBoundary: true });\n                default:\n                    throw new Error(\"feature2 \" + type2 + \" geometry not supported\");\n            }\n        case \"MultiPoint\":\n            switch (type2) {\n                case \"MultiPoint\":\n                    return isMultiPointInMultiPoint(geom1, geom2);\n                case \"LineString\":\n                    return isMultiPointOnLine(geom1, geom2);\n                case \"Polygon\":\n                case \"MultiPolygon\":\n                    return isMultiPointInPoly(geom1, geom2);\n                default:\n                    throw new Error(\"feature2 \" + type2 + \" geometry not supported\");\n            }\n        case \"LineString\":\n            switch (type2) {\n                case \"LineString\":\n                    return isLineOnLine(geom1, geom2);\n                case \"Polygon\":\n                case \"MultiPolygon\":\n                    return isLineInPoly(geom1, geom2);\n                default:\n                    throw new Error(\"feature2 \" + type2 + \" geometry not supported\");\n            }\n        case \"Polygon\":\n            switch (type2) {\n                case \"Polygon\":\n                case \"MultiPolygon\":\n                    return isPolyInPoly(geom1, geom2);\n                default:\n                    throw new Error(\"feature2 \" + type2 + \" geometry not supported\");\n            }\n        default:\n            throw new Error(\"feature1 \" + type1 + \" geometry not supported\");\n    }\n}\nfunction isPointInMultiPoint(point, multiPoint) {\n    var i;\n    var output = false;\n    for (i = 0; i < multiPoint.coordinates.length; i++) {\n        if (compareCoords(multiPoint.coordinates[i], point.coordinates)) {\n            output = true;\n            break;\n        }\n    }\n    return output;\n}\nfunction isMultiPointInMultiPoint(multiPoint1, multiPoint2) {\n    for (var i = 0; i < multiPoint1.coordinates.length; i++) {\n        var anyMatch = false;\n        for (var i2 = 0; i2 < multiPoint2.coordinates.length; i2++) {\n            if (compareCoords(multiPoint1.coordinates[i], multiPoint2.coordinates[i2])) {\n                anyMatch = true;\n            }\n        }\n        if (!anyMatch) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction isMultiPointOnLine(multiPoint, lineString) {\n    var foundInsidePoint = false;\n    for (var i = 0; i < multiPoint.coordinates.length; i++) {\n        if (!boolean_point_on_line_1.default(multiPoint.coordinates[i], lineString)) {\n            return false;\n        }\n        if (!foundInsidePoint) {\n            foundInsidePoint = boolean_point_on_line_1.default(multiPoint.coordinates[i], lineString, { ignoreEndVertices: true });\n        }\n    }\n    return foundInsidePoint;\n}\nfunction isMultiPointInPoly(multiPoint, polygon) {\n    var output = true;\n    var oneInside = false;\n    var isInside = false;\n    for (var i = 0; i < multiPoint.coordinates.length; i++) {\n        isInside = boolean_point_in_polygon_1.default(multiPoint.coordinates[1], polygon);\n        if (!isInside) {\n            output = false;\n            break;\n        }\n        if (!oneInside) {\n            isInside = boolean_point_in_polygon_1.default(multiPoint.coordinates[1], polygon, {\n                ignoreBoundary: true,\n            });\n        }\n    }\n    return output && isInside;\n}\nfunction isLineOnLine(lineString1, lineString2) {\n    for (var i = 0; i < lineString1.coordinates.length; i++) {\n        if (!boolean_point_on_line_1.default(lineString1.coordinates[i], lineString2)) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction isLineInPoly(linestring, polygon) {\n    var polyBbox = bbox_1.default(polygon);\n    var lineBbox = bbox_1.default(linestring);\n    if (!doBBoxOverlap(polyBbox, lineBbox)) {\n        return false;\n    }\n    var foundInsidePoint = false;\n    for (var i = 0; i < linestring.coordinates.length - 1; i++) {\n        if (!boolean_point_in_polygon_1.default(linestring.coordinates[i], polygon)) {\n            return false;\n        }\n        if (!foundInsidePoint) {\n            foundInsidePoint = boolean_point_in_polygon_1.default(linestring.coordinates[i], polygon, { ignoreBoundary: true });\n        }\n        if (!foundInsidePoint) {\n            var midpoint = getMidpoint(linestring.coordinates[i], linestring.coordinates[i + 1]);\n            foundInsidePoint = boolean_point_in_polygon_1.default(midpoint, polygon, {\n                ignoreBoundary: true,\n            });\n        }\n    }\n    return foundInsidePoint;\n}\n/**\n * Is Polygon2 in Polygon1\n * Only takes into account outer rings\n *\n * @private\n * @param {Polygon} geometry1\n * @param {Polygon|MultiPolygon} geometry2\n * @returns {boolean} true/false\n */\nfunction isPolyInPoly(geometry1, geometry2) {\n    var poly1Bbox = bbox_1.default(geometry1);\n    var poly2Bbox = bbox_1.default(geometry2);\n    if (!doBBoxOverlap(poly2Bbox, poly1Bbox)) {\n        return false;\n    }\n    for (var i = 0; i < geometry1.coordinates[0].length; i++) {\n        if (!boolean_point_in_polygon_1.default(geometry1.coordinates[0][i], geometry2)) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction doBBoxOverlap(bbox1, bbox2) {\n    if (bbox1[0] > bbox2[0])\n        return false;\n    if (bbox1[2] < bbox2[2])\n        return false;\n    if (bbox1[1] > bbox2[1])\n        return false;\n    if (bbox1[3] < bbox2[3])\n        return false;\n    return true;\n}\n/**\n * compareCoords\n *\n * @private\n * @param {Position} pair1 point [x,y]\n * @param {Position} pair2 point [x,y]\n * @returns {boolean} true/false if coord pairs match\n */\nfunction compareCoords(pair1, pair2) {\n    return pair1[0] === pair2[0] && pair1[1] === pair2[1];\n}\n/**\n * getMidpoint\n *\n * @private\n * @param {Position} pair1 point [x,y]\n * @param {Position} pair2 point [x,y]\n * @returns {Position} midpoint of pair1 and pair2\n */\nfunction getMidpoint(pair1, pair2) {\n    return [(pair1[0] + pair2[0]) / 2, (pair1[1] + pair2[1]) / 2];\n}\nexports.default = booleanWithin;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * @module helpers\n */\n/**\n * Earth Radius used with the Harvesine formula and approximates using a spherical (non-ellipsoid) Earth.\n *\n * @memberof helpers\n * @type {number}\n */\nexports.earthRadius = 6371008.8;\n/**\n * Unit of measurement factors using a spherical (non-ellipsoid) earth radius.\n *\n * @memberof helpers\n * @type {Object}\n */\nexports.factors = {\n    centimeters: exports.earthRadius * 100,\n    centimetres: exports.earthRadius * 100,\n    degrees: exports.earthRadius / 111325,\n    feet: exports.earthRadius * 3.28084,\n    inches: exports.earthRadius * 39.37,\n    kilometers: exports.earthRadius / 1000,\n    kilometres: exports.earthRadius / 1000,\n    meters: exports.earthRadius,\n    metres: exports.earthRadius,\n    miles: exports.earthRadius / 1609.344,\n    millimeters: exports.earthRadius * 1000,\n    millimetres: exports.earthRadius * 1000,\n    nauticalmiles: exports.earthRadius / 1852,\n    radians: 1,\n    yards: exports.earthRadius * 1.0936,\n};\n/**\n * Units of measurement factors based on 1 meter.\n *\n * @memberof helpers\n * @type {Object}\n */\nexports.unitsFactors = {\n    centimeters: 100,\n    centimetres: 100,\n    degrees: 1 / 111325,\n    feet: 3.28084,\n    inches: 39.37,\n    kilometers: 1 / 1000,\n    kilometres: 1 / 1000,\n    meters: 1,\n    metres: 1,\n    miles: 1 / 1609.344,\n    millimeters: 1000,\n    millimetres: 1000,\n    nauticalmiles: 1 / 1852,\n    radians: 1 / exports.earthRadius,\n    yards: 1.0936133,\n};\n/**\n * Area of measurement factors based on 1 square meter.\n *\n * @memberof helpers\n * @type {Object}\n */\nexports.areaFactors = {\n    acres: 0.000247105,\n    centimeters: 10000,\n    centimetres: 10000,\n    feet: 10.763910417,\n    hectares: 0.0001,\n    inches: 1550.003100006,\n    kilometers: 0.000001,\n    kilometres: 0.000001,\n    meters: 1,\n    metres: 1,\n    miles: 3.86e-7,\n    millimeters: 1000000,\n    millimetres: 1000000,\n    yards: 1.195990046,\n};\n/**\n * Wraps a GeoJSON {@link Geometry} in a GeoJSON {@link Feature}.\n *\n * @name feature\n * @param {Geometry} geometry input geometry\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature} a GeoJSON Feature\n * @example\n * var geometry = {\n *   \"type\": \"Point\",\n *   \"coordinates\": [110, 50]\n * };\n *\n * var feature = turf.feature(geometry);\n *\n * //=feature\n */\nfunction feature(geom, properties, options) {\n    if (options === void 0) { options = {}; }\n    var feat = { type: \"Feature\" };\n    if (options.id === 0 || options.id) {\n        feat.id = options.id;\n    }\n    if (options.bbox) {\n        feat.bbox = options.bbox;\n    }\n    feat.properties = properties || {};\n    feat.geometry = geom;\n    return feat;\n}\nexports.feature = feature;\n/**\n * Creates a GeoJSON {@link Geometry} from a Geometry string type & coordinates.\n * For GeometryCollection type use `helpers.geometryCollection`\n *\n * @name geometry\n * @param {string} type Geometry Type\n * @param {Array<any>} coordinates Coordinates\n * @param {Object} [options={}] Optional Parameters\n * @returns {Geometry} a GeoJSON Geometry\n * @example\n * var type = \"Point\";\n * var coordinates = [110, 50];\n * var geometry = turf.geometry(type, coordinates);\n * // => geometry\n */\nfunction geometry(type, coordinates, _options) {\n    if (_options === void 0) { _options = {}; }\n    switch (type) {\n        case \"Point\":\n            return point(coordinates).geometry;\n        case \"LineString\":\n            return lineString(coordinates).geometry;\n        case \"Polygon\":\n            return polygon(coordinates).geometry;\n        case \"MultiPoint\":\n            return multiPoint(coordinates).geometry;\n        case \"MultiLineString\":\n            return multiLineString(coordinates).geometry;\n        case \"MultiPolygon\":\n            return multiPolygon(coordinates).geometry;\n        default:\n            throw new Error(type + \" is invalid\");\n    }\n}\nexports.geometry = geometry;\n/**\n * Creates a {@link Point} {@link Feature} from a Position.\n *\n * @name point\n * @param {Array<number>} coordinates longitude, latitude position (each in decimal degrees)\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<Point>} a Point feature\n * @example\n * var point = turf.point([-75.343, 39.984]);\n *\n * //=point\n */\nfunction point(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    if (!coordinates) {\n        throw new Error(\"coordinates is required\");\n    }\n    if (!Array.isArray(coordinates)) {\n        throw new Error(\"coordinates must be an Array\");\n    }\n    if (coordinates.length < 2) {\n        throw new Error(\"coordinates must be at least 2 numbers long\");\n    }\n    if (!isNumber(coordinates[0]) || !isNumber(coordinates[1])) {\n        throw new Error(\"coordinates must contain numbers\");\n    }\n    var geom = {\n        type: \"Point\",\n        coordinates: coordinates,\n    };\n    return feature(geom, properties, options);\n}\nexports.point = point;\n/**\n * Creates a {@link Point} {@link FeatureCollection} from an Array of Point coordinates.\n *\n * @name points\n * @param {Array<Array<number>>} coordinates an array of Points\n * @param {Object} [properties={}] Translate these properties to each Feature\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north]\n * associated with the FeatureCollection\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<Point>} Point Feature\n * @example\n * var points = turf.points([\n *   [-75, 39],\n *   [-80, 45],\n *   [-78, 50]\n * ]);\n *\n * //=points\n */\nfunction points(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    return featureCollection(coordinates.map(function (coords) {\n        return point(coords, properties);\n    }), options);\n}\nexports.points = points;\n/**\n * Creates a {@link Polygon} {@link Feature} from an Array of LinearRings.\n *\n * @name polygon\n * @param {Array<Array<Array<number>>>} coordinates an array of LinearRings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<Polygon>} Polygon Feature\n * @example\n * var polygon = turf.polygon([[[-5, 52], [-4, 56], [-2, 51], [-7, 54], [-5, 52]]], { name: 'poly1' });\n *\n * //=polygon\n */\nfunction polygon(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    for (var _i = 0, coordinates_1 = coordinates; _i < coordinates_1.length; _i++) {\n        var ring = coordinates_1[_i];\n        if (ring.length < 4) {\n            throw new Error(\"Each LinearRing of a Polygon must have 4 or more Positions.\");\n        }\n        for (var j = 0; j < ring[ring.length - 1].length; j++) {\n            // Check if first point of Polygon contains two numbers\n            if (ring[ring.length - 1][j] !== ring[0][j]) {\n                throw new Error(\"First and last Position are not equivalent.\");\n            }\n        }\n    }\n    var geom = {\n        type: \"Polygon\",\n        coordinates: coordinates,\n    };\n    return feature(geom, properties, options);\n}\nexports.polygon = polygon;\n/**\n * Creates a {@link Polygon} {@link FeatureCollection} from an Array of Polygon coordinates.\n *\n * @name polygons\n * @param {Array<Array<Array<Array<number>>>>} coordinates an array of Polygon coordinates\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<Polygon>} Polygon FeatureCollection\n * @example\n * var polygons = turf.polygons([\n *   [[[-5, 52], [-4, 56], [-2, 51], [-7, 54], [-5, 52]]],\n *   [[[-15, 42], [-14, 46], [-12, 41], [-17, 44], [-15, 42]]],\n * ]);\n *\n * //=polygons\n */\nfunction polygons(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    return featureCollection(coordinates.map(function (coords) {\n        return polygon(coords, properties);\n    }), options);\n}\nexports.polygons = polygons;\n/**\n * Creates a {@link LineString} {@link Feature} from an Array of Positions.\n *\n * @name lineString\n * @param {Array<Array<number>>} coordinates an array of Positions\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<LineString>} LineString Feature\n * @example\n * var linestring1 = turf.lineString([[-24, 63], [-23, 60], [-25, 65], [-20, 69]], {name: 'line 1'});\n * var linestring2 = turf.lineString([[-14, 43], [-13, 40], [-15, 45], [-10, 49]], {name: 'line 2'});\n *\n * //=linestring1\n * //=linestring2\n */\nfunction lineString(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    if (coordinates.length < 2) {\n        throw new Error(\"coordinates must be an array of two or more positions\");\n    }\n    var geom = {\n        type: \"LineString\",\n        coordinates: coordinates,\n    };\n    return feature(geom, properties, options);\n}\nexports.lineString = lineString;\n/**\n * Creates a {@link LineString} {@link FeatureCollection} from an Array of LineString coordinates.\n *\n * @name lineStrings\n * @param {Array<Array<Array<number>>>} coordinates an array of LinearRings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north]\n * associated with the FeatureCollection\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<LineString>} LineString FeatureCollection\n * @example\n * var linestrings = turf.lineStrings([\n *   [[-24, 63], [-23, 60], [-25, 65], [-20, 69]],\n *   [[-14, 43], [-13, 40], [-15, 45], [-10, 49]]\n * ]);\n *\n * //=linestrings\n */\nfunction lineStrings(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    return featureCollection(coordinates.map(function (coords) {\n        return lineString(coords, properties);\n    }), options);\n}\nexports.lineStrings = lineStrings;\n/**\n * Takes one or more {@link Feature|Features} and creates a {@link FeatureCollection}.\n *\n * @name featureCollection\n * @param {Feature[]} features input features\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {FeatureCollection} FeatureCollection of Features\n * @example\n * var locationA = turf.point([-75.343, 39.984], {name: 'Location A'});\n * var locationB = turf.point([-75.833, 39.284], {name: 'Location B'});\n * var locationC = turf.point([-75.534, 39.123], {name: 'Location C'});\n *\n * var collection = turf.featureCollection([\n *   locationA,\n *   locationB,\n *   locationC\n * ]);\n *\n * //=collection\n */\nfunction featureCollection(features, options) {\n    if (options === void 0) { options = {}; }\n    var fc = { type: \"FeatureCollection\" };\n    if (options.id) {\n        fc.id = options.id;\n    }\n    if (options.bbox) {\n        fc.bbox = options.bbox;\n    }\n    fc.features = features;\n    return fc;\n}\nexports.featureCollection = featureCollection;\n/**\n * Creates a {@link Feature<MultiLineString>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiLineString\n * @param {Array<Array<Array<number>>>} coordinates an array of LineStrings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiLineString>} a MultiLineString feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiLine = turf.multiLineString([[[0,0],[10,10]]]);\n *\n * //=multiLine\n */\nfunction multiLineString(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    var geom = {\n        type: \"MultiLineString\",\n        coordinates: coordinates,\n    };\n    return feature(geom, properties, options);\n}\nexports.multiLineString = multiLineString;\n/**\n * Creates a {@link Feature<MultiPoint>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiPoint\n * @param {Array<Array<number>>} coordinates an array of Positions\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiPoint>} a MultiPoint feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiPt = turf.multiPoint([[0,0],[10,10]]);\n *\n * //=multiPt\n */\nfunction multiPoint(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    var geom = {\n        type: \"MultiPoint\",\n        coordinates: coordinates,\n    };\n    return feature(geom, properties, options);\n}\nexports.multiPoint = multiPoint;\n/**\n * Creates a {@link Feature<MultiPolygon>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiPolygon\n * @param {Array<Array<Array<Array<number>>>>} coordinates an array of Polygons\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiPolygon>} a multipolygon feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiPoly = turf.multiPolygon([[[[0,0],[0,10],[10,10],[10,0],[0,0]]]]);\n *\n * //=multiPoly\n *\n */\nfunction multiPolygon(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    var geom = {\n        type: \"MultiPolygon\",\n        coordinates: coordinates,\n    };\n    return feature(geom, properties, options);\n}\nexports.multiPolygon = multiPolygon;\n/**\n * Creates a {@link Feature<GeometryCollection>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name geometryCollection\n * @param {Array<Geometry>} geometries an array of GeoJSON Geometries\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<GeometryCollection>} a GeoJSON GeometryCollection Feature\n * @example\n * var pt = turf.geometry(\"Point\", [100, 0]);\n * var line = turf.geometry(\"LineString\", [[101, 0], [102, 1]]);\n * var collection = turf.geometryCollection([pt, line]);\n *\n * // => collection\n */\nfunction geometryCollection(geometries, properties, options) {\n    if (options === void 0) { options = {}; }\n    var geom = {\n        type: \"GeometryCollection\",\n        geometries: geometries,\n    };\n    return feature(geom, properties, options);\n}\nexports.geometryCollection = geometryCollection;\n/**\n * Round number to precision\n *\n * @param {number} num Number\n * @param {number} [precision=0] Precision\n * @returns {number} rounded number\n * @example\n * turf.round(120.4321)\n * //=120\n *\n * turf.round(120.4321, 2)\n * //=120.43\n */\nfunction round(num, precision) {\n    if (precision === void 0) { precision = 0; }\n    if (precision && !(precision >= 0)) {\n        throw new Error(\"precision must be a positive number\");\n    }\n    var multiplier = Math.pow(10, precision || 0);\n    return Math.round(num * multiplier) / multiplier;\n}\nexports.round = round;\n/**\n * Convert a distance measurement (assuming a spherical Earth) from radians to a more friendly unit.\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @name radiansToLength\n * @param {number} radians in radians across the sphere\n * @param {string} [units=\"kilometers\"] can be degrees, radians, miles, inches, yards, metres,\n * meters, kilometres, kilometers.\n * @returns {number} distance\n */\nfunction radiansToLength(radians, units) {\n    if (units === void 0) { units = \"kilometers\"; }\n    var factor = exports.factors[units];\n    if (!factor) {\n        throw new Error(units + \" units is invalid\");\n    }\n    return radians * factor;\n}\nexports.radiansToLength = radiansToLength;\n/**\n * Convert a distance measurement (assuming a spherical Earth) from a real-world unit into radians\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @name lengthToRadians\n * @param {number} distance in real units\n * @param {string} [units=\"kilometers\"] can be degrees, radians, miles, inches, yards, metres,\n * meters, kilometres, kilometers.\n * @returns {number} radians\n */\nfunction lengthToRadians(distance, units) {\n    if (units === void 0) { units = \"kilometers\"; }\n    var factor = exports.factors[units];\n    if (!factor) {\n        throw new Error(units + \" units is invalid\");\n    }\n    return distance / factor;\n}\nexports.lengthToRadians = lengthToRadians;\n/**\n * Convert a distance measurement (assuming a spherical Earth) from a real-world unit into degrees\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, centimeters, kilometres, feet\n *\n * @name lengthToDegrees\n * @param {number} distance in real units\n * @param {string} [units=\"kilometers\"] can be degrees, radians, miles, inches, yards, metres,\n * meters, kilometres, kilometers.\n * @returns {number} degrees\n */\nfunction lengthToDegrees(distance, units) {\n    return radiansToDegrees(lengthToRadians(distance, units));\n}\nexports.lengthToDegrees = lengthToDegrees;\n/**\n * Converts any bearing angle from the north line direction (positive clockwise)\n * and returns an angle between 0-360 degrees (positive clockwise), 0 being the north line\n *\n * @name bearingToAzimuth\n * @param {number} bearing angle, between -180 and +180 degrees\n * @returns {number} angle between 0 and 360 degrees\n */\nfunction bearingToAzimuth(bearing) {\n    var angle = bearing % 360;\n    if (angle < 0) {\n        angle += 360;\n    }\n    return angle;\n}\nexports.bearingToAzimuth = bearingToAzimuth;\n/**\n * Converts an angle in radians to degrees\n *\n * @name radiansToDegrees\n * @param {number} radians angle in radians\n * @returns {number} degrees between 0 and 360 degrees\n */\nfunction radiansToDegrees(radians) {\n    var degrees = radians % (2 * Math.PI);\n    return (degrees * 180) / Math.PI;\n}\nexports.radiansToDegrees = radiansToDegrees;\n/**\n * Converts an angle in degrees to radians\n *\n * @name degreesToRadians\n * @param {number} degrees angle between 0 and 360 degrees\n * @returns {number} angle in radians\n */\nfunction degreesToRadians(degrees) {\n    var radians = degrees % 360;\n    return (radians * Math.PI) / 180;\n}\nexports.degreesToRadians = degreesToRadians;\n/**\n * Converts a length to the requested unit.\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @param {number} length to be converted\n * @param {Units} [originalUnit=\"kilometers\"] of the length\n * @param {Units} [finalUnit=\"kilometers\"] returned unit\n * @returns {number} the converted length\n */\nfunction convertLength(length, originalUnit, finalUnit) {\n    if (originalUnit === void 0) { originalUnit = \"kilometers\"; }\n    if (finalUnit === void 0) { finalUnit = \"kilometers\"; }\n    if (!(length >= 0)) {\n        throw new Error(\"length must be a positive number\");\n    }\n    return radiansToLength(lengthToRadians(length, originalUnit), finalUnit);\n}\nexports.convertLength = convertLength;\n/**\n * Converts a area to the requested unit.\n * Valid units: kilometers, kilometres, meters, metres, centimetres, millimeters, acres, miles, yards, feet, inches, hectares\n * @param {number} area to be converted\n * @param {Units} [originalUnit=\"meters\"] of the distance\n * @param {Units} [finalUnit=\"kilometers\"] returned unit\n * @returns {number} the converted area\n */\nfunction convertArea(area, originalUnit, finalUnit) {\n    if (originalUnit === void 0) { originalUnit = \"meters\"; }\n    if (finalUnit === void 0) { finalUnit = \"kilometers\"; }\n    if (!(area >= 0)) {\n        throw new Error(\"area must be a positive number\");\n    }\n    var startFactor = exports.areaFactors[originalUnit];\n    if (!startFactor) {\n        throw new Error(\"invalid original units\");\n    }\n    var finalFactor = exports.areaFactors[finalUnit];\n    if (!finalFactor) {\n        throw new Error(\"invalid final units\");\n    }\n    return (area / startFactor) * finalFactor;\n}\nexports.convertArea = convertArea;\n/**\n * isNumber\n *\n * @param {*} num Number to validate\n * @returns {boolean} true/false\n * @example\n * turf.isNumber(123)\n * //=true\n * turf.isNumber('foo')\n * //=false\n */\nfunction isNumber(num) {\n    return !isNaN(num) && num !== null && !Array.isArray(num);\n}\nexports.isNumber = isNumber;\n/**\n * isObject\n *\n * @param {*} input variable to validate\n * @returns {boolean} true/false\n * @example\n * turf.isObject({elevation: 10})\n * //=true\n * turf.isObject('foo')\n * //=false\n */\nfunction isObject(input) {\n    return !!input && input.constructor === Object;\n}\nexports.isObject = isObject;\n/**\n * Validate BBox\n *\n * @private\n * @param {Array<number>} bbox BBox to validate\n * @returns {void}\n * @throws Error if BBox is not valid\n * @example\n * validateBBox([-180, -40, 110, 50])\n * //=OK\n * validateBBox([-180, -40])\n * //=Error\n * validateBBox('Foo')\n * //=Error\n * validateBBox(5)\n * //=Error\n * validateBBox(null)\n * //=Error\n * validateBBox(undefined)\n * //=Error\n */\nfunction validateBBox(bbox) {\n    if (!bbox) {\n        throw new Error(\"bbox is required\");\n    }\n    if (!Array.isArray(bbox)) {\n        throw new Error(\"bbox must be an Array\");\n    }\n    if (bbox.length !== 4 && bbox.length !== 6) {\n        throw new Error(\"bbox must be an Array of 4 or 6 numbers\");\n    }\n    bbox.forEach(function (num) {\n        if (!isNumber(num)) {\n            throw new Error(\"bbox must only contain numbers\");\n        }\n    });\n}\nexports.validateBBox = validateBBox;\n/**\n * Validate Id\n *\n * @private\n * @param {string|number} id Id to validate\n * @returns {void}\n * @throws Error if Id is not valid\n * @example\n * validateId([-180, -40, 110, 50])\n * //=Error\n * validateId([-180, -40])\n * //=Error\n * validateId('Foo')\n * //=OK\n * validateId(5)\n * //=OK\n * validateId(null)\n * //=Error\n * validateId(undefined)\n * //=Error\n */\nfunction validateId(id) {\n    if (!id) {\n        throw new Error(\"id is required\");\n    }\n    if ([\"string\", \"number\"].indexOf(typeof id) === -1) {\n        throw new Error(\"id must be a number or a string\");\n    }\n}\nexports.validateId = validateId;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar helpers_1 = require(\"@turf/helpers\");\nvar invariant_1 = require(\"@turf/invariant\");\nvar polygon_clipping_1 = __importDefault(require(\"polygon-clipping\"));\n/**\n * Takes two {@link Polygon|polygon} or {@link MultiPolygon|multi-polygon} geometries and\n * finds their polygonal intersection. If they don't intersect, returns null.\n *\n * @name intersect\n * @param {Feature<Polygon | MultiPolygon>} poly1 the first polygon or multipolygon\n * @param {Feature<Polygon | MultiPolygon>} poly2 the second polygon or multipolygon\n * @param {Object} [options={}] Optional Parameters\n * @param {Object} [options.properties={}] Translate GeoJSON Properties to Feature\n * @returns {Feature|null} returns a feature representing the area they share (either a {@link Polygon} or\n * {@link MultiPolygon}). If they do not share any area, returns `null`.\n * @example\n * var poly1 = turf.polygon([[\n *   [-122.801742, 45.48565],\n *   [-122.801742, 45.60491],\n *   [-122.584762, 45.60491],\n *   [-122.584762, 45.48565],\n *   [-122.801742, 45.48565]\n * ]]);\n *\n * var poly2 = turf.polygon([[\n *   [-122.520217, 45.535693],\n *   [-122.64038, 45.553967],\n *   [-122.720031, 45.526554],\n *   [-122.669906, 45.507309],\n *   [-122.723464, 45.446643],\n *   [-122.532577, 45.408574],\n *   [-122.487258, 45.477466],\n *   [-122.520217, 45.535693]\n * ]]);\n *\n * var intersection = turf.intersect(poly1, poly2);\n *\n * //addToMap\n * var addToMap = [poly1, poly2, intersection];\n */\nfunction intersect(poly1, poly2, options) {\n    if (options === void 0) { options = {}; }\n    var geom1 = invariant_1.getGeom(poly1);\n    var geom2 = invariant_1.getGeom(poly2);\n    var intersection = polygon_clipping_1.default.intersection(geom1.coordinates, geom2.coordinates);\n    if (intersection.length === 0)\n        return null;\n    if (intersection.length === 1)\n        return helpers_1.polygon(intersection[0], options.properties);\n    return helpers_1.multiPolygon(intersection, options.properties);\n}\nexports.default = intersect;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar helpers_1 = require(\"@turf/helpers\");\n/**\n * Unwrap a coordinate from a Point Feature, Geometry or a single coordinate.\n *\n * @name getCoord\n * @param {Array<number>|Geometry<Point>|Feature<Point>} coord GeoJSON Point or an Array of numbers\n * @returns {Array<number>} coordinates\n * @example\n * var pt = turf.point([10, 10]);\n *\n * var coord = turf.getCoord(pt);\n * //= [10, 10]\n */\nfunction getCoord(coord) {\n    if (!coord) {\n        throw new Error(\"coord is required\");\n    }\n    if (!Array.isArray(coord)) {\n        if (coord.type === \"Feature\" &&\n            coord.geometry !== null &&\n            coord.geometry.type === \"Point\") {\n            return coord.geometry.coordinates;\n        }\n        if (coord.type === \"Point\") {\n            return coord.coordinates;\n        }\n    }\n    if (Array.isArray(coord) &&\n        coord.length >= 2 &&\n        !Array.isArray(coord[0]) &&\n        !Array.isArray(coord[1])) {\n        return coord;\n    }\n    throw new Error(\"coord must be GeoJSON Point or an Array of numbers\");\n}\nexports.getCoord = getCoord;\n/**\n * Unwrap coordinates from a Feature, Geometry Object or an Array\n *\n * @name getCoords\n * @param {Array<any>|Geometry|Feature} coords Feature, Geometry Object or an Array\n * @returns {Array<any>} coordinates\n * @example\n * var poly = turf.polygon([[[119.32, -8.7], [119.55, -8.69], [119.51, -8.54], [119.32, -8.7]]]);\n *\n * var coords = turf.getCoords(poly);\n * //= [[[119.32, -8.7], [119.55, -8.69], [119.51, -8.54], [119.32, -8.7]]]\n */\nfunction getCoords(coords) {\n    if (Array.isArray(coords)) {\n        return coords;\n    }\n    // Feature\n    if (coords.type === \"Feature\") {\n        if (coords.geometry !== null) {\n            return coords.geometry.coordinates;\n        }\n    }\n    else {\n        // Geometry\n        if (coords.coordinates) {\n            return coords.coordinates;\n        }\n    }\n    throw new Error(\"coords must be GeoJSON Feature, Geometry Object or an Array\");\n}\nexports.getCoords = getCoords;\n/**\n * Checks if coordinates contains a number\n *\n * @name containsNumber\n * @param {Array<any>} coordinates GeoJSON Coordinates\n * @returns {boolean} true if Array contains a number\n */\nfunction containsNumber(coordinates) {\n    if (coordinates.length > 1 &&\n        helpers_1.isNumber(coordinates[0]) &&\n        helpers_1.isNumber(coordinates[1])) {\n        return true;\n    }\n    if (Array.isArray(coordinates[0]) && coordinates[0].length) {\n        return containsNumber(coordinates[0]);\n    }\n    throw new Error(\"coordinates must only contain numbers\");\n}\nexports.containsNumber = containsNumber;\n/**\n * Enforce expectations about types of GeoJSON objects for Turf.\n *\n * @name geojsonType\n * @param {GeoJSON} value any GeoJSON object\n * @param {string} type expected GeoJSON type\n * @param {string} name name of calling function\n * @throws {Error} if value is not the expected type.\n */\nfunction geojsonType(value, type, name) {\n    if (!type || !name) {\n        throw new Error(\"type and name required\");\n    }\n    if (!value || value.type !== type) {\n        throw new Error(\"Invalid input to \" +\n            name +\n            \": must be a \" +\n            type +\n            \", given \" +\n            value.type);\n    }\n}\nexports.geojsonType = geojsonType;\n/**\n * Enforce expectations about types of {@link Feature} inputs for Turf.\n * Internally this uses {@link geojsonType} to judge geometry types.\n *\n * @name featureOf\n * @param {Feature} feature a feature with an expected geometry type\n * @param {string} type expected GeoJSON type\n * @param {string} name name of calling function\n * @throws {Error} error if value is not the expected type.\n */\nfunction featureOf(feature, type, name) {\n    if (!feature) {\n        throw new Error(\"No feature passed\");\n    }\n    if (!name) {\n        throw new Error(\".featureOf() requires a name\");\n    }\n    if (!feature || feature.type !== \"Feature\" || !feature.geometry) {\n        throw new Error(\"Invalid input to \" + name + \", Feature with geometry required\");\n    }\n    if (!feature.geometry || feature.geometry.type !== type) {\n        throw new Error(\"Invalid input to \" +\n            name +\n            \": must be a \" +\n            type +\n            \", given \" +\n            feature.geometry.type);\n    }\n}\nexports.featureOf = featureOf;\n/**\n * Enforce expectations about types of {@link FeatureCollection} inputs for Turf.\n * Internally this uses {@link geojsonType} to judge geometry types.\n *\n * @name collectionOf\n * @param {FeatureCollection} featureCollection a FeatureCollection for which features will be judged\n * @param {string} type expected GeoJSON type\n * @param {string} name name of calling function\n * @throws {Error} if value is not the expected type.\n */\nfunction collectionOf(featureCollection, type, name) {\n    if (!featureCollection) {\n        throw new Error(\"No featureCollection passed\");\n    }\n    if (!name) {\n        throw new Error(\".collectionOf() requires a name\");\n    }\n    if (!featureCollection || featureCollection.type !== \"FeatureCollection\") {\n        throw new Error(\"Invalid input to \" + name + \", FeatureCollection required\");\n    }\n    for (var _i = 0, _a = featureCollection.features; _i < _a.length; _i++) {\n        var feature = _a[_i];\n        if (!feature || feature.type !== \"Feature\" || !feature.geometry) {\n            throw new Error(\"Invalid input to \" + name + \", Feature with geometry required\");\n        }\n        if (!feature.geometry || feature.geometry.type !== type) {\n            throw new Error(\"Invalid input to \" +\n                name +\n                \": must be a \" +\n                type +\n                \", given \" +\n                feature.geometry.type);\n        }\n    }\n}\nexports.collectionOf = collectionOf;\n/**\n * Get Geometry from Feature or Geometry Object\n *\n * @param {Feature|Geometry} geojson GeoJSON Feature or Geometry Object\n * @returns {Geometry|null} GeoJSON Geometry Object\n * @throws {Error} if geojson is not a Feature or Geometry Object\n * @example\n * var point = {\n *   \"type\": \"Feature\",\n *   \"properties\": {},\n *   \"geometry\": {\n *     \"type\": \"Point\",\n *     \"coordinates\": [110, 40]\n *   }\n * }\n * var geom = turf.getGeom(point)\n * //={\"type\": \"Point\", \"coordinates\": [110, 40]}\n */\nfunction getGeom(geojson) {\n    if (geojson.type === \"Feature\") {\n        return geojson.geometry;\n    }\n    return geojson;\n}\nexports.getGeom = getGeom;\n/**\n * Get GeoJSON object's type, Geometry type is prioritize.\n *\n * @param {GeoJSON} geojson GeoJSON object\n * @param {string} [name=\"geojson\"] name of the variable to display in error message (unused)\n * @returns {string} GeoJSON type\n * @example\n * var point = {\n *   \"type\": \"Feature\",\n *   \"properties\": {},\n *   \"geometry\": {\n *     \"type\": \"Point\",\n *     \"coordinates\": [110, 40]\n *   }\n * }\n * var geom = turf.getType(point)\n * //=\"Point\"\n */\nfunction getType(geojson, _name) {\n    if (geojson.type === \"FeatureCollection\") {\n        return \"FeatureCollection\";\n    }\n    if (geojson.type === \"GeometryCollection\") {\n        return \"GeometryCollection\";\n    }\n    if (geojson.type === \"Feature\" && geojson.geometry !== null) {\n        return geojson.geometry.type;\n    }\n    return geojson.type;\n}\nexports.getType = getType;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar helpers_1 = require(\"@turf/helpers\");\nvar invariant_1 = require(\"@turf/invariant\");\nvar line_segment_1 = __importDefault(require(\"@turf/line-segment\"));\nvar meta_1 = require(\"@turf/meta\");\nvar geojson_rbush_1 = __importDefault(require(\"geojson-rbush\"));\n/**\n * Takes any LineString or Polygon GeoJSON and returns the intersecting point(s).\n *\n * @name lineIntersect\n * @param {GeoJSON} line1 any LineString or Polygon\n * @param {GeoJSON} line2 any LineString or Polygon\n * @returns {FeatureCollection<Point>} point(s) that intersect both\n * @example\n * var line1 = turf.lineString([[126, -11], [129, -21]]);\n * var line2 = turf.lineString([[123, -18], [131, -14]]);\n * var intersects = turf.lineIntersect(line1, line2);\n *\n * //addToMap\n * var addToMap = [line1, line2, intersects]\n */\nfunction lineIntersect(line1, line2) {\n    var unique = {};\n    var results = [];\n    // First, normalize geometries to features\n    // Then, handle simple 2-vertex segments\n    if (line1.type === \"LineString\") {\n        line1 = helpers_1.feature(line1);\n    }\n    if (line2.type === \"LineString\") {\n        line2 = helpers_1.feature(line2);\n    }\n    if (line1.type === \"Feature\" &&\n        line2.type === \"Feature\" &&\n        line1.geometry !== null &&\n        line2.geometry !== null &&\n        line1.geometry.type === \"LineString\" &&\n        line2.geometry.type === \"LineString\" &&\n        line1.geometry.coordinates.length === 2 &&\n        line2.geometry.coordinates.length === 2) {\n        var intersect = intersects(line1, line2);\n        if (intersect) {\n            results.push(intersect);\n        }\n        return helpers_1.featureCollection(results);\n    }\n    // Handles complex GeoJSON Geometries\n    var tree = geojson_rbush_1.default();\n    tree.load(line_segment_1.default(line2));\n    meta_1.featureEach(line_segment_1.default(line1), function (segment) {\n        meta_1.featureEach(tree.search(segment), function (match) {\n            var intersect = intersects(segment, match);\n            if (intersect) {\n                // prevent duplicate points https://github.com/Turfjs/turf/issues/688\n                var key = invariant_1.getCoords(intersect).join(\",\");\n                if (!unique[key]) {\n                    unique[key] = true;\n                    results.push(intersect);\n                }\n            }\n        });\n    });\n    return helpers_1.featureCollection(results);\n}\n/**\n * Find a point that intersects LineStrings with two coordinates each\n *\n * @private\n * @param {Feature<LineString>} line1 GeoJSON LineString (Must only contain 2 coordinates)\n * @param {Feature<LineString>} line2 GeoJSON LineString (Must only contain 2 coordinates)\n * @returns {Feature<Point>} intersecting GeoJSON Point\n */\nfunction intersects(line1, line2) {\n    var coords1 = invariant_1.getCoords(line1);\n    var coords2 = invariant_1.getCoords(line2);\n    if (coords1.length !== 2) {\n        throw new Error(\"<intersects> line1 must only contain 2 coordinates\");\n    }\n    if (coords2.length !== 2) {\n        throw new Error(\"<intersects> line2 must only contain 2 coordinates\");\n    }\n    var x1 = coords1[0][0];\n    var y1 = coords1[0][1];\n    var x2 = coords1[1][0];\n    var y2 = coords1[1][1];\n    var x3 = coords2[0][0];\n    var y3 = coords2[0][1];\n    var x4 = coords2[1][0];\n    var y4 = coords2[1][1];\n    var denom = (y4 - y3) * (x2 - x1) - (x4 - x3) * (y2 - y1);\n    var numeA = (x4 - x3) * (y1 - y3) - (y4 - y3) * (x1 - x3);\n    var numeB = (x2 - x1) * (y1 - y3) - (y2 - y1) * (x1 - x3);\n    if (denom === 0) {\n        if (numeA === 0 && numeB === 0) {\n            return null;\n        }\n        return null;\n    }\n    var uA = numeA / denom;\n    var uB = numeB / denom;\n    if (uA >= 0 && uA <= 1 && uB >= 0 && uB <= 1) {\n        var x = x1 + uA * (x2 - x1);\n        var y = y1 + uA * (y2 - y1);\n        return helpers_1.point([x, y]);\n    }\n    return null;\n}\nexports.default = lineIntersect;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar helpers_1 = require(\"@turf/helpers\");\nvar invariant_1 = require(\"@turf/invariant\");\nvar meta_1 = require(\"@turf/meta\");\n/**\n * Creates a {@link FeatureCollection} of 2-vertex {@link LineString} segments from a\n * {@link LineString|(Multi)LineString} or {@link Polygon|(Multi)Polygon}.\n *\n * @name lineSegment\n * @param {GeoJSON} geojson GeoJSON Polygon or LineString\n * @returns {FeatureCollection<LineString>} 2-vertex line segments\n * @example\n * var polygon = turf.polygon([[[-50, 5], [-40, -10], [-50, -10], [-40, 5], [-50, 5]]]);\n * var segments = turf.lineSegment(polygon);\n *\n * //addToMap\n * var addToMap = [polygon, segments]\n */\nfunction lineSegment(geojson) {\n    if (!geojson) {\n        throw new Error(\"geojson is required\");\n    }\n    var results = [];\n    meta_1.flattenEach(geojson, function (feature) {\n        lineSegmentFeature(feature, results);\n    });\n    return helpers_1.featureCollection(results);\n}\n/**\n * Line Segment\n *\n * @private\n * @param {Feature<LineString|Polygon>} geojson Line or polygon feature\n * @param {Array} results push to results\n * @returns {void}\n */\nfunction lineSegmentFeature(geojson, results) {\n    var coords = [];\n    var geometry = geojson.geometry;\n    if (geometry !== null) {\n        switch (geometry.type) {\n            case \"Polygon\":\n                coords = invariant_1.getCoords(geometry);\n                break;\n            case \"LineString\":\n                coords = [invariant_1.getCoords(geometry)];\n        }\n        coords.forEach(function (coord) {\n            var segments = createSegments(coord, geojson.properties);\n            segments.forEach(function (segment) {\n                segment.id = results.length;\n                results.push(segment);\n            });\n        });\n    }\n}\n/**\n * Create Segments from LineString coordinates\n *\n * @private\n * @param {Array<Array<number>>} coords LineString coordinates\n * @param {*} properties GeoJSON properties\n * @returns {Array<Feature<LineString>>} line segments\n */\nfunction createSegments(coords, properties) {\n    var segments = [];\n    coords.reduce(function (previousCoords, currentCoords) {\n        var segment = helpers_1.lineString([previousCoords, currentCoords], properties);\n        segment.bbox = bbox(previousCoords, currentCoords);\n        segments.push(segment);\n        return currentCoords;\n    });\n    return segments;\n}\n/**\n * Create BBox between two coordinates (faster than @turf/bbox)\n *\n * @private\n * @param {Array<number>} coords1 Point coordinate\n * @param {Array<number>} coords2 Point coordinate\n * @returns {BBox} [west, south, east, north]\n */\nfunction bbox(coords1, coords2) {\n    var x1 = coords1[0];\n    var y1 = coords1[1];\n    var x2 = coords2[0];\n    var y2 = coords2[1];\n    var west = x1 < x2 ? x1 : x2;\n    var south = y1 < y2 ? y1 : y2;\n    var east = x1 > x2 ? x1 : x2;\n    var north = y1 > y2 ? y1 : y2;\n    return [west, south, east, north];\n}\nexports.default = lineSegment;\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar helpers = require('@turf/helpers');\n\n/**\n * Callback for coordEach\n *\n * @callback coordEachCallback\n * @param {Array<number>} currentCoord The current coordinate being processed.\n * @param {number} coordIndex The current index of the coordinate being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n * @param {number} geometryIndex The current index of the Geometry being processed.\n */\n\n/**\n * Iterate over coordinates in any GeoJSON object, similar to Array.forEach()\n *\n * @name coordEach\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (currentCoord, coordIndex, featureIndex, multiFeatureIndex)\n * @param {boolean} [excludeWrapCoord=false] whether or not to include the final coordinate of LinearRings that wraps the ring in its iteration.\n * @returns {void}\n * @example\n * var features = turf.featureCollection([\n *   turf.point([26, 37], {\"foo\": \"bar\"}),\n *   turf.point([36, 53], {\"hello\": \"world\"})\n * ]);\n *\n * turf.coordEach(features, function (currentCoord, coordIndex, featureIndex, multiFeatureIndex, geometryIndex) {\n *   //=currentCoord\n *   //=coordIndex\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   //=geometryIndex\n * });\n */\nfunction coordEach(geojson, callback, excludeWrapCoord) {\n  // Handles null Geometry -- Skips this GeoJSON\n  if (geojson === null) return;\n  var j,\n    k,\n    l,\n    geometry,\n    stopG,\n    coords,\n    geometryMaybeCollection,\n    wrapShrink = 0,\n    coordIndex = 0,\n    isGeometryCollection,\n    type = geojson.type,\n    isFeatureCollection = type === \"FeatureCollection\",\n    isFeature = type === \"Feature\",\n    stop = isFeatureCollection ? geojson.features.length : 1;\n\n  // This logic may look a little weird. The reason why it is that way\n  // is because it's trying to be fast. GeoJSON supports multiple kinds\n  // of objects at its root: FeatureCollection, Features, Geometries.\n  // This function has the responsibility of handling all of them, and that\n  // means that some of the `for` loops you see below actually just don't apply\n  // to certain inputs. For instance, if you give this just a\n  // Point geometry, then both loops are short-circuited and all we do\n  // is gradually rename the input until it's called 'geometry'.\n  //\n  // This also aims to allocate as few resources as possible: just a\n  // few numbers and booleans, rather than any temporary arrays as would\n  // be required with the normalization approach.\n  for (var featureIndex = 0; featureIndex < stop; featureIndex++) {\n    geometryMaybeCollection = isFeatureCollection\n      ? geojson.features[featureIndex].geometry\n      : isFeature\n      ? geojson.geometry\n      : geojson;\n    isGeometryCollection = geometryMaybeCollection\n      ? geometryMaybeCollection.type === \"GeometryCollection\"\n      : false;\n    stopG = isGeometryCollection\n      ? geometryMaybeCollection.geometries.length\n      : 1;\n\n    for (var geomIndex = 0; geomIndex < stopG; geomIndex++) {\n      var multiFeatureIndex = 0;\n      var geometryIndex = 0;\n      geometry = isGeometryCollection\n        ? geometryMaybeCollection.geometries[geomIndex]\n        : geometryMaybeCollection;\n\n      // Handles null Geometry -- Skips this geometry\n      if (geometry === null) continue;\n      coords = geometry.coordinates;\n      var geomType = geometry.type;\n\n      wrapShrink =\n        excludeWrapCoord &&\n        (geomType === \"Polygon\" || geomType === \"MultiPolygon\")\n          ? 1\n          : 0;\n\n      switch (geomType) {\n        case null:\n          break;\n        case \"Point\":\n          if (\n            callback(\n              coords,\n              coordIndex,\n              featureIndex,\n              multiFeatureIndex,\n              geometryIndex\n            ) === false\n          )\n            return false;\n          coordIndex++;\n          multiFeatureIndex++;\n          break;\n        case \"LineString\":\n        case \"MultiPoint\":\n          for (j = 0; j < coords.length; j++) {\n            if (\n              callback(\n                coords[j],\n                coordIndex,\n                featureIndex,\n                multiFeatureIndex,\n                geometryIndex\n              ) === false\n            )\n              return false;\n            coordIndex++;\n            if (geomType === \"MultiPoint\") multiFeatureIndex++;\n          }\n          if (geomType === \"LineString\") multiFeatureIndex++;\n          break;\n        case \"Polygon\":\n        case \"MultiLineString\":\n          for (j = 0; j < coords.length; j++) {\n            for (k = 0; k < coords[j].length - wrapShrink; k++) {\n              if (\n                callback(\n                  coords[j][k],\n                  coordIndex,\n                  featureIndex,\n                  multiFeatureIndex,\n                  geometryIndex\n                ) === false\n              )\n                return false;\n              coordIndex++;\n            }\n            if (geomType === \"MultiLineString\") multiFeatureIndex++;\n            if (geomType === \"Polygon\") geometryIndex++;\n          }\n          if (geomType === \"Polygon\") multiFeatureIndex++;\n          break;\n        case \"MultiPolygon\":\n          for (j = 0; j < coords.length; j++) {\n            geometryIndex = 0;\n            for (k = 0; k < coords[j].length; k++) {\n              for (l = 0; l < coords[j][k].length - wrapShrink; l++) {\n                if (\n                  callback(\n                    coords[j][k][l],\n                    coordIndex,\n                    featureIndex,\n                    multiFeatureIndex,\n                    geometryIndex\n                  ) === false\n                )\n                  return false;\n                coordIndex++;\n              }\n              geometryIndex++;\n            }\n            multiFeatureIndex++;\n          }\n          break;\n        case \"GeometryCollection\":\n          for (j = 0; j < geometry.geometries.length; j++)\n            if (\n              coordEach(geometry.geometries[j], callback, excludeWrapCoord) ===\n              false\n            )\n              return false;\n          break;\n        default:\n          throw new Error(\"Unknown Geometry Type\");\n      }\n    }\n  }\n}\n\n/**\n * Callback for coordReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback coordReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Array<number>} currentCoord The current coordinate being processed.\n * @param {number} coordIndex The current index of the coordinate being processed.\n * Starts at index 0, if an initialValue is provided, and at index 1 otherwise.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n * @param {number} geometryIndex The current index of the Geometry being processed.\n */\n\n/**\n * Reduce coordinates in any GeoJSON object, similar to Array.reduce()\n *\n * @name coordReduce\n * @param {FeatureCollection|Geometry|Feature} geojson any GeoJSON object\n * @param {Function} callback a method that takes (previousValue, currentCoord, coordIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @param {boolean} [excludeWrapCoord=false] whether or not to include the final coordinate of LinearRings that wraps the ring in its iteration.\n * @returns {*} The value that results from the reduction.\n * @example\n * var features = turf.featureCollection([\n *   turf.point([26, 37], {\"foo\": \"bar\"}),\n *   turf.point([36, 53], {\"hello\": \"world\"})\n * ]);\n *\n * turf.coordReduce(features, function (previousValue, currentCoord, coordIndex, featureIndex, multiFeatureIndex, geometryIndex) {\n *   //=previousValue\n *   //=currentCoord\n *   //=coordIndex\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   //=geometryIndex\n *   return currentCoord;\n * });\n */\nfunction coordReduce(geojson, callback, initialValue, excludeWrapCoord) {\n  var previousValue = initialValue;\n  coordEach(\n    geojson,\n    function (\n      currentCoord,\n      coordIndex,\n      featureIndex,\n      multiFeatureIndex,\n      geometryIndex\n    ) {\n      if (coordIndex === 0 && initialValue === undefined)\n        previousValue = currentCoord;\n      else\n        previousValue = callback(\n          previousValue,\n          currentCoord,\n          coordIndex,\n          featureIndex,\n          multiFeatureIndex,\n          geometryIndex\n        );\n    },\n    excludeWrapCoord\n  );\n  return previousValue;\n}\n\n/**\n * Callback for propEach\n *\n * @callback propEachCallback\n * @param {Object} currentProperties The current Properties being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n */\n\n/**\n * Iterate over properties in any GeoJSON object, similar to Array.forEach()\n *\n * @name propEach\n * @param {FeatureCollection|Feature} geojson any GeoJSON object\n * @param {Function} callback a method that takes (currentProperties, featureIndex)\n * @returns {void}\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * turf.propEach(features, function (currentProperties, featureIndex) {\n *   //=currentProperties\n *   //=featureIndex\n * });\n */\nfunction propEach(geojson, callback) {\n  var i;\n  switch (geojson.type) {\n    case \"FeatureCollection\":\n      for (i = 0; i < geojson.features.length; i++) {\n        if (callback(geojson.features[i].properties, i) === false) break;\n      }\n      break;\n    case \"Feature\":\n      callback(geojson.properties, 0);\n      break;\n  }\n}\n\n/**\n * Callback for propReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback propReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {*} currentProperties The current Properties being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n */\n\n/**\n * Reduce properties in any GeoJSON object into a single value,\n * similar to how Array.reduce works. However, in this case we lazily run\n * the reduction, so an array of all properties is unnecessary.\n *\n * @name propReduce\n * @param {FeatureCollection|Feature} geojson any GeoJSON object\n * @param {Function} callback a method that takes (previousValue, currentProperties, featureIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {*} The value that results from the reduction.\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * turf.propReduce(features, function (previousValue, currentProperties, featureIndex) {\n *   //=previousValue\n *   //=currentProperties\n *   //=featureIndex\n *   return currentProperties\n * });\n */\nfunction propReduce(geojson, callback, initialValue) {\n  var previousValue = initialValue;\n  propEach(geojson, function (currentProperties, featureIndex) {\n    if (featureIndex === 0 && initialValue === undefined)\n      previousValue = currentProperties;\n    else\n      previousValue = callback(previousValue, currentProperties, featureIndex);\n  });\n  return previousValue;\n}\n\n/**\n * Callback for featureEach\n *\n * @callback featureEachCallback\n * @param {Feature<any>} currentFeature The current Feature being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n */\n\n/**\n * Iterate over features in any GeoJSON object, similar to\n * Array.forEach.\n *\n * @name featureEach\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (currentFeature, featureIndex)\n * @returns {void}\n * @example\n * var features = turf.featureCollection([\n *   turf.point([26, 37], {foo: 'bar'}),\n *   turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * turf.featureEach(features, function (currentFeature, featureIndex) {\n *   //=currentFeature\n *   //=featureIndex\n * });\n */\nfunction featureEach(geojson, callback) {\n  if (geojson.type === \"Feature\") {\n    callback(geojson, 0);\n  } else if (geojson.type === \"FeatureCollection\") {\n    for (var i = 0; i < geojson.features.length; i++) {\n      if (callback(geojson.features[i], i) === false) break;\n    }\n  }\n}\n\n/**\n * Callback for featureReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback featureReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Feature} currentFeature The current Feature being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n */\n\n/**\n * Reduce features in any GeoJSON object, similar to Array.reduce().\n *\n * @name featureReduce\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (previousValue, currentFeature, featureIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {*} The value that results from the reduction.\n * @example\n * var features = turf.featureCollection([\n *   turf.point([26, 37], {\"foo\": \"bar\"}),\n *   turf.point([36, 53], {\"hello\": \"world\"})\n * ]);\n *\n * turf.featureReduce(features, function (previousValue, currentFeature, featureIndex) {\n *   //=previousValue\n *   //=currentFeature\n *   //=featureIndex\n *   return currentFeature\n * });\n */\nfunction featureReduce(geojson, callback, initialValue) {\n  var previousValue = initialValue;\n  featureEach(geojson, function (currentFeature, featureIndex) {\n    if (featureIndex === 0 && initialValue === undefined)\n      previousValue = currentFeature;\n    else previousValue = callback(previousValue, currentFeature, featureIndex);\n  });\n  return previousValue;\n}\n\n/**\n * Get all coordinates from any GeoJSON object.\n *\n * @name coordAll\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @returns {Array<Array<number>>} coordinate position array\n * @example\n * var features = turf.featureCollection([\n *   turf.point([26, 37], {foo: 'bar'}),\n *   turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * var coords = turf.coordAll(features);\n * //= [[26, 37], [36, 53]]\n */\nfunction coordAll(geojson) {\n  var coords = [];\n  coordEach(geojson, function (coord) {\n    coords.push(coord);\n  });\n  return coords;\n}\n\n/**\n * Callback for geomEach\n *\n * @callback geomEachCallback\n * @param {Geometry} currentGeometry The current Geometry being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {Object} featureProperties The current Feature Properties being processed.\n * @param {Array<number>} featureBBox The current Feature BBox being processed.\n * @param {number|string} featureId The current Feature Id being processed.\n */\n\n/**\n * Iterate over each geometry in any GeoJSON object, similar to Array.forEach()\n *\n * @name geomEach\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (currentGeometry, featureIndex, featureProperties, featureBBox, featureId)\n * @returns {void}\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * turf.geomEach(features, function (currentGeometry, featureIndex, featureProperties, featureBBox, featureId) {\n *   //=currentGeometry\n *   //=featureIndex\n *   //=featureProperties\n *   //=featureBBox\n *   //=featureId\n * });\n */\nfunction geomEach(geojson, callback) {\n  var i,\n    j,\n    g,\n    geometry,\n    stopG,\n    geometryMaybeCollection,\n    isGeometryCollection,\n    featureProperties,\n    featureBBox,\n    featureId,\n    featureIndex = 0,\n    isFeatureCollection = geojson.type === \"FeatureCollection\",\n    isFeature = geojson.type === \"Feature\",\n    stop = isFeatureCollection ? geojson.features.length : 1;\n\n  // This logic may look a little weird. The reason why it is that way\n  // is because it's trying to be fast. GeoJSON supports multiple kinds\n  // of objects at its root: FeatureCollection, Features, Geometries.\n  // This function has the responsibility of handling all of them, and that\n  // means that some of the `for` loops you see below actually just don't apply\n  // to certain inputs. For instance, if you give this just a\n  // Point geometry, then both loops are short-circuited and all we do\n  // is gradually rename the input until it's called 'geometry'.\n  //\n  // This also aims to allocate as few resources as possible: just a\n  // few numbers and booleans, rather than any temporary arrays as would\n  // be required with the normalization approach.\n  for (i = 0; i < stop; i++) {\n    geometryMaybeCollection = isFeatureCollection\n      ? geojson.features[i].geometry\n      : isFeature\n      ? geojson.geometry\n      : geojson;\n    featureProperties = isFeatureCollection\n      ? geojson.features[i].properties\n      : isFeature\n      ? geojson.properties\n      : {};\n    featureBBox = isFeatureCollection\n      ? geojson.features[i].bbox\n      : isFeature\n      ? geojson.bbox\n      : undefined;\n    featureId = isFeatureCollection\n      ? geojson.features[i].id\n      : isFeature\n      ? geojson.id\n      : undefined;\n    isGeometryCollection = geometryMaybeCollection\n      ? geometryMaybeCollection.type === \"GeometryCollection\"\n      : false;\n    stopG = isGeometryCollection\n      ? geometryMaybeCollection.geometries.length\n      : 1;\n\n    for (g = 0; g < stopG; g++) {\n      geometry = isGeometryCollection\n        ? geometryMaybeCollection.geometries[g]\n        : geometryMaybeCollection;\n\n      // Handle null Geometry\n      if (geometry === null) {\n        if (\n          callback(\n            null,\n            featureIndex,\n            featureProperties,\n            featureBBox,\n            featureId\n          ) === false\n        )\n          return false;\n        continue;\n      }\n      switch (geometry.type) {\n        case \"Point\":\n        case \"LineString\":\n        case \"MultiPoint\":\n        case \"Polygon\":\n        case \"MultiLineString\":\n        case \"MultiPolygon\": {\n          if (\n            callback(\n              geometry,\n              featureIndex,\n              featureProperties,\n              featureBBox,\n              featureId\n            ) === false\n          )\n            return false;\n          break;\n        }\n        case \"GeometryCollection\": {\n          for (j = 0; j < geometry.geometries.length; j++) {\n            if (\n              callback(\n                geometry.geometries[j],\n                featureIndex,\n                featureProperties,\n                featureBBox,\n                featureId\n              ) === false\n            )\n              return false;\n          }\n          break;\n        }\n        default:\n          throw new Error(\"Unknown Geometry Type\");\n      }\n    }\n    // Only increase `featureIndex` per each feature\n    featureIndex++;\n  }\n}\n\n/**\n * Callback for geomReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback geomReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Geometry} currentGeometry The current Geometry being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {Object} featureProperties The current Feature Properties being processed.\n * @param {Array<number>} featureBBox The current Feature BBox being processed.\n * @param {number|string} featureId The current Feature Id being processed.\n */\n\n/**\n * Reduce geometry in any GeoJSON object, similar to Array.reduce().\n *\n * @name geomReduce\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (previousValue, currentGeometry, featureIndex, featureProperties, featureBBox, featureId)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {*} The value that results from the reduction.\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * turf.geomReduce(features, function (previousValue, currentGeometry, featureIndex, featureProperties, featureBBox, featureId) {\n *   //=previousValue\n *   //=currentGeometry\n *   //=featureIndex\n *   //=featureProperties\n *   //=featureBBox\n *   //=featureId\n *   return currentGeometry\n * });\n */\nfunction geomReduce(geojson, callback, initialValue) {\n  var previousValue = initialValue;\n  geomEach(\n    geojson,\n    function (\n      currentGeometry,\n      featureIndex,\n      featureProperties,\n      featureBBox,\n      featureId\n    ) {\n      if (featureIndex === 0 && initialValue === undefined)\n        previousValue = currentGeometry;\n      else\n        previousValue = callback(\n          previousValue,\n          currentGeometry,\n          featureIndex,\n          featureProperties,\n          featureBBox,\n          featureId\n        );\n    }\n  );\n  return previousValue;\n}\n\n/**\n * Callback for flattenEach\n *\n * @callback flattenEachCallback\n * @param {Feature} currentFeature The current flattened feature being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n */\n\n/**\n * Iterate over flattened features in any GeoJSON object, similar to\n * Array.forEach.\n *\n * @name flattenEach\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (currentFeature, featureIndex, multiFeatureIndex)\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.multiPoint([[40, 30], [36, 53]], {hello: 'world'})\n * ]);\n *\n * turf.flattenEach(features, function (currentFeature, featureIndex, multiFeatureIndex) {\n *   //=currentFeature\n *   //=featureIndex\n *   //=multiFeatureIndex\n * });\n */\nfunction flattenEach(geojson, callback) {\n  geomEach(geojson, function (geometry, featureIndex, properties, bbox, id) {\n    // Callback for single geometry\n    var type = geometry === null ? null : geometry.type;\n    switch (type) {\n      case null:\n      case \"Point\":\n      case \"LineString\":\n      case \"Polygon\":\n        if (\n          callback(\n            helpers.feature(geometry, properties, { bbox: bbox, id: id }),\n            featureIndex,\n            0\n          ) === false\n        )\n          return false;\n        return;\n    }\n\n    var geomType;\n\n    // Callback for multi-geometry\n    switch (type) {\n      case \"MultiPoint\":\n        geomType = \"Point\";\n        break;\n      case \"MultiLineString\":\n        geomType = \"LineString\";\n        break;\n      case \"MultiPolygon\":\n        geomType = \"Polygon\";\n        break;\n    }\n\n    for (\n      var multiFeatureIndex = 0;\n      multiFeatureIndex < geometry.coordinates.length;\n      multiFeatureIndex++\n    ) {\n      var coordinate = geometry.coordinates[multiFeatureIndex];\n      var geom = {\n        type: geomType,\n        coordinates: coordinate,\n      };\n      if (\n        callback(helpers.feature(geom, properties), featureIndex, multiFeatureIndex) ===\n        false\n      )\n        return false;\n    }\n  });\n}\n\n/**\n * Callback for flattenReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback flattenReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Feature} currentFeature The current Feature being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n */\n\n/**\n * Reduce flattened features in any GeoJSON object, similar to Array.reduce().\n *\n * @name flattenReduce\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (previousValue, currentFeature, featureIndex, multiFeatureIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {*} The value that results from the reduction.\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.multiPoint([[40, 30], [36, 53]], {hello: 'world'})\n * ]);\n *\n * turf.flattenReduce(features, function (previousValue, currentFeature, featureIndex, multiFeatureIndex) {\n *   //=previousValue\n *   //=currentFeature\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   return currentFeature\n * });\n */\nfunction flattenReduce(geojson, callback, initialValue) {\n  var previousValue = initialValue;\n  flattenEach(\n    geojson,\n    function (currentFeature, featureIndex, multiFeatureIndex) {\n      if (\n        featureIndex === 0 &&\n        multiFeatureIndex === 0 &&\n        initialValue === undefined\n      )\n        previousValue = currentFeature;\n      else\n        previousValue = callback(\n          previousValue,\n          currentFeature,\n          featureIndex,\n          multiFeatureIndex\n        );\n    }\n  );\n  return previousValue;\n}\n\n/**\n * Callback for segmentEach\n *\n * @callback segmentEachCallback\n * @param {Feature<LineString>} currentSegment The current Segment being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n * @param {number} geometryIndex The current index of the Geometry being processed.\n * @param {number} segmentIndex The current index of the Segment being processed.\n * @returns {void}\n */\n\n/**\n * Iterate over 2-vertex line segment in any GeoJSON object, similar to Array.forEach()\n * (Multi)Point geometries do not contain segments therefore they are ignored during this operation.\n *\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON\n * @param {Function} callback a method that takes (currentSegment, featureIndex, multiFeatureIndex, geometryIndex, segmentIndex)\n * @returns {void}\n * @example\n * var polygon = turf.polygon([[[-50, 5], [-40, -10], [-50, -10], [-40, 5], [-50, 5]]]);\n *\n * // Iterate over GeoJSON by 2-vertex segments\n * turf.segmentEach(polygon, function (currentSegment, featureIndex, multiFeatureIndex, geometryIndex, segmentIndex) {\n *   //=currentSegment\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   //=geometryIndex\n *   //=segmentIndex\n * });\n *\n * // Calculate the total number of segments\n * var total = 0;\n * turf.segmentEach(polygon, function () {\n *     total++;\n * });\n */\nfunction segmentEach(geojson, callback) {\n  flattenEach(geojson, function (feature, featureIndex, multiFeatureIndex) {\n    var segmentIndex = 0;\n\n    // Exclude null Geometries\n    if (!feature.geometry) return;\n    // (Multi)Point geometries do not contain segments therefore they are ignored during this operation.\n    var type = feature.geometry.type;\n    if (type === \"Point\" || type === \"MultiPoint\") return;\n\n    // Generate 2-vertex line segments\n    var previousCoords;\n    var previousFeatureIndex = 0;\n    var previousMultiIndex = 0;\n    var prevGeomIndex = 0;\n    if (\n      coordEach(\n        feature,\n        function (\n          currentCoord,\n          coordIndex,\n          featureIndexCoord,\n          multiPartIndexCoord,\n          geometryIndex\n        ) {\n          // Simulating a meta.coordReduce() since `reduce` operations cannot be stopped by returning `false`\n          if (\n            previousCoords === undefined ||\n            featureIndex > previousFeatureIndex ||\n            multiPartIndexCoord > previousMultiIndex ||\n            geometryIndex > prevGeomIndex\n          ) {\n            previousCoords = currentCoord;\n            previousFeatureIndex = featureIndex;\n            previousMultiIndex = multiPartIndexCoord;\n            prevGeomIndex = geometryIndex;\n            segmentIndex = 0;\n            return;\n          }\n          var currentSegment = helpers.lineString(\n            [previousCoords, currentCoord],\n            feature.properties\n          );\n          if (\n            callback(\n              currentSegment,\n              featureIndex,\n              multiFeatureIndex,\n              geometryIndex,\n              segmentIndex\n            ) === false\n          )\n            return false;\n          segmentIndex++;\n          previousCoords = currentCoord;\n        }\n      ) === false\n    )\n      return false;\n  });\n}\n\n/**\n * Callback for segmentReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback segmentReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Feature<LineString>} currentSegment The current Segment being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n * @param {number} geometryIndex The current index of the Geometry being processed.\n * @param {number} segmentIndex The current index of the Segment being processed.\n */\n\n/**\n * Reduce 2-vertex line segment in any GeoJSON object, similar to Array.reduce()\n * (Multi)Point geometries do not contain segments therefore they are ignored during this operation.\n *\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON\n * @param {Function} callback a method that takes (previousValue, currentSegment, currentIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {void}\n * @example\n * var polygon = turf.polygon([[[-50, 5], [-40, -10], [-50, -10], [-40, 5], [-50, 5]]]);\n *\n * // Iterate over GeoJSON by 2-vertex segments\n * turf.segmentReduce(polygon, function (previousSegment, currentSegment, featureIndex, multiFeatureIndex, geometryIndex, segmentIndex) {\n *   //= previousSegment\n *   //= currentSegment\n *   //= featureIndex\n *   //= multiFeatureIndex\n *   //= geometryIndex\n *   //= segmentIndex\n *   return currentSegment\n * });\n *\n * // Calculate the total number of segments\n * var initialValue = 0\n * var total = turf.segmentReduce(polygon, function (previousValue) {\n *     previousValue++;\n *     return previousValue;\n * }, initialValue);\n */\nfunction segmentReduce(geojson, callback, initialValue) {\n  var previousValue = initialValue;\n  var started = false;\n  segmentEach(\n    geojson,\n    function (\n      currentSegment,\n      featureIndex,\n      multiFeatureIndex,\n      geometryIndex,\n      segmentIndex\n    ) {\n      if (started === false && initialValue === undefined)\n        previousValue = currentSegment;\n      else\n        previousValue = callback(\n          previousValue,\n          currentSegment,\n          featureIndex,\n          multiFeatureIndex,\n          geometryIndex,\n          segmentIndex\n        );\n      started = true;\n    }\n  );\n  return previousValue;\n}\n\n/**\n * Callback for lineEach\n *\n * @callback lineEachCallback\n * @param {Feature<LineString>} currentLine The current LineString|LinearRing being processed\n * @param {number} featureIndex The current index of the Feature being processed\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed\n * @param {number} geometryIndex The current index of the Geometry being processed\n */\n\n/**\n * Iterate over line or ring coordinates in LineString, Polygon, MultiLineString, MultiPolygon Features or Geometries,\n * similar to Array.forEach.\n *\n * @name lineEach\n * @param {Geometry|Feature<LineString|Polygon|MultiLineString|MultiPolygon>} geojson object\n * @param {Function} callback a method that takes (currentLine, featureIndex, multiFeatureIndex, geometryIndex)\n * @example\n * var multiLine = turf.multiLineString([\n *   [[26, 37], [35, 45]],\n *   [[36, 53], [38, 50], [41, 55]]\n * ]);\n *\n * turf.lineEach(multiLine, function (currentLine, featureIndex, multiFeatureIndex, geometryIndex) {\n *   //=currentLine\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   //=geometryIndex\n * });\n */\nfunction lineEach(geojson, callback) {\n  // validation\n  if (!geojson) throw new Error(\"geojson is required\");\n\n  flattenEach(geojson, function (feature, featureIndex, multiFeatureIndex) {\n    if (feature.geometry === null) return;\n    var type = feature.geometry.type;\n    var coords = feature.geometry.coordinates;\n    switch (type) {\n      case \"LineString\":\n        if (callback(feature, featureIndex, multiFeatureIndex, 0, 0) === false)\n          return false;\n        break;\n      case \"Polygon\":\n        for (\n          var geometryIndex = 0;\n          geometryIndex < coords.length;\n          geometryIndex++\n        ) {\n          if (\n            callback(\n              helpers.lineString(coords[geometryIndex], feature.properties),\n              featureIndex,\n              multiFeatureIndex,\n              geometryIndex\n            ) === false\n          )\n            return false;\n        }\n        break;\n    }\n  });\n}\n\n/**\n * Callback for lineReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback lineReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Feature<LineString>} currentLine The current LineString|LinearRing being processed.\n * @param {number} featureIndex The current index of the Feature being processed\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed\n * @param {number} geometryIndex The current index of the Geometry being processed\n */\n\n/**\n * Reduce features in any GeoJSON object, similar to Array.reduce().\n *\n * @name lineReduce\n * @param {Geometry|Feature<LineString|Polygon|MultiLineString|MultiPolygon>} geojson object\n * @param {Function} callback a method that takes (previousValue, currentLine, featureIndex, multiFeatureIndex, geometryIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {*} The value that results from the reduction.\n * @example\n * var multiPoly = turf.multiPolygon([\n *   turf.polygon([[[12,48],[2,41],[24,38],[12,48]], [[9,44],[13,41],[13,45],[9,44]]]),\n *   turf.polygon([[[5, 5], [0, 0], [2, 2], [4, 4], [5, 5]]])\n * ]);\n *\n * turf.lineReduce(multiPoly, function (previousValue, currentLine, featureIndex, multiFeatureIndex, geometryIndex) {\n *   //=previousValue\n *   //=currentLine\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   //=geometryIndex\n *   return currentLine\n * });\n */\nfunction lineReduce(geojson, callback, initialValue) {\n  var previousValue = initialValue;\n  lineEach(\n    geojson,\n    function (currentLine, featureIndex, multiFeatureIndex, geometryIndex) {\n      if (featureIndex === 0 && initialValue === undefined)\n        previousValue = currentLine;\n      else\n        previousValue = callback(\n          previousValue,\n          currentLine,\n          featureIndex,\n          multiFeatureIndex,\n          geometryIndex\n        );\n    }\n  );\n  return previousValue;\n}\n\n/**\n * Finds a particular 2-vertex LineString Segment from a GeoJSON using `@turf/meta` indexes.\n *\n * Negative indexes are permitted.\n * Point & MultiPoint will always return null.\n *\n * @param {FeatureCollection|Feature|Geometry} geojson Any GeoJSON Feature or Geometry\n * @param {Object} [options={}] Optional parameters\n * @param {number} [options.featureIndex=0] Feature Index\n * @param {number} [options.multiFeatureIndex=0] Multi-Feature Index\n * @param {number} [options.geometryIndex=0] Geometry Index\n * @param {number} [options.segmentIndex=0] Segment Index\n * @param {Object} [options.properties={}] Translate Properties to output LineString\n * @param {BBox} [options.bbox={}] Translate BBox to output LineString\n * @param {number|string} [options.id={}] Translate Id to output LineString\n * @returns {Feature<LineString>} 2-vertex GeoJSON Feature LineString\n * @example\n * var multiLine = turf.multiLineString([\n *     [[10, 10], [50, 30], [30, 40]],\n *     [[-10, -10], [-50, -30], [-30, -40]]\n * ]);\n *\n * // First Segment (defaults are 0)\n * turf.findSegment(multiLine);\n * // => Feature<LineString<[[10, 10], [50, 30]]>>\n *\n * // First Segment of 2nd Multi Feature\n * turf.findSegment(multiLine, {multiFeatureIndex: 1});\n * // => Feature<LineString<[[-10, -10], [-50, -30]]>>\n *\n * // Last Segment of Last Multi Feature\n * turf.findSegment(multiLine, {multiFeatureIndex: -1, segmentIndex: -1});\n * // => Feature<LineString<[[-50, -30], [-30, -40]]>>\n */\nfunction findSegment(geojson, options) {\n  // Optional Parameters\n  options = options || {};\n  if (!helpers.isObject(options)) throw new Error(\"options is invalid\");\n  var featureIndex = options.featureIndex || 0;\n  var multiFeatureIndex = options.multiFeatureIndex || 0;\n  var geometryIndex = options.geometryIndex || 0;\n  var segmentIndex = options.segmentIndex || 0;\n\n  // Find FeatureIndex\n  var properties = options.properties;\n  var geometry;\n\n  switch (geojson.type) {\n    case \"FeatureCollection\":\n      if (featureIndex < 0)\n        featureIndex = geojson.features.length + featureIndex;\n      properties = properties || geojson.features[featureIndex].properties;\n      geometry = geojson.features[featureIndex].geometry;\n      break;\n    case \"Feature\":\n      properties = properties || geojson.properties;\n      geometry = geojson.geometry;\n      break;\n    case \"Point\":\n    case \"MultiPoint\":\n      return null;\n    case \"LineString\":\n    case \"Polygon\":\n    case \"MultiLineString\":\n    case \"MultiPolygon\":\n      geometry = geojson;\n      break;\n    default:\n      throw new Error(\"geojson is invalid\");\n  }\n\n  // Find SegmentIndex\n  if (geometry === null) return null;\n  var coords = geometry.coordinates;\n  switch (geometry.type) {\n    case \"Point\":\n    case \"MultiPoint\":\n      return null;\n    case \"LineString\":\n      if (segmentIndex < 0) segmentIndex = coords.length + segmentIndex - 1;\n      return helpers.lineString(\n        [coords[segmentIndex], coords[segmentIndex + 1]],\n        properties,\n        options\n      );\n    case \"Polygon\":\n      if (geometryIndex < 0) geometryIndex = coords.length + geometryIndex;\n      if (segmentIndex < 0)\n        segmentIndex = coords[geometryIndex].length + segmentIndex - 1;\n      return helpers.lineString(\n        [\n          coords[geometryIndex][segmentIndex],\n          coords[geometryIndex][segmentIndex + 1],\n        ],\n        properties,\n        options\n      );\n    case \"MultiLineString\":\n      if (multiFeatureIndex < 0)\n        multiFeatureIndex = coords.length + multiFeatureIndex;\n      if (segmentIndex < 0)\n        segmentIndex = coords[multiFeatureIndex].length + segmentIndex - 1;\n      return helpers.lineString(\n        [\n          coords[multiFeatureIndex][segmentIndex],\n          coords[multiFeatureIndex][segmentIndex + 1],\n        ],\n        properties,\n        options\n      );\n    case \"MultiPolygon\":\n      if (multiFeatureIndex < 0)\n        multiFeatureIndex = coords.length + multiFeatureIndex;\n      if (geometryIndex < 0)\n        geometryIndex = coords[multiFeatureIndex].length + geometryIndex;\n      if (segmentIndex < 0)\n        segmentIndex =\n          coords[multiFeatureIndex][geometryIndex].length - segmentIndex - 1;\n      return helpers.lineString(\n        [\n          coords[multiFeatureIndex][geometryIndex][segmentIndex],\n          coords[multiFeatureIndex][geometryIndex][segmentIndex + 1],\n        ],\n        properties,\n        options\n      );\n  }\n  throw new Error(\"geojson is invalid\");\n}\n\n/**\n * Finds a particular Point from a GeoJSON using `@turf/meta` indexes.\n *\n * Negative indexes are permitted.\n *\n * @param {FeatureCollection|Feature|Geometry} geojson Any GeoJSON Feature or Geometry\n * @param {Object} [options={}] Optional parameters\n * @param {number} [options.featureIndex=0] Feature Index\n * @param {number} [options.multiFeatureIndex=0] Multi-Feature Index\n * @param {number} [options.geometryIndex=0] Geometry Index\n * @param {number} [options.coordIndex=0] Coord Index\n * @param {Object} [options.properties={}] Translate Properties to output Point\n * @param {BBox} [options.bbox={}] Translate BBox to output Point\n * @param {number|string} [options.id={}] Translate Id to output Point\n * @returns {Feature<Point>} 2-vertex GeoJSON Feature Point\n * @example\n * var multiLine = turf.multiLineString([\n *     [[10, 10], [50, 30], [30, 40]],\n *     [[-10, -10], [-50, -30], [-30, -40]]\n * ]);\n *\n * // First Segment (defaults are 0)\n * turf.findPoint(multiLine);\n * // => Feature<Point<[10, 10]>>\n *\n * // First Segment of the 2nd Multi-Feature\n * turf.findPoint(multiLine, {multiFeatureIndex: 1});\n * // => Feature<Point<[-10, -10]>>\n *\n * // Last Segment of last Multi-Feature\n * turf.findPoint(multiLine, {multiFeatureIndex: -1, coordIndex: -1});\n * // => Feature<Point<[-30, -40]>>\n */\nfunction findPoint(geojson, options) {\n  // Optional Parameters\n  options = options || {};\n  if (!helpers.isObject(options)) throw new Error(\"options is invalid\");\n  var featureIndex = options.featureIndex || 0;\n  var multiFeatureIndex = options.multiFeatureIndex || 0;\n  var geometryIndex = options.geometryIndex || 0;\n  var coordIndex = options.coordIndex || 0;\n\n  // Find FeatureIndex\n  var properties = options.properties;\n  var geometry;\n\n  switch (geojson.type) {\n    case \"FeatureCollection\":\n      if (featureIndex < 0)\n        featureIndex = geojson.features.length + featureIndex;\n      properties = properties || geojson.features[featureIndex].properties;\n      geometry = geojson.features[featureIndex].geometry;\n      break;\n    case \"Feature\":\n      properties = properties || geojson.properties;\n      geometry = geojson.geometry;\n      break;\n    case \"Point\":\n    case \"MultiPoint\":\n      return null;\n    case \"LineString\":\n    case \"Polygon\":\n    case \"MultiLineString\":\n    case \"MultiPolygon\":\n      geometry = geojson;\n      break;\n    default:\n      throw new Error(\"geojson is invalid\");\n  }\n\n  // Find Coord Index\n  if (geometry === null) return null;\n  var coords = geometry.coordinates;\n  switch (geometry.type) {\n    case \"Point\":\n      return helpers.point(coords, properties, options);\n    case \"MultiPoint\":\n      if (multiFeatureIndex < 0)\n        multiFeatureIndex = coords.length + multiFeatureIndex;\n      return helpers.point(coords[multiFeatureIndex], properties, options);\n    case \"LineString\":\n      if (coordIndex < 0) coordIndex = coords.length + coordIndex;\n      return helpers.point(coords[coordIndex], properties, options);\n    case \"Polygon\":\n      if (geometryIndex < 0) geometryIndex = coords.length + geometryIndex;\n      if (coordIndex < 0)\n        coordIndex = coords[geometryIndex].length + coordIndex;\n      return helpers.point(coords[geometryIndex][coordIndex], properties, options);\n    case \"MultiLineString\":\n      if (multiFeatureIndex < 0)\n        multiFeatureIndex = coords.length + multiFeatureIndex;\n      if (coordIndex < 0)\n        coordIndex = coords[multiFeatureIndex].length + coordIndex;\n      return helpers.point(coords[multiFeatureIndex][coordIndex], properties, options);\n    case \"MultiPolygon\":\n      if (multiFeatureIndex < 0)\n        multiFeatureIndex = coords.length + multiFeatureIndex;\n      if (geometryIndex < 0)\n        geometryIndex = coords[multiFeatureIndex].length + geometryIndex;\n      if (coordIndex < 0)\n        coordIndex =\n          coords[multiFeatureIndex][geometryIndex].length - coordIndex;\n      return helpers.point(\n        coords[multiFeatureIndex][geometryIndex][coordIndex],\n        properties,\n        options\n      );\n  }\n  throw new Error(\"geojson is invalid\");\n}\n\nexports.coordAll = coordAll;\nexports.coordEach = coordEach;\nexports.coordReduce = coordReduce;\nexports.featureEach = featureEach;\nexports.featureReduce = featureReduce;\nexports.findPoint = findPoint;\nexports.findSegment = findSegment;\nexports.flattenEach = flattenEach;\nexports.flattenReduce = flattenReduce;\nexports.geomEach = geomEach;\nexports.geomReduce = geomReduce;\nexports.lineEach = lineEach;\nexports.lineReduce = lineReduce;\nexports.propEach = propEach;\nexports.propReduce = propReduce;\nexports.segmentEach = segmentEach;\nexports.segmentReduce = segmentReduce;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar helpers_1 = require(\"@turf/helpers\");\nvar invariant_1 = require(\"@turf/invariant\");\n/**\n * Converts a {@link Polygon} to {@link LineString|(Multi)LineString} or {@link MultiPolygon} to a\n * {@link FeatureCollection} of {@link LineString|(Multi)LineString}.\n *\n * @name polygonToLine\n * @param {Feature<Polygon|MultiPolygon>} poly Feature to convert\n * @param {Object} [options={}] Optional parameters\n * @param {Object} [options.properties={}] translates GeoJSON properties to Feature\n * @returns {FeatureCollection|Feature<LineString|MultiLinestring>} converted (Multi)Polygon to (Multi)LineString\n * @example\n * var poly = turf.polygon([[[125, -30], [145, -30], [145, -20], [125, -20], [125, -30]]]);\n *\n * var line = turf.polygonToLine(poly);\n *\n * //addToMap\n * var addToMap = [line];\n */\nfunction default_1(poly, options) {\n    if (options === void 0) { options = {}; }\n    var geom = invariant_1.getGeom(poly);\n    if (!options.properties && poly.type === \"Feature\") {\n        options.properties = poly.properties;\n    }\n    switch (geom.type) {\n        case \"Polygon\":\n            return polygonToLine(geom, options);\n        case \"MultiPolygon\":\n            return multiPolygonToLine(geom, options);\n        default:\n            throw new Error(\"invalid poly\");\n    }\n}\nexports.default = default_1;\n/**\n * @private\n */\nfunction polygonToLine(poly, options) {\n    if (options === void 0) { options = {}; }\n    var geom = invariant_1.getGeom(poly);\n    var coords = geom.coordinates;\n    var properties = options.properties\n        ? options.properties\n        : poly.type === \"Feature\"\n            ? poly.properties\n            : {};\n    return coordsToLine(coords, properties);\n}\nexports.polygonToLine = polygonToLine;\n/**\n * @private\n */\nfunction multiPolygonToLine(multiPoly, options) {\n    if (options === void 0) { options = {}; }\n    var geom = invariant_1.getGeom(multiPoly);\n    var coords = geom.coordinates;\n    var properties = options.properties\n        ? options.properties\n        : multiPoly.type === \"Feature\"\n            ? multiPoly.properties\n            : {};\n    var lines = [];\n    coords.forEach(function (coord) {\n        lines.push(coordsToLine(coord, properties));\n    });\n    return helpers_1.featureCollection(lines);\n}\nexports.multiPolygonToLine = multiPolygonToLine;\n/**\n * @private\n */\nfunction coordsToLine(coords, properties) {\n    if (coords.length > 1) {\n        return helpers_1.multiLineString(coords, properties);\n    }\n    return helpers_1.lineString(coords[0], properties);\n}\nexports.coordsToLine = coordsToLine;\n","var rbush = require('rbush');\nvar helpers = require('@turf/helpers');\nvar meta = require('@turf/meta');\nvar turfBBox = require('@turf/bbox').default;\nvar featureEach = meta.featureEach;\nvar coordEach = meta.coordEach;\nvar polygon = helpers.polygon;\nvar featureCollection = helpers.featureCollection;\n\n/**\n * GeoJSON implementation of [RBush](https://github.com/mourner/rbush#rbush) spatial index.\n *\n * @name rbush\n * @param {number} [maxEntries=9] defines the maximum number of entries in a tree node. 9 (used by default) is a\n * reasonable choice for most applications. Higher value means faster insertion and slower search, and vice versa.\n * @returns {RBush} GeoJSON RBush\n * @example\n * var geojsonRbush = require('geojson-rbush').default;\n * var tree = geojsonRbush();\n */\nfunction geojsonRbush(maxEntries) {\n    var tree = new rbush(maxEntries);\n    /**\n     * [insert](https://github.com/mourner/rbush#data-format)\n     *\n     * @param {Feature} feature insert single GeoJSON Feature\n     * @returns {RBush} GeoJSON RBush\n     * @example\n     * var poly = turf.polygon([[[-78, 41], [-67, 41], [-67, 48], [-78, 48], [-78, 41]]]);\n     * tree.insert(poly)\n     */\n    tree.insert = function (feature) {\n        if (feature.type !== 'Feature') throw new Error('invalid feature');\n        feature.bbox = feature.bbox ? feature.bbox : turfBBox(feature);\n        return rbush.prototype.insert.call(this, feature);\n    };\n\n    /**\n     * [load](https://github.com/mourner/rbush#bulk-inserting-data)\n     *\n     * @param {FeatureCollection|Array<Feature>} features load entire GeoJSON FeatureCollection\n     * @returns {RBush} GeoJSON RBush\n     * @example\n     * var polys = turf.polygons([\n     *     [[[-78, 41], [-67, 41], [-67, 48], [-78, 48], [-78, 41]]],\n     *     [[[-93, 32], [-83, 32], [-83, 39], [-93, 39], [-93, 32]]]\n     * ]);\n     * tree.load(polys);\n     */\n    tree.load = function (features) {\n        var load = [];\n        // Load an Array of Features\n        if (Array.isArray(features)) {\n            features.forEach(function (feature) {\n                if (feature.type !== 'Feature') throw new Error('invalid features');\n                feature.bbox = feature.bbox ? feature.bbox : turfBBox(feature);\n                load.push(feature);\n            });\n        } else {\n            // Load a FeatureCollection\n            featureEach(features, function (feature) {\n                if (feature.type !== 'Feature') throw new Error('invalid features');\n                feature.bbox = feature.bbox ? feature.bbox : turfBBox(feature);\n                load.push(feature);\n            });\n        }\n        return rbush.prototype.load.call(this, load);\n    };\n\n    /**\n     * [remove](https://github.com/mourner/rbush#removing-data)\n     *\n     * @param {Feature} feature remove single GeoJSON Feature\n     * @param {Function} equals Pass a custom equals function to compare by value for removal.\n     * @returns {RBush} GeoJSON RBush\n     * @example\n     * var poly = turf.polygon([[[-78, 41], [-67, 41], [-67, 48], [-78, 48], [-78, 41]]]);\n     *\n     * tree.remove(poly);\n     */\n    tree.remove = function (feature, equals) {\n        if (feature.type !== 'Feature') throw new Error('invalid feature');\n        feature.bbox = feature.bbox ? feature.bbox : turfBBox(feature);\n        return rbush.prototype.remove.call(this, feature, equals);\n    };\n\n    /**\n     * [clear](https://github.com/mourner/rbush#removing-data)\n     *\n     * @returns {RBush} GeoJSON Rbush\n     * @example\n     * tree.clear()\n     */\n    tree.clear = function () {\n        return rbush.prototype.clear.call(this);\n    };\n\n    /**\n     * [search](https://github.com/mourner/rbush#search)\n     *\n     * @param {BBox|FeatureCollection|Feature} geojson search with GeoJSON\n     * @returns {FeatureCollection} all features that intersects with the given GeoJSON.\n     * @example\n     * var poly = turf.polygon([[[-78, 41], [-67, 41], [-67, 48], [-78, 48], [-78, 41]]]);\n     *\n     * tree.search(poly);\n     */\n    tree.search = function (geojson) {\n        var features = rbush.prototype.search.call(this, this.toBBox(geojson));\n        return featureCollection(features);\n    };\n\n    /**\n     * [collides](https://github.com/mourner/rbush#collisions)\n     *\n     * @param {BBox|FeatureCollection|Feature} geojson collides with GeoJSON\n     * @returns {boolean} true if there are any items intersecting the given GeoJSON, otherwise false.\n     * @example\n     * var poly = turf.polygon([[[-78, 41], [-67, 41], [-67, 48], [-78, 48], [-78, 41]]]);\n     *\n     * tree.collides(poly);\n     */\n    tree.collides = function (geojson) {\n        return rbush.prototype.collides.call(this, this.toBBox(geojson));\n    };\n\n    /**\n     * [all](https://github.com/mourner/rbush#search)\n     *\n     * @returns {FeatureCollection} all the features in RBush\n     * @example\n     * tree.all()\n     */\n    tree.all = function () {\n        var features = rbush.prototype.all.call(this);\n        return featureCollection(features);\n    };\n\n    /**\n     * [toJSON](https://github.com/mourner/rbush#export-and-import)\n     *\n     * @returns {any} export data as JSON object\n     * @example\n     * var exported = tree.toJSON()\n     */\n    tree.toJSON = function () {\n        return rbush.prototype.toJSON.call(this);\n    };\n\n    /**\n     * [fromJSON](https://github.com/mourner/rbush#export-and-import)\n     *\n     * @param {any} json import previously exported data\n     * @returns {RBush} GeoJSON RBush\n     * @example\n     * var exported = {\n     *   \"children\": [\n     *     {\n     *       \"type\": \"Feature\",\n     *       \"geometry\": {\n     *         \"type\": \"Point\",\n     *         \"coordinates\": [110, 50]\n     *       },\n     *       \"properties\": {},\n     *       \"bbox\": [110, 50, 110, 50]\n     *     }\n     *   ],\n     *   \"height\": 1,\n     *   \"leaf\": true,\n     *   \"minX\": 110,\n     *   \"minY\": 50,\n     *   \"maxX\": 110,\n     *   \"maxY\": 50\n     * }\n     * tree.fromJSON(exported)\n     */\n    tree.fromJSON = function (json) {\n        return rbush.prototype.fromJSON.call(this, json);\n    };\n\n    /**\n     * Converts GeoJSON to {minX, minY, maxX, maxY} schema\n     *\n     * @private\n     * @param {BBox|FeatureCollection|Feature} geojson feature(s) to retrieve BBox from\n     * @returns {Object} converted to {minX, minY, maxX, maxY}\n     */\n    tree.toBBox = function (geojson) {\n        var bbox;\n        if (geojson.bbox) bbox = geojson.bbox;\n        else if (Array.isArray(geojson) && geojson.length === 4) bbox = geojson;\n        else if (Array.isArray(geojson) && geojson.length === 6) bbox = [geojson[0], geojson[1], geojson[3], geojson[4]];\n        else if (geojson.type === 'Feature') bbox = turfBBox(geojson);\n        else if (geojson.type === 'FeatureCollection') bbox = turfBBox(geojson);\n        else throw new Error('invalid geojson')\n\n        return {\n            minX: bbox[0],\n            minY: bbox[1],\n            maxX: bbox[2],\n            maxY: bbox[3]\n        };\n    };\n    return tree;\n}\n\nmodule.exports = geojsonRbush;\nmodule.exports.default = geojsonRbush;\n","(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.polygonClipping = factory());\n}(this, (function () { 'use strict';\n\n  function _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  }\n\n  function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  function _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n    return Constructor;\n  }\n\n  /**\n   * splaytree v3.1.0\n   * Fast Splay tree for Node and browser\n   *\n   * @author Alexander Milevski <info@w8r.name>\n   * @license MIT\n   * @preserve\n   */\n  var Node =\n  /** @class */\n  function () {\n    function Node(key, data) {\n      this.next = null;\n      this.key = key;\n      this.data = data;\n      this.left = null;\n      this.right = null;\n    }\n\n    return Node;\n  }();\n  /* follows \"An implementation of top-down splaying\"\r\n   * by D. Sleator <sleator@cs.cmu.edu> March 1992\r\n   */\n\n\n  function DEFAULT_COMPARE(a, b) {\n    return a > b ? 1 : a < b ? -1 : 0;\n  }\n  /**\r\n   * Simple top down splay, not requiring i to be in the tree t.\r\n   */\n\n\n  function splay(i, t, comparator) {\n    var N = new Node(null, null);\n    var l = N;\n    var r = N;\n\n    while (true) {\n      var cmp = comparator(i, t.key); //if (i < t.key) {\n\n      if (cmp < 0) {\n        if (t.left === null) break; //if (i < t.left.key) {\n\n        if (comparator(i, t.left.key) < 0) {\n          var y = t.left;\n          /* rotate right */\n\n          t.left = y.right;\n          y.right = t;\n          t = y;\n          if (t.left === null) break;\n        }\n\n        r.left = t;\n        /* link right */\n\n        r = t;\n        t = t.left; //} else if (i > t.key) {\n      } else if (cmp > 0) {\n        if (t.right === null) break; //if (i > t.right.key) {\n\n        if (comparator(i, t.right.key) > 0) {\n          var y = t.right;\n          /* rotate left */\n\n          t.right = y.left;\n          y.left = t;\n          t = y;\n          if (t.right === null) break;\n        }\n\n        l.right = t;\n        /* link left */\n\n        l = t;\n        t = t.right;\n      } else break;\n    }\n    /* assemble */\n\n\n    l.right = t.left;\n    r.left = t.right;\n    t.left = N.right;\n    t.right = N.left;\n    return t;\n  }\n\n  function insert(i, data, t, comparator) {\n    var node = new Node(i, data);\n\n    if (t === null) {\n      node.left = node.right = null;\n      return node;\n    }\n\n    t = splay(i, t, comparator);\n    var cmp = comparator(i, t.key);\n\n    if (cmp < 0) {\n      node.left = t.left;\n      node.right = t;\n      t.left = null;\n    } else if (cmp >= 0) {\n      node.right = t.right;\n      node.left = t;\n      t.right = null;\n    }\n\n    return node;\n  }\n\n  function split(key, v, comparator) {\n    var left = null;\n    var right = null;\n\n    if (v) {\n      v = splay(key, v, comparator);\n      var cmp = comparator(v.key, key);\n\n      if (cmp === 0) {\n        left = v.left;\n        right = v.right;\n      } else if (cmp < 0) {\n        right = v.right;\n        v.right = null;\n        left = v;\n      } else {\n        left = v.left;\n        v.left = null;\n        right = v;\n      }\n    }\n\n    return {\n      left: left,\n      right: right\n    };\n  }\n\n  function merge(left, right, comparator) {\n    if (right === null) return left;\n    if (left === null) return right;\n    right = splay(left.key, right, comparator);\n    right.left = left;\n    return right;\n  }\n  /**\r\n   * Prints level of the tree\r\n   */\n\n\n  function printRow(root, prefix, isTail, out, printNode) {\n    if (root) {\n      out(\"\" + prefix + (isTail ? '└── ' : '├── ') + printNode(root) + \"\\n\");\n      var indent = prefix + (isTail ? '    ' : '│   ');\n      if (root.left) printRow(root.left, indent, false, out, printNode);\n      if (root.right) printRow(root.right, indent, true, out, printNode);\n    }\n  }\n\n  var Tree =\n  /** @class */\n  function () {\n    function Tree(comparator) {\n      if (comparator === void 0) {\n        comparator = DEFAULT_COMPARE;\n      }\n\n      this._root = null;\n      this._size = 0;\n      this._comparator = comparator;\n    }\n    /**\r\n     * Inserts a key, allows duplicates\r\n     */\n\n\n    Tree.prototype.insert = function (key, data) {\n      this._size++;\n      return this._root = insert(key, data, this._root, this._comparator);\n    };\n    /**\r\n     * Adds a key, if it is not present in the tree\r\n     */\n\n\n    Tree.prototype.add = function (key, data) {\n      var node = new Node(key, data);\n\n      if (this._root === null) {\n        node.left = node.right = null;\n        this._size++;\n        this._root = node;\n      }\n\n      var comparator = this._comparator;\n      var t = splay(key, this._root, comparator);\n      var cmp = comparator(key, t.key);\n      if (cmp === 0) this._root = t;else {\n        if (cmp < 0) {\n          node.left = t.left;\n          node.right = t;\n          t.left = null;\n        } else if (cmp > 0) {\n          node.right = t.right;\n          node.left = t;\n          t.right = null;\n        }\n\n        this._size++;\n        this._root = node;\n      }\n      return this._root;\n    };\n    /**\r\n     * @param  {Key} key\r\n     * @return {Node|null}\r\n     */\n\n\n    Tree.prototype.remove = function (key) {\n      this._root = this._remove(key, this._root, this._comparator);\n    };\n    /**\r\n     * Deletes i from the tree if it's there\r\n     */\n\n\n    Tree.prototype._remove = function (i, t, comparator) {\n      var x;\n      if (t === null) return null;\n      t = splay(i, t, comparator);\n      var cmp = comparator(i, t.key);\n\n      if (cmp === 0) {\n        /* found it */\n        if (t.left === null) {\n          x = t.right;\n        } else {\n          x = splay(i, t.left, comparator);\n          x.right = t.right;\n        }\n\n        this._size--;\n        return x;\n      }\n\n      return t;\n      /* It wasn't there */\n    };\n    /**\r\n     * Removes and returns the node with smallest key\r\n     */\n\n\n    Tree.prototype.pop = function () {\n      var node = this._root;\n\n      if (node) {\n        while (node.left) {\n          node = node.left;\n        }\n\n        this._root = splay(node.key, this._root, this._comparator);\n        this._root = this._remove(node.key, this._root, this._comparator);\n        return {\n          key: node.key,\n          data: node.data\n        };\n      }\n\n      return null;\n    };\n    /**\r\n     * Find without splaying\r\n     */\n\n\n    Tree.prototype.findStatic = function (key) {\n      var current = this._root;\n      var compare = this._comparator;\n\n      while (current) {\n        var cmp = compare(key, current.key);\n        if (cmp === 0) return current;else if (cmp < 0) current = current.left;else current = current.right;\n      }\n\n      return null;\n    };\n\n    Tree.prototype.find = function (key) {\n      if (this._root) {\n        this._root = splay(key, this._root, this._comparator);\n        if (this._comparator(key, this._root.key) !== 0) return null;\n      }\n\n      return this._root;\n    };\n\n    Tree.prototype.contains = function (key) {\n      var current = this._root;\n      var compare = this._comparator;\n\n      while (current) {\n        var cmp = compare(key, current.key);\n        if (cmp === 0) return true;else if (cmp < 0) current = current.left;else current = current.right;\n      }\n\n      return false;\n    };\n\n    Tree.prototype.forEach = function (visitor, ctx) {\n      var current = this._root;\n      var Q = [];\n      /* Initialize stack s */\n\n      var done = false;\n\n      while (!done) {\n        if (current !== null) {\n          Q.push(current);\n          current = current.left;\n        } else {\n          if (Q.length !== 0) {\n            current = Q.pop();\n            visitor.call(ctx, current);\n            current = current.right;\n          } else done = true;\n        }\n      }\n\n      return this;\n    };\n    /**\r\n     * Walk key range from `low` to `high`. Stops if `fn` returns a value.\r\n     */\n\n\n    Tree.prototype.range = function (low, high, fn, ctx) {\n      var Q = [];\n      var compare = this._comparator;\n      var node = this._root;\n      var cmp;\n\n      while (Q.length !== 0 || node) {\n        if (node) {\n          Q.push(node);\n          node = node.left;\n        } else {\n          node = Q.pop();\n          cmp = compare(node.key, high);\n\n          if (cmp > 0) {\n            break;\n          } else if (compare(node.key, low) >= 0) {\n            if (fn.call(ctx, node)) return this; // stop if smth is returned\n          }\n\n          node = node.right;\n        }\n      }\n\n      return this;\n    };\n    /**\r\n     * Returns array of keys\r\n     */\n\n\n    Tree.prototype.keys = function () {\n      var keys = [];\n      this.forEach(function (_a) {\n        var key = _a.key;\n        return keys.push(key);\n      });\n      return keys;\n    };\n    /**\r\n     * Returns array of all the data in the nodes\r\n     */\n\n\n    Tree.prototype.values = function () {\n      var values = [];\n      this.forEach(function (_a) {\n        var data = _a.data;\n        return values.push(data);\n      });\n      return values;\n    };\n\n    Tree.prototype.min = function () {\n      if (this._root) return this.minNode(this._root).key;\n      return null;\n    };\n\n    Tree.prototype.max = function () {\n      if (this._root) return this.maxNode(this._root).key;\n      return null;\n    };\n\n    Tree.prototype.minNode = function (t) {\n      if (t === void 0) {\n        t = this._root;\n      }\n\n      if (t) while (t.left) {\n        t = t.left;\n      }\n      return t;\n    };\n\n    Tree.prototype.maxNode = function (t) {\n      if (t === void 0) {\n        t = this._root;\n      }\n\n      if (t) while (t.right) {\n        t = t.right;\n      }\n      return t;\n    };\n    /**\r\n     * Returns node at given index\r\n     */\n\n\n    Tree.prototype.at = function (index) {\n      var current = this._root;\n      var done = false;\n      var i = 0;\n      var Q = [];\n\n      while (!done) {\n        if (current) {\n          Q.push(current);\n          current = current.left;\n        } else {\n          if (Q.length > 0) {\n            current = Q.pop();\n            if (i === index) return current;\n            i++;\n            current = current.right;\n          } else done = true;\n        }\n      }\n\n      return null;\n    };\n\n    Tree.prototype.next = function (d) {\n      var root = this._root;\n      var successor = null;\n\n      if (d.right) {\n        successor = d.right;\n\n        while (successor.left) {\n          successor = successor.left;\n        }\n\n        return successor;\n      }\n\n      var comparator = this._comparator;\n\n      while (root) {\n        var cmp = comparator(d.key, root.key);\n        if (cmp === 0) break;else if (cmp < 0) {\n          successor = root;\n          root = root.left;\n        } else root = root.right;\n      }\n\n      return successor;\n    };\n\n    Tree.prototype.prev = function (d) {\n      var root = this._root;\n      var predecessor = null;\n\n      if (d.left !== null) {\n        predecessor = d.left;\n\n        while (predecessor.right) {\n          predecessor = predecessor.right;\n        }\n\n        return predecessor;\n      }\n\n      var comparator = this._comparator;\n\n      while (root) {\n        var cmp = comparator(d.key, root.key);\n        if (cmp === 0) break;else if (cmp < 0) root = root.left;else {\n          predecessor = root;\n          root = root.right;\n        }\n      }\n\n      return predecessor;\n    };\n\n    Tree.prototype.clear = function () {\n      this._root = null;\n      this._size = 0;\n      return this;\n    };\n\n    Tree.prototype.toList = function () {\n      return toList(this._root);\n    };\n    /**\r\n     * Bulk-load items. Both array have to be same size\r\n     */\n\n\n    Tree.prototype.load = function (keys, values, presort) {\n      if (values === void 0) {\n        values = [];\n      }\n\n      if (presort === void 0) {\n        presort = false;\n      }\n\n      var size = keys.length;\n      var comparator = this._comparator; // sort if needed\n\n      if (presort) sort(keys, values, 0, size - 1, comparator);\n\n      if (this._root === null) {\n        // empty tree\n        this._root = loadRecursive(keys, values, 0, size);\n        this._size = size;\n      } else {\n        // that re-builds the whole tree from two in-order traversals\n        var mergedList = mergeLists(this.toList(), createList(keys, values), comparator);\n        size = this._size + size;\n        this._root = sortedListToBST({\n          head: mergedList\n        }, 0, size);\n      }\n\n      return this;\n    };\n\n    Tree.prototype.isEmpty = function () {\n      return this._root === null;\n    };\n\n    Object.defineProperty(Tree.prototype, \"size\", {\n      get: function get() {\n        return this._size;\n      },\n      enumerable: true,\n      configurable: true\n    });\n    Object.defineProperty(Tree.prototype, \"root\", {\n      get: function get() {\n        return this._root;\n      },\n      enumerable: true,\n      configurable: true\n    });\n\n    Tree.prototype.toString = function (printNode) {\n      if (printNode === void 0) {\n        printNode = function printNode(n) {\n          return String(n.key);\n        };\n      }\n\n      var out = [];\n      printRow(this._root, '', true, function (v) {\n        return out.push(v);\n      }, printNode);\n      return out.join('');\n    };\n\n    Tree.prototype.update = function (key, newKey, newData) {\n      var comparator = this._comparator;\n\n      var _a = split(key, this._root, comparator),\n          left = _a.left,\n          right = _a.right;\n\n      if (comparator(key, newKey) < 0) {\n        right = insert(newKey, newData, right, comparator);\n      } else {\n        left = insert(newKey, newData, left, comparator);\n      }\n\n      this._root = merge(left, right, comparator);\n    };\n\n    Tree.prototype.split = function (key) {\n      return split(key, this._root, this._comparator);\n    };\n\n    return Tree;\n  }();\n\n  function loadRecursive(keys, values, start, end) {\n    var size = end - start;\n\n    if (size > 0) {\n      var middle = start + Math.floor(size / 2);\n      var key = keys[middle];\n      var data = values[middle];\n      var node = new Node(key, data);\n      node.left = loadRecursive(keys, values, start, middle);\n      node.right = loadRecursive(keys, values, middle + 1, end);\n      return node;\n    }\n\n    return null;\n  }\n\n  function createList(keys, values) {\n    var head = new Node(null, null);\n    var p = head;\n\n    for (var i = 0; i < keys.length; i++) {\n      p = p.next = new Node(keys[i], values[i]);\n    }\n\n    p.next = null;\n    return head.next;\n  }\n\n  function toList(root) {\n    var current = root;\n    var Q = [];\n    var done = false;\n    var head = new Node(null, null);\n    var p = head;\n\n    while (!done) {\n      if (current) {\n        Q.push(current);\n        current = current.left;\n      } else {\n        if (Q.length > 0) {\n          current = p = p.next = Q.pop();\n          current = current.right;\n        } else done = true;\n      }\n    }\n\n    p.next = null; // that'll work even if the tree was empty\n\n    return head.next;\n  }\n\n  function sortedListToBST(list, start, end) {\n    var size = end - start;\n\n    if (size > 0) {\n      var middle = start + Math.floor(size / 2);\n      var left = sortedListToBST(list, start, middle);\n      var root = list.head;\n      root.left = left;\n      list.head = list.head.next;\n      root.right = sortedListToBST(list, middle + 1, end);\n      return root;\n    }\n\n    return null;\n  }\n\n  function mergeLists(l1, l2, compare) {\n    var head = new Node(null, null); // dummy\n\n    var p = head;\n    var p1 = l1;\n    var p2 = l2;\n\n    while (p1 !== null && p2 !== null) {\n      if (compare(p1.key, p2.key) < 0) {\n        p.next = p1;\n        p1 = p1.next;\n      } else {\n        p.next = p2;\n        p2 = p2.next;\n      }\n\n      p = p.next;\n    }\n\n    if (p1 !== null) {\n      p.next = p1;\n    } else if (p2 !== null) {\n      p.next = p2;\n    }\n\n    return head.next;\n  }\n\n  function sort(keys, values, left, right, compare) {\n    if (left >= right) return;\n    var pivot = keys[left + right >> 1];\n    var i = left - 1;\n    var j = right + 1;\n\n    while (true) {\n      do {\n        i++;\n      } while (compare(keys[i], pivot) < 0);\n\n      do {\n        j--;\n      } while (compare(keys[j], pivot) > 0);\n\n      if (i >= j) break;\n      var tmp = keys[i];\n      keys[i] = keys[j];\n      keys[j] = tmp;\n      tmp = values[i];\n      values[i] = values[j];\n      values[j] = tmp;\n    }\n\n    sort(keys, values, left, j, compare);\n    sort(keys, values, j + 1, right, compare);\n  }\n\n  /**\n   * A bounding box has the format:\n   *\n   *  { ll: { x: xmin, y: ymin }, ur: { x: xmax, y: ymax } }\n   *\n   */\n  var isInBbox = function isInBbox(bbox, point) {\n    return bbox.ll.x <= point.x && point.x <= bbox.ur.x && bbox.ll.y <= point.y && point.y <= bbox.ur.y;\n  };\n  /* Returns either null, or a bbox (aka an ordered pair of points)\n   * If there is only one point of overlap, a bbox with identical points\n   * will be returned */\n\n  var getBboxOverlap = function getBboxOverlap(b1, b2) {\n    // check if the bboxes overlap at all\n    if (b2.ur.x < b1.ll.x || b1.ur.x < b2.ll.x || b2.ur.y < b1.ll.y || b1.ur.y < b2.ll.y) return null; // find the middle two X values\n\n    var lowerX = b1.ll.x < b2.ll.x ? b2.ll.x : b1.ll.x;\n    var upperX = b1.ur.x < b2.ur.x ? b1.ur.x : b2.ur.x; // find the middle two Y values\n\n    var lowerY = b1.ll.y < b2.ll.y ? b2.ll.y : b1.ll.y;\n    var upperY = b1.ur.y < b2.ur.y ? b1.ur.y : b2.ur.y; // put those middle values together to get the overlap\n\n    return {\n      ll: {\n        x: lowerX,\n        y: lowerY\n      },\n      ur: {\n        x: upperX,\n        y: upperY\n      }\n    };\n  };\n\n  /* Javascript doesn't do integer math. Everything is\n   * floating point with percision Number.EPSILON.\n   *\n   * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/EPSILON\n   */\n  var epsilon = Number.EPSILON; // IE Polyfill\n\n  if (epsilon === undefined) epsilon = Math.pow(2, -52);\n  var EPSILON_SQ = epsilon * epsilon;\n  /* FLP comparator */\n\n  var cmp = function cmp(a, b) {\n    // check if they're both 0\n    if (-epsilon < a && a < epsilon) {\n      if (-epsilon < b && b < epsilon) {\n        return 0;\n      }\n    } // check if they're flp equal\n\n\n    var ab = a - b;\n\n    if (ab * ab < EPSILON_SQ * a * b) {\n      return 0;\n    } // normal comparison\n\n\n    return a < b ? -1 : 1;\n  };\n\n  /**\n   * This class rounds incoming values sufficiently so that\n   * floating points problems are, for the most part, avoided.\n   *\n   * Incoming points are have their x & y values tested against\n   * all previously seen x & y values. If either is 'too close'\n   * to a previously seen value, it's value is 'snapped' to the\n   * previously seen value.\n   *\n   * All points should be rounded by this class before being\n   * stored in any data structures in the rest of this algorithm.\n   */\n\n  var PtRounder = /*#__PURE__*/function () {\n    function PtRounder() {\n      _classCallCheck(this, PtRounder);\n\n      this.reset();\n    }\n\n    _createClass(PtRounder, [{\n      key: \"reset\",\n      value: function reset() {\n        this.xRounder = new CoordRounder();\n        this.yRounder = new CoordRounder();\n      }\n    }, {\n      key: \"round\",\n      value: function round(x, y) {\n        return {\n          x: this.xRounder.round(x),\n          y: this.yRounder.round(y)\n        };\n      }\n    }]);\n\n    return PtRounder;\n  }();\n\n  var CoordRounder = /*#__PURE__*/function () {\n    function CoordRounder() {\n      _classCallCheck(this, CoordRounder);\n\n      this.tree = new Tree(); // preseed with 0 so we don't end up with values < Number.EPSILON\n\n      this.round(0);\n    } // Note: this can rounds input values backwards or forwards.\n    //       You might ask, why not restrict this to just rounding\n    //       forwards? Wouldn't that allow left endpoints to always\n    //       remain left endpoints during splitting (never change to\n    //       right). No - it wouldn't, because we snap intersections\n    //       to endpoints (to establish independence from the segment\n    //       angle for t-intersections).\n\n\n    _createClass(CoordRounder, [{\n      key: \"round\",\n      value: function round(coord) {\n        var node = this.tree.add(coord);\n        var prevNode = this.tree.prev(node);\n\n        if (prevNode !== null && cmp(node.key, prevNode.key) === 0) {\n          this.tree.remove(coord);\n          return prevNode.key;\n        }\n\n        var nextNode = this.tree.next(node);\n\n        if (nextNode !== null && cmp(node.key, nextNode.key) === 0) {\n          this.tree.remove(coord);\n          return nextNode.key;\n        }\n\n        return coord;\n      }\n    }]);\n\n    return CoordRounder;\n  }(); // singleton available by import\n\n\n  var rounder = new PtRounder();\n\n  /* Cross Product of two vectors with first point at origin */\n\n  var crossProduct = function crossProduct(a, b) {\n    return a.x * b.y - a.y * b.x;\n  };\n  /* Dot Product of two vectors with first point at origin */\n\n  var dotProduct = function dotProduct(a, b) {\n    return a.x * b.x + a.y * b.y;\n  };\n  /* Comparator for two vectors with same starting point */\n\n  var compareVectorAngles = function compareVectorAngles(basePt, endPt1, endPt2) {\n    var v1 = {\n      x: endPt1.x - basePt.x,\n      y: endPt1.y - basePt.y\n    };\n    var v2 = {\n      x: endPt2.x - basePt.x,\n      y: endPt2.y - basePt.y\n    };\n    var kross = crossProduct(v1, v2);\n    return cmp(kross, 0);\n  };\n  var length = function length(v) {\n    return Math.sqrt(dotProduct(v, v));\n  };\n  /* Get the sine of the angle from pShared -> pAngle to pShaed -> pBase */\n\n  var sineOfAngle = function sineOfAngle(pShared, pBase, pAngle) {\n    var vBase = {\n      x: pBase.x - pShared.x,\n      y: pBase.y - pShared.y\n    };\n    var vAngle = {\n      x: pAngle.x - pShared.x,\n      y: pAngle.y - pShared.y\n    };\n    return crossProduct(vAngle, vBase) / length(vAngle) / length(vBase);\n  };\n  /* Get the cosine of the angle from pShared -> pAngle to pShaed -> pBase */\n\n  var cosineOfAngle = function cosineOfAngle(pShared, pBase, pAngle) {\n    var vBase = {\n      x: pBase.x - pShared.x,\n      y: pBase.y - pShared.y\n    };\n    var vAngle = {\n      x: pAngle.x - pShared.x,\n      y: pAngle.y - pShared.y\n    };\n    return dotProduct(vAngle, vBase) / length(vAngle) / length(vBase);\n  };\n  /* Get the x coordinate where the given line (defined by a point and vector)\n   * crosses the horizontal line with the given y coordiante.\n   * In the case of parrallel lines (including overlapping ones) returns null. */\n\n  var horizontalIntersection = function horizontalIntersection(pt, v, y) {\n    if (v.y === 0) return null;\n    return {\n      x: pt.x + v.x / v.y * (y - pt.y),\n      y: y\n    };\n  };\n  /* Get the y coordinate where the given line (defined by a point and vector)\n   * crosses the vertical line with the given x coordiante.\n   * In the case of parrallel lines (including overlapping ones) returns null. */\n\n  var verticalIntersection = function verticalIntersection(pt, v, x) {\n    if (v.x === 0) return null;\n    return {\n      x: x,\n      y: pt.y + v.y / v.x * (x - pt.x)\n    };\n  };\n  /* Get the intersection of two lines, each defined by a base point and a vector.\n   * In the case of parrallel lines (including overlapping ones) returns null. */\n\n  var intersection = function intersection(pt1, v1, pt2, v2) {\n    // take some shortcuts for vertical and horizontal lines\n    // this also ensures we don't calculate an intersection and then discover\n    // it's actually outside the bounding box of the line\n    if (v1.x === 0) return verticalIntersection(pt2, v2, pt1.x);\n    if (v2.x === 0) return verticalIntersection(pt1, v1, pt2.x);\n    if (v1.y === 0) return horizontalIntersection(pt2, v2, pt1.y);\n    if (v2.y === 0) return horizontalIntersection(pt1, v1, pt2.y); // General case for non-overlapping segments.\n    // This algorithm is based on Schneider and Eberly.\n    // http://www.cimec.org.ar/~ncalvo/Schneider_Eberly.pdf - pg 244\n\n    var kross = crossProduct(v1, v2);\n    if (kross == 0) return null;\n    var ve = {\n      x: pt2.x - pt1.x,\n      y: pt2.y - pt1.y\n    };\n    var d1 = crossProduct(ve, v1) / kross;\n    var d2 = crossProduct(ve, v2) / kross; // take the average of the two calculations to minimize rounding error\n\n    var x1 = pt1.x + d2 * v1.x,\n        x2 = pt2.x + d1 * v2.x;\n    var y1 = pt1.y + d2 * v1.y,\n        y2 = pt2.y + d1 * v2.y;\n    var x = (x1 + x2) / 2;\n    var y = (y1 + y2) / 2;\n    return {\n      x: x,\n      y: y\n    };\n  };\n\n  var SweepEvent = /*#__PURE__*/function () {\n    _createClass(SweepEvent, null, [{\n      key: \"compare\",\n      // for ordering sweep events in the sweep event queue\n      value: function compare(a, b) {\n        // favor event with a point that the sweep line hits first\n        var ptCmp = SweepEvent.comparePoints(a.point, b.point);\n        if (ptCmp !== 0) return ptCmp; // the points are the same, so link them if needed\n\n        if (a.point !== b.point) a.link(b); // favor right events over left\n\n        if (a.isLeft !== b.isLeft) return a.isLeft ? 1 : -1; // we have two matching left or right endpoints\n        // ordering of this case is the same as for their segments\n\n        return Segment.compare(a.segment, b.segment);\n      } // for ordering points in sweep line order\n\n    }, {\n      key: \"comparePoints\",\n      value: function comparePoints(aPt, bPt) {\n        if (aPt.x < bPt.x) return -1;\n        if (aPt.x > bPt.x) return 1;\n        if (aPt.y < bPt.y) return -1;\n        if (aPt.y > bPt.y) return 1;\n        return 0;\n      } // Warning: 'point' input will be modified and re-used (for performance)\n\n    }]);\n\n    function SweepEvent(point, isLeft) {\n      _classCallCheck(this, SweepEvent);\n\n      if (point.events === undefined) point.events = [this];else point.events.push(this);\n      this.point = point;\n      this.isLeft = isLeft; // this.segment, this.otherSE set by factory\n    }\n\n    _createClass(SweepEvent, [{\n      key: \"link\",\n      value: function link(other) {\n        if (other.point === this.point) {\n          throw new Error('Tried to link already linked events');\n        }\n\n        var otherEvents = other.point.events;\n\n        for (var i = 0, iMax = otherEvents.length; i < iMax; i++) {\n          var evt = otherEvents[i];\n          this.point.events.push(evt);\n          evt.point = this.point;\n        }\n\n        this.checkForConsuming();\n      }\n      /* Do a pass over our linked events and check to see if any pair\n       * of segments match, and should be consumed. */\n\n    }, {\n      key: \"checkForConsuming\",\n      value: function checkForConsuming() {\n        // FIXME: The loops in this method run O(n^2) => no good.\n        //        Maintain little ordered sweep event trees?\n        //        Can we maintaining an ordering that avoids the need\n        //        for the re-sorting with getLeftmostComparator in geom-out?\n        // Compare each pair of events to see if other events also match\n        var numEvents = this.point.events.length;\n\n        for (var i = 0; i < numEvents; i++) {\n          var evt1 = this.point.events[i];\n          if (evt1.segment.consumedBy !== undefined) continue;\n\n          for (var j = i + 1; j < numEvents; j++) {\n            var evt2 = this.point.events[j];\n            if (evt2.consumedBy !== undefined) continue;\n            if (evt1.otherSE.point.events !== evt2.otherSE.point.events) continue;\n            evt1.segment.consume(evt2.segment);\n          }\n        }\n      }\n    }, {\n      key: \"getAvailableLinkedEvents\",\n      value: function getAvailableLinkedEvents() {\n        // point.events is always of length 2 or greater\n        var events = [];\n\n        for (var i = 0, iMax = this.point.events.length; i < iMax; i++) {\n          var evt = this.point.events[i];\n\n          if (evt !== this && !evt.segment.ringOut && evt.segment.isInResult()) {\n            events.push(evt);\n          }\n        }\n\n        return events;\n      }\n      /**\n       * Returns a comparator function for sorting linked events that will\n       * favor the event that will give us the smallest left-side angle.\n       * All ring construction starts as low as possible heading to the right,\n       * so by always turning left as sharp as possible we'll get polygons\n       * without uncessary loops & holes.\n       *\n       * The comparator function has a compute cache such that it avoids\n       * re-computing already-computed values.\n       */\n\n    }, {\n      key: \"getLeftmostComparator\",\n      value: function getLeftmostComparator(baseEvent) {\n        var _this = this;\n\n        var cache = new Map();\n\n        var fillCache = function fillCache(linkedEvent) {\n          var nextEvent = linkedEvent.otherSE;\n          cache.set(linkedEvent, {\n            sine: sineOfAngle(_this.point, baseEvent.point, nextEvent.point),\n            cosine: cosineOfAngle(_this.point, baseEvent.point, nextEvent.point)\n          });\n        };\n\n        return function (a, b) {\n          if (!cache.has(a)) fillCache(a);\n          if (!cache.has(b)) fillCache(b);\n\n          var _cache$get = cache.get(a),\n              asine = _cache$get.sine,\n              acosine = _cache$get.cosine;\n\n          var _cache$get2 = cache.get(b),\n              bsine = _cache$get2.sine,\n              bcosine = _cache$get2.cosine; // both on or above x-axis\n\n\n          if (asine >= 0 && bsine >= 0) {\n            if (acosine < bcosine) return 1;\n            if (acosine > bcosine) return -1;\n            return 0;\n          } // both below x-axis\n\n\n          if (asine < 0 && bsine < 0) {\n            if (acosine < bcosine) return -1;\n            if (acosine > bcosine) return 1;\n            return 0;\n          } // one above x-axis, one below\n\n\n          if (bsine < asine) return -1;\n          if (bsine > asine) return 1;\n          return 0;\n        };\n      }\n    }]);\n\n    return SweepEvent;\n  }();\n\n  // segments and sweep events when all else is identical\n\n  var segmentId = 0;\n\n  var Segment = /*#__PURE__*/function () {\n    _createClass(Segment, null, [{\n      key: \"compare\",\n\n      /* This compare() function is for ordering segments in the sweep\n       * line tree, and does so according to the following criteria:\n       *\n       * Consider the vertical line that lies an infinestimal step to the\n       * right of the right-more of the two left endpoints of the input\n       * segments. Imagine slowly moving a point up from negative infinity\n       * in the increasing y direction. Which of the two segments will that\n       * point intersect first? That segment comes 'before' the other one.\n       *\n       * If neither segment would be intersected by such a line, (if one\n       * or more of the segments are vertical) then the line to be considered\n       * is directly on the right-more of the two left inputs.\n       */\n      value: function compare(a, b) {\n        var alx = a.leftSE.point.x;\n        var blx = b.leftSE.point.x;\n        var arx = a.rightSE.point.x;\n        var brx = b.rightSE.point.x; // check if they're even in the same vertical plane\n\n        if (brx < alx) return 1;\n        if (arx < blx) return -1;\n        var aly = a.leftSE.point.y;\n        var bly = b.leftSE.point.y;\n        var ary = a.rightSE.point.y;\n        var bry = b.rightSE.point.y; // is left endpoint of segment B the right-more?\n\n        if (alx < blx) {\n          // are the two segments in the same horizontal plane?\n          if (bly < aly && bly < ary) return 1;\n          if (bly > aly && bly > ary) return -1; // is the B left endpoint colinear to segment A?\n\n          var aCmpBLeft = a.comparePoint(b.leftSE.point);\n          if (aCmpBLeft < 0) return 1;\n          if (aCmpBLeft > 0) return -1; // is the A right endpoint colinear to segment B ?\n\n          var bCmpARight = b.comparePoint(a.rightSE.point);\n          if (bCmpARight !== 0) return bCmpARight; // colinear segments, consider the one with left-more\n          // left endpoint to be first (arbitrary?)\n\n          return -1;\n        } // is left endpoint of segment A the right-more?\n\n\n        if (alx > blx) {\n          if (aly < bly && aly < bry) return -1;\n          if (aly > bly && aly > bry) return 1; // is the A left endpoint colinear to segment B?\n\n          var bCmpALeft = b.comparePoint(a.leftSE.point);\n          if (bCmpALeft !== 0) return bCmpALeft; // is the B right endpoint colinear to segment A?\n\n          var aCmpBRight = a.comparePoint(b.rightSE.point);\n          if (aCmpBRight < 0) return 1;\n          if (aCmpBRight > 0) return -1; // colinear segments, consider the one with left-more\n          // left endpoint to be first (arbitrary?)\n\n          return 1;\n        } // if we get here, the two left endpoints are in the same\n        // vertical plane, ie alx === blx\n        // consider the lower left-endpoint to come first\n\n\n        if (aly < bly) return -1;\n        if (aly > bly) return 1; // left endpoints are identical\n        // check for colinearity by using the left-more right endpoint\n        // is the A right endpoint more left-more?\n\n        if (arx < brx) {\n          var _bCmpARight = b.comparePoint(a.rightSE.point);\n\n          if (_bCmpARight !== 0) return _bCmpARight;\n        } // is the B right endpoint more left-more?\n\n\n        if (arx > brx) {\n          var _aCmpBRight = a.comparePoint(b.rightSE.point);\n\n          if (_aCmpBRight < 0) return 1;\n          if (_aCmpBRight > 0) return -1;\n        }\n\n        if (arx !== brx) {\n          // are these two [almost] vertical segments with opposite orientation?\n          // if so, the one with the lower right endpoint comes first\n          var ay = ary - aly;\n          var ax = arx - alx;\n          var by = bry - bly;\n          var bx = brx - blx;\n          if (ay > ax && by < bx) return 1;\n          if (ay < ax && by > bx) return -1;\n        } // we have colinear segments with matching orientation\n        // consider the one with more left-more right endpoint to be first\n\n\n        if (arx > brx) return 1;\n        if (arx < brx) return -1; // if we get here, two two right endpoints are in the same\n        // vertical plane, ie arx === brx\n        // consider the lower right-endpoint to come first\n\n        if (ary < bry) return -1;\n        if (ary > bry) return 1; // right endpoints identical as well, so the segments are idential\n        // fall back on creation order as consistent tie-breaker\n\n        if (a.id < b.id) return -1;\n        if (a.id > b.id) return 1; // identical segment, ie a === b\n\n        return 0;\n      }\n      /* Warning: a reference to ringWindings input will be stored,\n       *  and possibly will be later modified */\n\n    }]);\n\n    function Segment(leftSE, rightSE, rings, windings) {\n      _classCallCheck(this, Segment);\n\n      this.id = ++segmentId;\n      this.leftSE = leftSE;\n      leftSE.segment = this;\n      leftSE.otherSE = rightSE;\n      this.rightSE = rightSE;\n      rightSE.segment = this;\n      rightSE.otherSE = leftSE;\n      this.rings = rings;\n      this.windings = windings; // left unset for performance, set later in algorithm\n      // this.ringOut, this.consumedBy, this.prev\n    }\n\n    _createClass(Segment, [{\n      key: \"replaceRightSE\",\n\n      /* When a segment is split, the rightSE is replaced with a new sweep event */\n      value: function replaceRightSE(newRightSE) {\n        this.rightSE = newRightSE;\n        this.rightSE.segment = this;\n        this.rightSE.otherSE = this.leftSE;\n        this.leftSE.otherSE = this.rightSE;\n      }\n    }, {\n      key: \"bbox\",\n      value: function bbox() {\n        var y1 = this.leftSE.point.y;\n        var y2 = this.rightSE.point.y;\n        return {\n          ll: {\n            x: this.leftSE.point.x,\n            y: y1 < y2 ? y1 : y2\n          },\n          ur: {\n            x: this.rightSE.point.x,\n            y: y1 > y2 ? y1 : y2\n          }\n        };\n      }\n      /* A vector from the left point to the right */\n\n    }, {\n      key: \"vector\",\n      value: function vector() {\n        return {\n          x: this.rightSE.point.x - this.leftSE.point.x,\n          y: this.rightSE.point.y - this.leftSE.point.y\n        };\n      }\n    }, {\n      key: \"isAnEndpoint\",\n      value: function isAnEndpoint(pt) {\n        return pt.x === this.leftSE.point.x && pt.y === this.leftSE.point.y || pt.x === this.rightSE.point.x && pt.y === this.rightSE.point.y;\n      }\n      /* Compare this segment with a point.\n       *\n       * A point P is considered to be colinear to a segment if there\n       * exists a distance D such that if we travel along the segment\n       * from one * endpoint towards the other a distance D, we find\n       * ourselves at point P.\n       *\n       * Return value indicates:\n       *\n       *   1: point lies above the segment (to the left of vertical)\n       *   0: point is colinear to segment\n       *  -1: point lies below the segment (to the right of vertical)\n       */\n\n    }, {\n      key: \"comparePoint\",\n      value: function comparePoint(point) {\n        if (this.isAnEndpoint(point)) return 0;\n        var lPt = this.leftSE.point;\n        var rPt = this.rightSE.point;\n        var v = this.vector(); // Exactly vertical segments.\n\n        if (lPt.x === rPt.x) {\n          if (point.x === lPt.x) return 0;\n          return point.x < lPt.x ? 1 : -1;\n        } // Nearly vertical segments with an intersection.\n        // Check to see where a point on the line with matching Y coordinate is.\n\n\n        var yDist = (point.y - lPt.y) / v.y;\n        var xFromYDist = lPt.x + yDist * v.x;\n        if (point.x === xFromYDist) return 0; // General case.\n        // Check to see where a point on the line with matching X coordinate is.\n\n        var xDist = (point.x - lPt.x) / v.x;\n        var yFromXDist = lPt.y + xDist * v.y;\n        if (point.y === yFromXDist) return 0;\n        return point.y < yFromXDist ? -1 : 1;\n      }\n      /**\n       * Given another segment, returns the first non-trivial intersection\n       * between the two segments (in terms of sweep line ordering), if it exists.\n       *\n       * A 'non-trivial' intersection is one that will cause one or both of the\n       * segments to be split(). As such, 'trivial' vs. 'non-trivial' intersection:\n       *\n       *   * endpoint of segA with endpoint of segB --> trivial\n       *   * endpoint of segA with point along segB --> non-trivial\n       *   * endpoint of segB with point along segA --> non-trivial\n       *   * point along segA with point along segB --> non-trivial\n       *\n       * If no non-trivial intersection exists, return null\n       * Else, return null.\n       */\n\n    }, {\n      key: \"getIntersection\",\n      value: function getIntersection(other) {\n        // If bboxes don't overlap, there can't be any intersections\n        var tBbox = this.bbox();\n        var oBbox = other.bbox();\n        var bboxOverlap = getBboxOverlap(tBbox, oBbox);\n        if (bboxOverlap === null) return null; // We first check to see if the endpoints can be considered intersections.\n        // This will 'snap' intersections to endpoints if possible, and will\n        // handle cases of colinearity.\n\n        var tlp = this.leftSE.point;\n        var trp = this.rightSE.point;\n        var olp = other.leftSE.point;\n        var orp = other.rightSE.point; // does each endpoint touch the other segment?\n        // note that we restrict the 'touching' definition to only allow segments\n        // to touch endpoints that lie forward from where we are in the sweep line pass\n\n        var touchesOtherLSE = isInBbox(tBbox, olp) && this.comparePoint(olp) === 0;\n        var touchesThisLSE = isInBbox(oBbox, tlp) && other.comparePoint(tlp) === 0;\n        var touchesOtherRSE = isInBbox(tBbox, orp) && this.comparePoint(orp) === 0;\n        var touchesThisRSE = isInBbox(oBbox, trp) && other.comparePoint(trp) === 0; // do left endpoints match?\n\n        if (touchesThisLSE && touchesOtherLSE) {\n          // these two cases are for colinear segments with matching left\n          // endpoints, and one segment being longer than the other\n          if (touchesThisRSE && !touchesOtherRSE) return trp;\n          if (!touchesThisRSE && touchesOtherRSE) return orp; // either the two segments match exactly (two trival intersections)\n          // or just on their left endpoint (one trivial intersection\n\n          return null;\n        } // does this left endpoint matches (other doesn't)\n\n\n        if (touchesThisLSE) {\n          // check for segments that just intersect on opposing endpoints\n          if (touchesOtherRSE) {\n            if (tlp.x === orp.x && tlp.y === orp.y) return null;\n          } // t-intersection on left endpoint\n\n\n          return tlp;\n        } // does other left endpoint matches (this doesn't)\n\n\n        if (touchesOtherLSE) {\n          // check for segments that just intersect on opposing endpoints\n          if (touchesThisRSE) {\n            if (trp.x === olp.x && trp.y === olp.y) return null;\n          } // t-intersection on left endpoint\n\n\n          return olp;\n        } // trivial intersection on right endpoints\n\n\n        if (touchesThisRSE && touchesOtherRSE) return null; // t-intersections on just one right endpoint\n\n        if (touchesThisRSE) return trp;\n        if (touchesOtherRSE) return orp; // None of our endpoints intersect. Look for a general intersection between\n        // infinite lines laid over the segments\n\n        var pt = intersection(tlp, this.vector(), olp, other.vector()); // are the segments parrallel? Note that if they were colinear with overlap,\n        // they would have an endpoint intersection and that case was already handled above\n\n        if (pt === null) return null; // is the intersection found between the lines not on the segments?\n\n        if (!isInBbox(bboxOverlap, pt)) return null; // round the the computed point if needed\n\n        return rounder.round(pt.x, pt.y);\n      }\n      /**\n       * Split the given segment into multiple segments on the given points.\n       *  * Each existing segment will retain its leftSE and a new rightSE will be\n       *    generated for it.\n       *  * A new segment will be generated which will adopt the original segment's\n       *    rightSE, and a new leftSE will be generated for it.\n       *  * If there are more than two points given to split on, new segments\n       *    in the middle will be generated with new leftSE and rightSE's.\n       *  * An array of the newly generated SweepEvents will be returned.\n       *\n       * Warning: input array of points is modified\n       */\n\n    }, {\n      key: \"split\",\n      value: function split(point) {\n        var newEvents = [];\n        var alreadyLinked = point.events !== undefined;\n        var newLeftSE = new SweepEvent(point, true);\n        var newRightSE = new SweepEvent(point, false);\n        var oldRightSE = this.rightSE;\n        this.replaceRightSE(newRightSE);\n        newEvents.push(newRightSE);\n        newEvents.push(newLeftSE);\n        var newSeg = new Segment(newLeftSE, oldRightSE, this.rings.slice(), this.windings.slice()); // when splitting a nearly vertical downward-facing segment,\n        // sometimes one of the resulting new segments is vertical, in which\n        // case its left and right events may need to be swapped\n\n        if (SweepEvent.comparePoints(newSeg.leftSE.point, newSeg.rightSE.point) > 0) {\n          newSeg.swapEvents();\n        }\n\n        if (SweepEvent.comparePoints(this.leftSE.point, this.rightSE.point) > 0) {\n          this.swapEvents();\n        } // in the point we just used to create new sweep events with was already\n        // linked to other events, we need to check if either of the affected\n        // segments should be consumed\n\n\n        if (alreadyLinked) {\n          newLeftSE.checkForConsuming();\n          newRightSE.checkForConsuming();\n        }\n\n        return newEvents;\n      }\n      /* Swap which event is left and right */\n\n    }, {\n      key: \"swapEvents\",\n      value: function swapEvents() {\n        var tmpEvt = this.rightSE;\n        this.rightSE = this.leftSE;\n        this.leftSE = tmpEvt;\n        this.leftSE.isLeft = true;\n        this.rightSE.isLeft = false;\n\n        for (var i = 0, iMax = this.windings.length; i < iMax; i++) {\n          this.windings[i] *= -1;\n        }\n      }\n      /* Consume another segment. We take their rings under our wing\n       * and mark them as consumed. Use for perfectly overlapping segments */\n\n    }, {\n      key: \"consume\",\n      value: function consume(other) {\n        var consumer = this;\n        var consumee = other;\n\n        while (consumer.consumedBy) {\n          consumer = consumer.consumedBy;\n        }\n\n        while (consumee.consumedBy) {\n          consumee = consumee.consumedBy;\n        }\n\n        var cmp = Segment.compare(consumer, consumee);\n        if (cmp === 0) return; // already consumed\n        // the winner of the consumption is the earlier segment\n        // according to sweep line ordering\n\n        if (cmp > 0) {\n          var tmp = consumer;\n          consumer = consumee;\n          consumee = tmp;\n        } // make sure a segment doesn't consume it's prev\n\n\n        if (consumer.prev === consumee) {\n          var _tmp = consumer;\n          consumer = consumee;\n          consumee = _tmp;\n        }\n\n        for (var i = 0, iMax = consumee.rings.length; i < iMax; i++) {\n          var ring = consumee.rings[i];\n          var winding = consumee.windings[i];\n          var index = consumer.rings.indexOf(ring);\n\n          if (index === -1) {\n            consumer.rings.push(ring);\n            consumer.windings.push(winding);\n          } else consumer.windings[index] += winding;\n        }\n\n        consumee.rings = null;\n        consumee.windings = null;\n        consumee.consumedBy = consumer; // mark sweep events consumed as to maintain ordering in sweep event queue\n\n        consumee.leftSE.consumedBy = consumer.leftSE;\n        consumee.rightSE.consumedBy = consumer.rightSE;\n      }\n      /* The first segment previous segment chain that is in the result */\n\n    }, {\n      key: \"prevInResult\",\n      value: function prevInResult() {\n        if (this._prevInResult !== undefined) return this._prevInResult;\n        if (!this.prev) this._prevInResult = null;else if (this.prev.isInResult()) this._prevInResult = this.prev;else this._prevInResult = this.prev.prevInResult();\n        return this._prevInResult;\n      }\n    }, {\n      key: \"beforeState\",\n      value: function beforeState() {\n        if (this._beforeState !== undefined) return this._beforeState;\n        if (!this.prev) this._beforeState = {\n          rings: [],\n          windings: [],\n          multiPolys: []\n        };else {\n          var seg = this.prev.consumedBy || this.prev;\n          this._beforeState = seg.afterState();\n        }\n        return this._beforeState;\n      }\n    }, {\n      key: \"afterState\",\n      value: function afterState() {\n        if (this._afterState !== undefined) return this._afterState;\n        var beforeState = this.beforeState();\n        this._afterState = {\n          rings: beforeState.rings.slice(0),\n          windings: beforeState.windings.slice(0),\n          multiPolys: []\n        };\n        var ringsAfter = this._afterState.rings;\n        var windingsAfter = this._afterState.windings;\n        var mpsAfter = this._afterState.multiPolys; // calculate ringsAfter, windingsAfter\n\n        for (var i = 0, iMax = this.rings.length; i < iMax; i++) {\n          var ring = this.rings[i];\n          var winding = this.windings[i];\n          var index = ringsAfter.indexOf(ring);\n\n          if (index === -1) {\n            ringsAfter.push(ring);\n            windingsAfter.push(winding);\n          } else windingsAfter[index] += winding;\n        } // calcualte polysAfter\n\n\n        var polysAfter = [];\n        var polysExclude = [];\n\n        for (var _i = 0, _iMax = ringsAfter.length; _i < _iMax; _i++) {\n          if (windingsAfter[_i] === 0) continue; // non-zero rule\n\n          var _ring = ringsAfter[_i];\n          var poly = _ring.poly;\n          if (polysExclude.indexOf(poly) !== -1) continue;\n          if (_ring.isExterior) polysAfter.push(poly);else {\n            if (polysExclude.indexOf(poly) === -1) polysExclude.push(poly);\n\n            var _index = polysAfter.indexOf(_ring.poly);\n\n            if (_index !== -1) polysAfter.splice(_index, 1);\n          }\n        } // calculate multiPolysAfter\n\n\n        for (var _i2 = 0, _iMax2 = polysAfter.length; _i2 < _iMax2; _i2++) {\n          var mp = polysAfter[_i2].multiPoly;\n          if (mpsAfter.indexOf(mp) === -1) mpsAfter.push(mp);\n        }\n\n        return this._afterState;\n      }\n      /* Is this segment part of the final result? */\n\n    }, {\n      key: \"isInResult\",\n      value: function isInResult() {\n        // if we've been consumed, we're not in the result\n        if (this.consumedBy) return false;\n        if (this._isInResult !== undefined) return this._isInResult;\n        var mpsBefore = this.beforeState().multiPolys;\n        var mpsAfter = this.afterState().multiPolys;\n\n        switch (operation.type) {\n          case 'union':\n            {\n              // UNION - included iff:\n              //  * On one side of us there is 0 poly interiors AND\n              //  * On the other side there is 1 or more.\n              var noBefores = mpsBefore.length === 0;\n              var noAfters = mpsAfter.length === 0;\n              this._isInResult = noBefores !== noAfters;\n              break;\n            }\n\n          case 'intersection':\n            {\n              // INTERSECTION - included iff:\n              //  * on one side of us all multipolys are rep. with poly interiors AND\n              //  * on the other side of us, not all multipolys are repsented\n              //    with poly interiors\n              var least;\n              var most;\n\n              if (mpsBefore.length < mpsAfter.length) {\n                least = mpsBefore.length;\n                most = mpsAfter.length;\n              } else {\n                least = mpsAfter.length;\n                most = mpsBefore.length;\n              }\n\n              this._isInResult = most === operation.numMultiPolys && least < most;\n              break;\n            }\n\n          case 'xor':\n            {\n              // XOR - included iff:\n              //  * the difference between the number of multipolys represented\n              //    with poly interiors on our two sides is an odd number\n              var diff = Math.abs(mpsBefore.length - mpsAfter.length);\n              this._isInResult = diff % 2 === 1;\n              break;\n            }\n\n          case 'difference':\n            {\n              // DIFFERENCE included iff:\n              //  * on exactly one side, we have just the subject\n              var isJustSubject = function isJustSubject(mps) {\n                return mps.length === 1 && mps[0].isSubject;\n              };\n\n              this._isInResult = isJustSubject(mpsBefore) !== isJustSubject(mpsAfter);\n              break;\n            }\n\n          default:\n            throw new Error(\"Unrecognized operation type found \".concat(operation.type));\n        }\n\n        return this._isInResult;\n      }\n    }], [{\n      key: \"fromRing\",\n      value: function fromRing(pt1, pt2, ring) {\n        var leftPt, rightPt, winding; // ordering the two points according to sweep line ordering\n\n        var cmpPts = SweepEvent.comparePoints(pt1, pt2);\n\n        if (cmpPts < 0) {\n          leftPt = pt1;\n          rightPt = pt2;\n          winding = 1;\n        } else if (cmpPts > 0) {\n          leftPt = pt2;\n          rightPt = pt1;\n          winding = -1;\n        } else throw new Error(\"Tried to create degenerate segment at [\".concat(pt1.x, \", \").concat(pt1.y, \"]\"));\n\n        var leftSE = new SweepEvent(leftPt, true);\n        var rightSE = new SweepEvent(rightPt, false);\n        return new Segment(leftSE, rightSE, [ring], [winding]);\n      }\n    }]);\n\n    return Segment;\n  }();\n\n  var RingIn = /*#__PURE__*/function () {\n    function RingIn(geomRing, poly, isExterior) {\n      _classCallCheck(this, RingIn);\n\n      if (!Array.isArray(geomRing) || geomRing.length === 0) {\n        throw new Error('Input geometry is not a valid Polygon or MultiPolygon');\n      }\n\n      this.poly = poly;\n      this.isExterior = isExterior;\n      this.segments = [];\n\n      if (typeof geomRing[0][0] !== 'number' || typeof geomRing[0][1] !== 'number') {\n        throw new Error('Input geometry is not a valid Polygon or MultiPolygon');\n      }\n\n      var firstPoint = rounder.round(geomRing[0][0], geomRing[0][1]);\n      this.bbox = {\n        ll: {\n          x: firstPoint.x,\n          y: firstPoint.y\n        },\n        ur: {\n          x: firstPoint.x,\n          y: firstPoint.y\n        }\n      };\n      var prevPoint = firstPoint;\n\n      for (var i = 1, iMax = geomRing.length; i < iMax; i++) {\n        if (typeof geomRing[i][0] !== 'number' || typeof geomRing[i][1] !== 'number') {\n          throw new Error('Input geometry is not a valid Polygon or MultiPolygon');\n        }\n\n        var point = rounder.round(geomRing[i][0], geomRing[i][1]); // skip repeated points\n\n        if (point.x === prevPoint.x && point.y === prevPoint.y) continue;\n        this.segments.push(Segment.fromRing(prevPoint, point, this));\n        if (point.x < this.bbox.ll.x) this.bbox.ll.x = point.x;\n        if (point.y < this.bbox.ll.y) this.bbox.ll.y = point.y;\n        if (point.x > this.bbox.ur.x) this.bbox.ur.x = point.x;\n        if (point.y > this.bbox.ur.y) this.bbox.ur.y = point.y;\n        prevPoint = point;\n      } // add segment from last to first if last is not the same as first\n\n\n      if (firstPoint.x !== prevPoint.x || firstPoint.y !== prevPoint.y) {\n        this.segments.push(Segment.fromRing(prevPoint, firstPoint, this));\n      }\n    }\n\n    _createClass(RingIn, [{\n      key: \"getSweepEvents\",\n      value: function getSweepEvents() {\n        var sweepEvents = [];\n\n        for (var i = 0, iMax = this.segments.length; i < iMax; i++) {\n          var segment = this.segments[i];\n          sweepEvents.push(segment.leftSE);\n          sweepEvents.push(segment.rightSE);\n        }\n\n        return sweepEvents;\n      }\n    }]);\n\n    return RingIn;\n  }();\n  var PolyIn = /*#__PURE__*/function () {\n    function PolyIn(geomPoly, multiPoly) {\n      _classCallCheck(this, PolyIn);\n\n      if (!Array.isArray(geomPoly)) {\n        throw new Error('Input geometry is not a valid Polygon or MultiPolygon');\n      }\n\n      this.exteriorRing = new RingIn(geomPoly[0], this, true); // copy by value\n\n      this.bbox = {\n        ll: {\n          x: this.exteriorRing.bbox.ll.x,\n          y: this.exteriorRing.bbox.ll.y\n        },\n        ur: {\n          x: this.exteriorRing.bbox.ur.x,\n          y: this.exteriorRing.bbox.ur.y\n        }\n      };\n      this.interiorRings = [];\n\n      for (var i = 1, iMax = geomPoly.length; i < iMax; i++) {\n        var ring = new RingIn(geomPoly[i], this, false);\n        if (ring.bbox.ll.x < this.bbox.ll.x) this.bbox.ll.x = ring.bbox.ll.x;\n        if (ring.bbox.ll.y < this.bbox.ll.y) this.bbox.ll.y = ring.bbox.ll.y;\n        if (ring.bbox.ur.x > this.bbox.ur.x) this.bbox.ur.x = ring.bbox.ur.x;\n        if (ring.bbox.ur.y > this.bbox.ur.y) this.bbox.ur.y = ring.bbox.ur.y;\n        this.interiorRings.push(ring);\n      }\n\n      this.multiPoly = multiPoly;\n    }\n\n    _createClass(PolyIn, [{\n      key: \"getSweepEvents\",\n      value: function getSweepEvents() {\n        var sweepEvents = this.exteriorRing.getSweepEvents();\n\n        for (var i = 0, iMax = this.interiorRings.length; i < iMax; i++) {\n          var ringSweepEvents = this.interiorRings[i].getSweepEvents();\n\n          for (var j = 0, jMax = ringSweepEvents.length; j < jMax; j++) {\n            sweepEvents.push(ringSweepEvents[j]);\n          }\n        }\n\n        return sweepEvents;\n      }\n    }]);\n\n    return PolyIn;\n  }();\n  var MultiPolyIn = /*#__PURE__*/function () {\n    function MultiPolyIn(geom, isSubject) {\n      _classCallCheck(this, MultiPolyIn);\n\n      if (!Array.isArray(geom)) {\n        throw new Error('Input geometry is not a valid Polygon or MultiPolygon');\n      }\n\n      try {\n        // if the input looks like a polygon, convert it to a multipolygon\n        if (typeof geom[0][0][0] === 'number') geom = [geom];\n      } catch (ex) {// The input is either malformed or has empty arrays.\n        // In either case, it will be handled later on.\n      }\n\n      this.polys = [];\n      this.bbox = {\n        ll: {\n          x: Number.POSITIVE_INFINITY,\n          y: Number.POSITIVE_INFINITY\n        },\n        ur: {\n          x: Number.NEGATIVE_INFINITY,\n          y: Number.NEGATIVE_INFINITY\n        }\n      };\n\n      for (var i = 0, iMax = geom.length; i < iMax; i++) {\n        var poly = new PolyIn(geom[i], this);\n        if (poly.bbox.ll.x < this.bbox.ll.x) this.bbox.ll.x = poly.bbox.ll.x;\n        if (poly.bbox.ll.y < this.bbox.ll.y) this.bbox.ll.y = poly.bbox.ll.y;\n        if (poly.bbox.ur.x > this.bbox.ur.x) this.bbox.ur.x = poly.bbox.ur.x;\n        if (poly.bbox.ur.y > this.bbox.ur.y) this.bbox.ur.y = poly.bbox.ur.y;\n        this.polys.push(poly);\n      }\n\n      this.isSubject = isSubject;\n    }\n\n    _createClass(MultiPolyIn, [{\n      key: \"getSweepEvents\",\n      value: function getSweepEvents() {\n        var sweepEvents = [];\n\n        for (var i = 0, iMax = this.polys.length; i < iMax; i++) {\n          var polySweepEvents = this.polys[i].getSweepEvents();\n\n          for (var j = 0, jMax = polySweepEvents.length; j < jMax; j++) {\n            sweepEvents.push(polySweepEvents[j]);\n          }\n        }\n\n        return sweepEvents;\n      }\n    }]);\n\n    return MultiPolyIn;\n  }();\n\n  var RingOut = /*#__PURE__*/function () {\n    _createClass(RingOut, null, [{\n      key: \"factory\",\n\n      /* Given the segments from the sweep line pass, compute & return a series\n       * of closed rings from all the segments marked to be part of the result */\n      value: function factory(allSegments) {\n        var ringsOut = [];\n\n        for (var i = 0, iMax = allSegments.length; i < iMax; i++) {\n          var segment = allSegments[i];\n          if (!segment.isInResult() || segment.ringOut) continue;\n          var prevEvent = null;\n          var event = segment.leftSE;\n          var nextEvent = segment.rightSE;\n          var events = [event];\n          var startingPoint = event.point;\n          var intersectionLEs = [];\n          /* Walk the chain of linked events to form a closed ring */\n\n          while (true) {\n            prevEvent = event;\n            event = nextEvent;\n            events.push(event);\n            /* Is the ring complete? */\n\n            if (event.point === startingPoint) break;\n\n            while (true) {\n              var availableLEs = event.getAvailableLinkedEvents();\n              /* Did we hit a dead end? This shouldn't happen. Indicates some earlier\n               * part of the algorithm malfunctioned... please file a bug report. */\n\n              if (availableLEs.length === 0) {\n                var firstPt = events[0].point;\n                var lastPt = events[events.length - 1].point;\n                throw new Error(\"Unable to complete output ring starting at [\".concat(firstPt.x, \",\") + \" \".concat(firstPt.y, \"]. Last matching segment found ends at\") + \" [\".concat(lastPt.x, \", \").concat(lastPt.y, \"].\"));\n              }\n              /* Only one way to go, so cotinue on the path */\n\n\n              if (availableLEs.length === 1) {\n                nextEvent = availableLEs[0].otherSE;\n                break;\n              }\n              /* We must have an intersection. Check for a completed loop */\n\n\n              var indexLE = null;\n\n              for (var j = 0, jMax = intersectionLEs.length; j < jMax; j++) {\n                if (intersectionLEs[j].point === event.point) {\n                  indexLE = j;\n                  break;\n                }\n              }\n              /* Found a completed loop. Cut that off and make a ring */\n\n\n              if (indexLE !== null) {\n                var intersectionLE = intersectionLEs.splice(indexLE)[0];\n                var ringEvents = events.splice(intersectionLE.index);\n                ringEvents.unshift(ringEvents[0].otherSE);\n                ringsOut.push(new RingOut(ringEvents.reverse()));\n                continue;\n              }\n              /* register the intersection */\n\n\n              intersectionLEs.push({\n                index: events.length,\n                point: event.point\n              });\n              /* Choose the left-most option to continue the walk */\n\n              var comparator = event.getLeftmostComparator(prevEvent);\n              nextEvent = availableLEs.sort(comparator)[0].otherSE;\n              break;\n            }\n          }\n\n          ringsOut.push(new RingOut(events));\n        }\n\n        return ringsOut;\n      }\n    }]);\n\n    function RingOut(events) {\n      _classCallCheck(this, RingOut);\n\n      this.events = events;\n\n      for (var i = 0, iMax = events.length; i < iMax; i++) {\n        events[i].segment.ringOut = this;\n      }\n\n      this.poly = null;\n    }\n\n    _createClass(RingOut, [{\n      key: \"getGeom\",\n      value: function getGeom() {\n        // Remove superfluous points (ie extra points along a straight line),\n        var prevPt = this.events[0].point;\n        var points = [prevPt];\n\n        for (var i = 1, iMax = this.events.length - 1; i < iMax; i++) {\n          var _pt = this.events[i].point;\n          var _nextPt = this.events[i + 1].point;\n          if (compareVectorAngles(_pt, prevPt, _nextPt) === 0) continue;\n          points.push(_pt);\n          prevPt = _pt;\n        } // ring was all (within rounding error of angle calc) colinear points\n\n\n        if (points.length === 1) return null; // check if the starting point is necessary\n\n        var pt = points[0];\n        var nextPt = points[1];\n        if (compareVectorAngles(pt, prevPt, nextPt) === 0) points.shift();\n        points.push(points[0]);\n        var step = this.isExteriorRing() ? 1 : -1;\n        var iStart = this.isExteriorRing() ? 0 : points.length - 1;\n        var iEnd = this.isExteriorRing() ? points.length : -1;\n        var orderedPoints = [];\n\n        for (var _i = iStart; _i != iEnd; _i += step) {\n          orderedPoints.push([points[_i].x, points[_i].y]);\n        }\n\n        return orderedPoints;\n      }\n    }, {\n      key: \"isExteriorRing\",\n      value: function isExteriorRing() {\n        if (this._isExteriorRing === undefined) {\n          var enclosing = this.enclosingRing();\n          this._isExteriorRing = enclosing ? !enclosing.isExteriorRing() : true;\n        }\n\n        return this._isExteriorRing;\n      }\n    }, {\n      key: \"enclosingRing\",\n      value: function enclosingRing() {\n        if (this._enclosingRing === undefined) {\n          this._enclosingRing = this._calcEnclosingRing();\n        }\n\n        return this._enclosingRing;\n      }\n      /* Returns the ring that encloses this one, if any */\n\n    }, {\n      key: \"_calcEnclosingRing\",\n      value: function _calcEnclosingRing() {\n        // start with the ealier sweep line event so that the prevSeg\n        // chain doesn't lead us inside of a loop of ours\n        var leftMostEvt = this.events[0];\n\n        for (var i = 1, iMax = this.events.length; i < iMax; i++) {\n          var evt = this.events[i];\n          if (SweepEvent.compare(leftMostEvt, evt) > 0) leftMostEvt = evt;\n        }\n\n        var prevSeg = leftMostEvt.segment.prevInResult();\n        var prevPrevSeg = prevSeg ? prevSeg.prevInResult() : null;\n\n        while (true) {\n          // no segment found, thus no ring can enclose us\n          if (!prevSeg) return null; // no segments below prev segment found, thus the ring of the prev\n          // segment must loop back around and enclose us\n\n          if (!prevPrevSeg) return prevSeg.ringOut; // if the two segments are of different rings, the ring of the prev\n          // segment must either loop around us or the ring of the prev prev\n          // seg, which would make us and the ring of the prev peers\n\n          if (prevPrevSeg.ringOut !== prevSeg.ringOut) {\n            if (prevPrevSeg.ringOut.enclosingRing() !== prevSeg.ringOut) {\n              return prevSeg.ringOut;\n            } else return prevSeg.ringOut.enclosingRing();\n          } // two segments are from the same ring, so this was a penisula\n          // of that ring. iterate downward, keep searching\n\n\n          prevSeg = prevPrevSeg.prevInResult();\n          prevPrevSeg = prevSeg ? prevSeg.prevInResult() : null;\n        }\n      }\n    }]);\n\n    return RingOut;\n  }();\n  var PolyOut = /*#__PURE__*/function () {\n    function PolyOut(exteriorRing) {\n      _classCallCheck(this, PolyOut);\n\n      this.exteriorRing = exteriorRing;\n      exteriorRing.poly = this;\n      this.interiorRings = [];\n    }\n\n    _createClass(PolyOut, [{\n      key: \"addInterior\",\n      value: function addInterior(ring) {\n        this.interiorRings.push(ring);\n        ring.poly = this;\n      }\n    }, {\n      key: \"getGeom\",\n      value: function getGeom() {\n        var geom = [this.exteriorRing.getGeom()]; // exterior ring was all (within rounding error of angle calc) colinear points\n\n        if (geom[0] === null) return null;\n\n        for (var i = 0, iMax = this.interiorRings.length; i < iMax; i++) {\n          var ringGeom = this.interiorRings[i].getGeom(); // interior ring was all (within rounding error of angle calc) colinear points\n\n          if (ringGeom === null) continue;\n          geom.push(ringGeom);\n        }\n\n        return geom;\n      }\n    }]);\n\n    return PolyOut;\n  }();\n  var MultiPolyOut = /*#__PURE__*/function () {\n    function MultiPolyOut(rings) {\n      _classCallCheck(this, MultiPolyOut);\n\n      this.rings = rings;\n      this.polys = this._composePolys(rings);\n    }\n\n    _createClass(MultiPolyOut, [{\n      key: \"getGeom\",\n      value: function getGeom() {\n        var geom = [];\n\n        for (var i = 0, iMax = this.polys.length; i < iMax; i++) {\n          var polyGeom = this.polys[i].getGeom(); // exterior ring was all (within rounding error of angle calc) colinear points\n\n          if (polyGeom === null) continue;\n          geom.push(polyGeom);\n        }\n\n        return geom;\n      }\n    }, {\n      key: \"_composePolys\",\n      value: function _composePolys(rings) {\n        var polys = [];\n\n        for (var i = 0, iMax = rings.length; i < iMax; i++) {\n          var ring = rings[i];\n          if (ring.poly) continue;\n          if (ring.isExteriorRing()) polys.push(new PolyOut(ring));else {\n            var enclosingRing = ring.enclosingRing();\n            if (!enclosingRing.poly) polys.push(new PolyOut(enclosingRing));\n            enclosingRing.poly.addInterior(ring);\n          }\n        }\n\n        return polys;\n      }\n    }]);\n\n    return MultiPolyOut;\n  }();\n\n  /**\n   * NOTE:  We must be careful not to change any segments while\n   *        they are in the SplayTree. AFAIK, there's no way to tell\n   *        the tree to rebalance itself - thus before splitting\n   *        a segment that's in the tree, we remove it from the tree,\n   *        do the split, then re-insert it. (Even though splitting a\n   *        segment *shouldn't* change its correct position in the\n   *        sweep line tree, the reality is because of rounding errors,\n   *        it sometimes does.)\n   */\n\n  var SweepLine = /*#__PURE__*/function () {\n    function SweepLine(queue) {\n      var comparator = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : Segment.compare;\n\n      _classCallCheck(this, SweepLine);\n\n      this.queue = queue;\n      this.tree = new Tree(comparator);\n      this.segments = [];\n    }\n\n    _createClass(SweepLine, [{\n      key: \"process\",\n      value: function process(event) {\n        var segment = event.segment;\n        var newEvents = []; // if we've already been consumed by another segment,\n        // clean up our body parts and get out\n\n        if (event.consumedBy) {\n          if (event.isLeft) this.queue.remove(event.otherSE);else this.tree.remove(segment);\n          return newEvents;\n        }\n\n        var node = event.isLeft ? this.tree.insert(segment) : this.tree.find(segment);\n        if (!node) throw new Error(\"Unable to find segment #\".concat(segment.id, \" \") + \"[\".concat(segment.leftSE.point.x, \", \").concat(segment.leftSE.point.y, \"] -> \") + \"[\".concat(segment.rightSE.point.x, \", \").concat(segment.rightSE.point.y, \"] \") + 'in SweepLine tree. Please submit a bug report.');\n        var prevNode = node;\n        var nextNode = node;\n        var prevSeg = undefined;\n        var nextSeg = undefined; // skip consumed segments still in tree\n\n        while (prevSeg === undefined) {\n          prevNode = this.tree.prev(prevNode);\n          if (prevNode === null) prevSeg = null;else if (prevNode.key.consumedBy === undefined) prevSeg = prevNode.key;\n        } // skip consumed segments still in tree\n\n\n        while (nextSeg === undefined) {\n          nextNode = this.tree.next(nextNode);\n          if (nextNode === null) nextSeg = null;else if (nextNode.key.consumedBy === undefined) nextSeg = nextNode.key;\n        }\n\n        if (event.isLeft) {\n          // Check for intersections against the previous segment in the sweep line\n          var prevMySplitter = null;\n\n          if (prevSeg) {\n            var prevInter = prevSeg.getIntersection(segment);\n\n            if (prevInter !== null) {\n              if (!segment.isAnEndpoint(prevInter)) prevMySplitter = prevInter;\n\n              if (!prevSeg.isAnEndpoint(prevInter)) {\n                var newEventsFromSplit = this._splitSafely(prevSeg, prevInter);\n\n                for (var i = 0, iMax = newEventsFromSplit.length; i < iMax; i++) {\n                  newEvents.push(newEventsFromSplit[i]);\n                }\n              }\n            }\n          } // Check for intersections against the next segment in the sweep line\n\n\n          var nextMySplitter = null;\n\n          if (nextSeg) {\n            var nextInter = nextSeg.getIntersection(segment);\n\n            if (nextInter !== null) {\n              if (!segment.isAnEndpoint(nextInter)) nextMySplitter = nextInter;\n\n              if (!nextSeg.isAnEndpoint(nextInter)) {\n                var _newEventsFromSplit = this._splitSafely(nextSeg, nextInter);\n\n                for (var _i = 0, _iMax = _newEventsFromSplit.length; _i < _iMax; _i++) {\n                  newEvents.push(_newEventsFromSplit[_i]);\n                }\n              }\n            }\n          } // For simplicity, even if we find more than one intersection we only\n          // spilt on the 'earliest' (sweep-line style) of the intersections.\n          // The other intersection will be handled in a future process().\n\n\n          if (prevMySplitter !== null || nextMySplitter !== null) {\n            var mySplitter = null;\n            if (prevMySplitter === null) mySplitter = nextMySplitter;else if (nextMySplitter === null) mySplitter = prevMySplitter;else {\n              var cmpSplitters = SweepEvent.comparePoints(prevMySplitter, nextMySplitter);\n              mySplitter = cmpSplitters <= 0 ? prevMySplitter : nextMySplitter;\n            } // Rounding errors can cause changes in ordering,\n            // so remove afected segments and right sweep events before splitting\n\n            this.queue.remove(segment.rightSE);\n            newEvents.push(segment.rightSE);\n\n            var _newEventsFromSplit2 = segment.split(mySplitter);\n\n            for (var _i2 = 0, _iMax2 = _newEventsFromSplit2.length; _i2 < _iMax2; _i2++) {\n              newEvents.push(_newEventsFromSplit2[_i2]);\n            }\n          }\n\n          if (newEvents.length > 0) {\n            // We found some intersections, so re-do the current event to\n            // make sure sweep line ordering is totally consistent for later\n            // use with the segment 'prev' pointers\n            this.tree.remove(segment);\n            newEvents.push(event);\n          } else {\n            // done with left event\n            this.segments.push(segment);\n            segment.prev = prevSeg;\n          }\n        } else {\n          // event.isRight\n          // since we're about to be removed from the sweep line, check for\n          // intersections between our previous and next segments\n          if (prevSeg && nextSeg) {\n            var inter = prevSeg.getIntersection(nextSeg);\n\n            if (inter !== null) {\n              if (!prevSeg.isAnEndpoint(inter)) {\n                var _newEventsFromSplit3 = this._splitSafely(prevSeg, inter);\n\n                for (var _i3 = 0, _iMax3 = _newEventsFromSplit3.length; _i3 < _iMax3; _i3++) {\n                  newEvents.push(_newEventsFromSplit3[_i3]);\n                }\n              }\n\n              if (!nextSeg.isAnEndpoint(inter)) {\n                var _newEventsFromSplit4 = this._splitSafely(nextSeg, inter);\n\n                for (var _i4 = 0, _iMax4 = _newEventsFromSplit4.length; _i4 < _iMax4; _i4++) {\n                  newEvents.push(_newEventsFromSplit4[_i4]);\n                }\n              }\n            }\n          }\n\n          this.tree.remove(segment);\n        }\n\n        return newEvents;\n      }\n      /* Safely split a segment that is currently in the datastructures\n       * IE - a segment other than the one that is currently being processed. */\n\n    }, {\n      key: \"_splitSafely\",\n      value: function _splitSafely(seg, pt) {\n        // Rounding errors can cause changes in ordering,\n        // so remove afected segments and right sweep events before splitting\n        // removeNode() doesn't work, so have re-find the seg\n        // https://github.com/w8r/splay-tree/pull/5\n        this.tree.remove(seg);\n        var rightSE = seg.rightSE;\n        this.queue.remove(rightSE);\n        var newEvents = seg.split(pt);\n        newEvents.push(rightSE); // splitting can trigger consumption\n\n        if (seg.consumedBy === undefined) this.tree.insert(seg);\n        return newEvents;\n      }\n    }]);\n\n    return SweepLine;\n  }();\n\n  var POLYGON_CLIPPING_MAX_QUEUE_SIZE = typeof process !== 'undefined' && process.env.POLYGON_CLIPPING_MAX_QUEUE_SIZE || 1000000;\n  var POLYGON_CLIPPING_MAX_SWEEPLINE_SEGMENTS = typeof process !== 'undefined' && process.env.POLYGON_CLIPPING_MAX_SWEEPLINE_SEGMENTS || 1000000;\n  var Operation = /*#__PURE__*/function () {\n    function Operation() {\n      _classCallCheck(this, Operation);\n    }\n\n    _createClass(Operation, [{\n      key: \"run\",\n      value: function run(type, geom, moreGeoms) {\n        operation.type = type;\n        rounder.reset();\n        /* Convert inputs to MultiPoly objects */\n\n        var multipolys = [new MultiPolyIn(geom, true)];\n\n        for (var i = 0, iMax = moreGeoms.length; i < iMax; i++) {\n          multipolys.push(new MultiPolyIn(moreGeoms[i], false));\n        }\n\n        operation.numMultiPolys = multipolys.length;\n        /* BBox optimization for difference operation\n         * If the bbox of a multipolygon that's part of the clipping doesn't\n         * intersect the bbox of the subject at all, we can just drop that\n         * multiploygon. */\n\n        if (operation.type === 'difference') {\n          // in place removal\n          var subject = multipolys[0];\n          var _i = 1;\n\n          while (_i < multipolys.length) {\n            if (getBboxOverlap(multipolys[_i].bbox, subject.bbox) !== null) _i++;else multipolys.splice(_i, 1);\n          }\n        }\n        /* BBox optimization for intersection operation\n         * If we can find any pair of multipolygons whose bbox does not overlap,\n         * then the result will be empty. */\n\n\n        if (operation.type === 'intersection') {\n          // TODO: this is O(n^2) in number of polygons. By sorting the bboxes,\n          //       it could be optimized to O(n * ln(n))\n          for (var _i2 = 0, _iMax = multipolys.length; _i2 < _iMax; _i2++) {\n            var mpA = multipolys[_i2];\n\n            for (var j = _i2 + 1, jMax = multipolys.length; j < jMax; j++) {\n              if (getBboxOverlap(mpA.bbox, multipolys[j].bbox) === null) return [];\n            }\n          }\n        }\n        /* Put segment endpoints in a priority queue */\n\n\n        var queue = new Tree(SweepEvent.compare);\n\n        for (var _i3 = 0, _iMax2 = multipolys.length; _i3 < _iMax2; _i3++) {\n          var sweepEvents = multipolys[_i3].getSweepEvents();\n\n          for (var _j = 0, _jMax = sweepEvents.length; _j < _jMax; _j++) {\n            queue.insert(sweepEvents[_j]);\n\n            if (queue.size > POLYGON_CLIPPING_MAX_QUEUE_SIZE) {\n              // prevents an infinite loop, an otherwise common manifestation of bugs\n              throw new Error('Infinite loop when putting segment endpoints in a priority queue ' + '(queue size too big). Please file a bug report.');\n            }\n          }\n        }\n        /* Pass the sweep line over those endpoints */\n\n\n        var sweepLine = new SweepLine(queue);\n        var prevQueueSize = queue.size;\n        var node = queue.pop();\n\n        while (node) {\n          var evt = node.key;\n\n          if (queue.size === prevQueueSize) {\n            // prevents an infinite loop, an otherwise common manifestation of bugs\n            var seg = evt.segment;\n            throw new Error(\"Unable to pop() \".concat(evt.isLeft ? 'left' : 'right', \" SweepEvent \") + \"[\".concat(evt.point.x, \", \").concat(evt.point.y, \"] from segment #\").concat(seg.id, \" \") + \"[\".concat(seg.leftSE.point.x, \", \").concat(seg.leftSE.point.y, \"] -> \") + \"[\".concat(seg.rightSE.point.x, \", \").concat(seg.rightSE.point.y, \"] from queue. \") + 'Please file a bug report.');\n          }\n\n          if (queue.size > POLYGON_CLIPPING_MAX_QUEUE_SIZE) {\n            // prevents an infinite loop, an otherwise common manifestation of bugs\n            throw new Error('Infinite loop when passing sweep line over endpoints ' + '(queue size too big). Please file a bug report.');\n          }\n\n          if (sweepLine.segments.length > POLYGON_CLIPPING_MAX_SWEEPLINE_SEGMENTS) {\n            // prevents an infinite loop, an otherwise common manifestation of bugs\n            throw new Error('Infinite loop when passing sweep line over endpoints ' + '(too many sweep line segments). Please file a bug report.');\n          }\n\n          var newEvents = sweepLine.process(evt);\n\n          for (var _i4 = 0, _iMax3 = newEvents.length; _i4 < _iMax3; _i4++) {\n            var _evt = newEvents[_i4];\n            if (_evt.consumedBy === undefined) queue.insert(_evt);\n          }\n\n          prevQueueSize = queue.size;\n          node = queue.pop();\n        } // free some memory we don't need anymore\n\n\n        rounder.reset();\n        /* Collect and compile segments we're keeping into a multipolygon */\n\n        var ringsOut = RingOut.factory(sweepLine.segments);\n        var result = new MultiPolyOut(ringsOut);\n        return result.getGeom();\n      }\n    }]);\n\n    return Operation;\n  }(); // singleton available by import\n\n  var operation = new Operation();\n\n  var union = function union(geom) {\n    for (var _len = arguments.length, moreGeoms = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      moreGeoms[_key - 1] = arguments[_key];\n    }\n\n    return operation.run('union', geom, moreGeoms);\n  };\n\n  var intersection$1 = function intersection(geom) {\n    for (var _len2 = arguments.length, moreGeoms = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n      moreGeoms[_key2 - 1] = arguments[_key2];\n    }\n\n    return operation.run('intersection', geom, moreGeoms);\n  };\n\n  var xor = function xor(geom) {\n    for (var _len3 = arguments.length, moreGeoms = new Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {\n      moreGeoms[_key3 - 1] = arguments[_key3];\n    }\n\n    return operation.run('xor', geom, moreGeoms);\n  };\n\n  var difference = function difference(subjectGeom) {\n    for (var _len4 = arguments.length, clippingGeoms = new Array(_len4 > 1 ? _len4 - 1 : 0), _key4 = 1; _key4 < _len4; _key4++) {\n      clippingGeoms[_key4 - 1] = arguments[_key4];\n    }\n\n    return operation.run('difference', subjectGeom, clippingGeoms);\n  };\n\n  var index = {\n    union: union,\n    intersection: intersection$1,\n    xor: xor,\n    difference: difference\n  };\n\n  return index;\n\n})));\n","!function(t,i){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=i():\"function\"==typeof define&&define.amd?define(i):(t=t||self).RBush=i()}(this,function(){\"use strict\";function t(t,r,e,a,h){!function t(n,r,e,a,h){for(;a>e;){if(a-e>600){var o=a-e+1,s=r-e+1,l=Math.log(o),f=.5*Math.exp(2*l/3),u=.5*Math.sqrt(l*f*(o-f)/o)*(s-o/2<0?-1:1),m=Math.max(e,Math.floor(r-s*f/o+u)),c=Math.min(a,Math.floor(r+(o-s)*f/o+u));t(n,r,m,c,h)}var p=n[r],d=e,x=a;for(i(n,e,r),h(n[a],p)>0&&i(n,e,a);d<x;){for(i(n,d,x),d++,x--;h(n[d],p)<0;)d++;for(;h(n[x],p)>0;)x--}0===h(n[e],p)?i(n,e,x):i(n,++x,a),x<=r&&(e=x+1),r<=x&&(a=x-1)}}(t,r,e||0,a||t.length-1,h||n)}function i(t,i,n){var r=t[i];t[i]=t[n],t[n]=r}function n(t,i){return t<i?-1:t>i?1:0}var r=function(t){void 0===t&&(t=9),this._maxEntries=Math.max(4,t),this._minEntries=Math.max(2,Math.ceil(.4*this._maxEntries)),this.clear()};function e(t,i,n){if(!n)return i.indexOf(t);for(var r=0;r<i.length;r++)if(n(t,i[r]))return r;return-1}function a(t,i){h(t,0,t.children.length,i,t)}function h(t,i,n,r,e){e||(e=p(null)),e.minX=1/0,e.minY=1/0,e.maxX=-1/0,e.maxY=-1/0;for(var a=i;a<n;a++){var h=t.children[a];o(e,t.leaf?r(h):h)}return e}function o(t,i){return t.minX=Math.min(t.minX,i.minX),t.minY=Math.min(t.minY,i.minY),t.maxX=Math.max(t.maxX,i.maxX),t.maxY=Math.max(t.maxY,i.maxY),t}function s(t,i){return t.minX-i.minX}function l(t,i){return t.minY-i.minY}function f(t){return(t.maxX-t.minX)*(t.maxY-t.minY)}function u(t){return t.maxX-t.minX+(t.maxY-t.minY)}function m(t,i){return t.minX<=i.minX&&t.minY<=i.minY&&i.maxX<=t.maxX&&i.maxY<=t.maxY}function c(t,i){return i.minX<=t.maxX&&i.minY<=t.maxY&&i.maxX>=t.minX&&i.maxY>=t.minY}function p(t){return{children:t,height:1,leaf:!0,minX:1/0,minY:1/0,maxX:-1/0,maxY:-1/0}}function d(i,n,r,e,a){for(var h=[n,r];h.length;)if(!((r=h.pop())-(n=h.pop())<=e)){var o=n+Math.ceil((r-n)/e/2)*e;t(i,o,n,r,a),h.push(n,o,o,r)}}return r.prototype.all=function(){return this._all(this.data,[])},r.prototype.search=function(t){var i=this.data,n=[];if(!c(t,i))return n;for(var r=this.toBBox,e=[];i;){for(var a=0;a<i.children.length;a++){var h=i.children[a],o=i.leaf?r(h):h;c(t,o)&&(i.leaf?n.push(h):m(t,o)?this._all(h,n):e.push(h))}i=e.pop()}return n},r.prototype.collides=function(t){var i=this.data;if(!c(t,i))return!1;for(var n=[];i;){for(var r=0;r<i.children.length;r++){var e=i.children[r],a=i.leaf?this.toBBox(e):e;if(c(t,a)){if(i.leaf||m(t,a))return!0;n.push(e)}}i=n.pop()}return!1},r.prototype.load=function(t){if(!t||!t.length)return this;if(t.length<this._minEntries){for(var i=0;i<t.length;i++)this.insert(t[i]);return this}var n=this._build(t.slice(),0,t.length-1,0);if(this.data.children.length)if(this.data.height===n.height)this._splitRoot(this.data,n);else{if(this.data.height<n.height){var r=this.data;this.data=n,n=r}this._insert(n,this.data.height-n.height-1,!0)}else this.data=n;return this},r.prototype.insert=function(t){return t&&this._insert(t,this.data.height-1),this},r.prototype.clear=function(){return this.data=p([]),this},r.prototype.remove=function(t,i){if(!t)return this;for(var n,r,a,h=this.data,o=this.toBBox(t),s=[],l=[];h||s.length;){if(h||(h=s.pop(),r=s[s.length-1],n=l.pop(),a=!0),h.leaf){var f=e(t,h.children,i);if(-1!==f)return h.children.splice(f,1),s.push(h),this._condense(s),this}a||h.leaf||!m(h,o)?r?(n++,h=r.children[n],a=!1):h=null:(s.push(h),l.push(n),n=0,r=h,h=h.children[0])}return this},r.prototype.toBBox=function(t){return t},r.prototype.compareMinX=function(t,i){return t.minX-i.minX},r.prototype.compareMinY=function(t,i){return t.minY-i.minY},r.prototype.toJSON=function(){return this.data},r.prototype.fromJSON=function(t){return this.data=t,this},r.prototype._all=function(t,i){for(var n=[];t;)t.leaf?i.push.apply(i,t.children):n.push.apply(n,t.children),t=n.pop();return i},r.prototype._build=function(t,i,n,r){var e,h=n-i+1,o=this._maxEntries;if(h<=o)return a(e=p(t.slice(i,n+1)),this.toBBox),e;r||(r=Math.ceil(Math.log(h)/Math.log(o)),o=Math.ceil(h/Math.pow(o,r-1))),(e=p([])).leaf=!1,e.height=r;var s=Math.ceil(h/o),l=s*Math.ceil(Math.sqrt(o));d(t,i,n,l,this.compareMinX);for(var f=i;f<=n;f+=l){var u=Math.min(f+l-1,n);d(t,f,u,s,this.compareMinY);for(var m=f;m<=u;m+=s){var c=Math.min(m+s-1,u);e.children.push(this._build(t,m,c,r-1))}}return a(e,this.toBBox),e},r.prototype._chooseSubtree=function(t,i,n,r){for(;r.push(i),!i.leaf&&r.length-1!==n;){for(var e=1/0,a=1/0,h=void 0,o=0;o<i.children.length;o++){var s=i.children[o],l=f(s),u=(m=t,c=s,(Math.max(c.maxX,m.maxX)-Math.min(c.minX,m.minX))*(Math.max(c.maxY,m.maxY)-Math.min(c.minY,m.minY))-l);u<a?(a=u,e=l<e?l:e,h=s):u===a&&l<e&&(e=l,h=s)}i=h||i.children[0]}var m,c;return i},r.prototype._insert=function(t,i,n){var r=n?t:this.toBBox(t),e=[],a=this._chooseSubtree(r,this.data,i,e);for(a.children.push(t),o(a,r);i>=0&&e[i].children.length>this._maxEntries;)this._split(e,i),i--;this._adjustParentBBoxes(r,e,i)},r.prototype._split=function(t,i){var n=t[i],r=n.children.length,e=this._minEntries;this._chooseSplitAxis(n,e,r);var h=this._chooseSplitIndex(n,e,r),o=p(n.children.splice(h,n.children.length-h));o.height=n.height,o.leaf=n.leaf,a(n,this.toBBox),a(o,this.toBBox),i?t[i-1].children.push(o):this._splitRoot(n,o)},r.prototype._splitRoot=function(t,i){this.data=p([t,i]),this.data.height=t.height+1,this.data.leaf=!1,a(this.data,this.toBBox)},r.prototype._chooseSplitIndex=function(t,i,n){for(var r,e,a,o,s,l,u,m=1/0,c=1/0,p=i;p<=n-i;p++){var d=h(t,0,p,this.toBBox),x=h(t,p,n,this.toBBox),v=(e=d,a=x,o=void 0,s=void 0,l=void 0,u=void 0,o=Math.max(e.minX,a.minX),s=Math.max(e.minY,a.minY),l=Math.min(e.maxX,a.maxX),u=Math.min(e.maxY,a.maxY),Math.max(0,l-o)*Math.max(0,u-s)),M=f(d)+f(x);v<m?(m=v,r=p,c=M<c?M:c):v===m&&M<c&&(c=M,r=p)}return r||n-i},r.prototype._chooseSplitAxis=function(t,i,n){var r=t.leaf?this.compareMinX:s,e=t.leaf?this.compareMinY:l;this._allDistMargin(t,i,n,r)<this._allDistMargin(t,i,n,e)&&t.children.sort(r)},r.prototype._allDistMargin=function(t,i,n,r){t.children.sort(r);for(var e=this.toBBox,a=h(t,0,i,e),s=h(t,n-i,n,e),l=u(a)+u(s),f=i;f<n-i;f++){var m=t.children[f];o(a,t.leaf?e(m):m),l+=u(a)}for(var c=n-i-1;c>=i;c--){var p=t.children[c];o(s,t.leaf?e(p):p),l+=u(s)}return l},r.prototype._adjustParentBBoxes=function(t,i,n){for(var r=n;r>=0;r--)o(i[r],t)},r.prototype._condense=function(t){for(var i=t.length-1,n=void 0;i>=0;i--)0===t[i].children.length?i>0?(n=t[i-1].children).splice(n.indexOf(t[i]),1):this.clear():a(t[i],this.toBBox)},r});\n","/***\n   Copyright 2013 Teun Duynstee\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n     http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n*/\nmodule.exports = (function() {\n\n    function identity(v){return v;}\n\n    function ignoreCase(v){return typeof(v)===\"string\" ? v.toLowerCase() : v;}\n\n    function makeCompareFunction(f, opt){\n        opt = typeof(opt)===\"object\" ? opt : {direction:opt};\n        \n        if(typeof(f)!=\"function\"){\n            var prop = f;\n            // make unary function\n            f = function(v1){return !!v1[prop] ? v1[prop] : \"\";}\n        }\n        if(f.length === 1) {\n            // f is a unary function mapping a single item to its sort score\n            var uf = f;\n            var preprocess = opt.ignoreCase?ignoreCase:identity;\n            var cmp = opt.cmp || function(v1,v2) {return v1 < v2 ? -1 : v1 > v2 ? 1 : 0;}\n            f = function(v1,v2) {return cmp(preprocess(uf(v1)), preprocess(uf(v2)));}\n        }\n        const descTokens = {\"-1\":'', desc:''};\n        if(opt.direction in descTokens) return function(v1,v2){return -f(v1,v2)};\n        return f;\n    }\n\n    /* adds a secondary compare function to the target function (`this` context)\n       which is applied in case the first one returns 0 (equal)\n       returns a new compare function, which has a `thenBy` method as well */\n    function tb(func, opt) {\n        /* should get value false for the first call. This can be done by calling the \n        exported function, or the firstBy property on it (for es6 module compatibility)\n        */\n        var x = (typeof(this) == \"function\" && !this.firstBy) ? this : false;\n        var y = makeCompareFunction(func, opt);\n        var f = x ? function(a, b) {\n                        return x(a,b) || y(a,b);\n                    }\n                  : y;\n        f.thenBy = tb;\n        return f;\n    }\n    tb.firstBy = tb;\n    return tb;\n})();\n","!function(e,t){\"object\"==typeof exports&&\"object\"==typeof module?module.exports=t(require(\"@turf/bbox-polygon\"),require(\"@turf/boolean-intersects\"),require(\"@turf/boolean-within\"),require(\"@turf/intersect\")):\"function\"==typeof define&&define.amd?define([\"@turf/bbox-polygon\",\"@turf/boolean-intersects\",\"@turf/boolean-within\",\"@turf/intersect\"],t):\"object\"==typeof exports?exports.cartoReactCore=t(require(\"@turf/bbox-polygon\"),require(\"@turf/boolean-intersects\"),require(\"@turf/boolean-within\"),require(\"@turf/intersect\")):e.cartoReactCore=t(e[\"@turf/bbox-polygon\"],e[\"@turf/boolean-intersects\"],e[\"@turf/boolean-within\"],e[\"@turf/intersect\"])}(self,(function(e,t,r,n){return(()=>{\"use strict\";var u={855:t=>{t.exports=e},97:e=>{e.exports=t},55:e=>{e.exports=r},956:e=>{e.exports=n}},o={};function i(e){var t=o[e];if(void 0!==t)return t.exports;var r=o[e]={exports:{}};return u[e](r,r.exports,i),r.exports}i.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return i.d(t,{a:t}),t},i.d=(e,t)=>{for(var r in t)i.o(t,r)&&!i.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},i.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),i.r=e=>{\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(e,\"__esModule\",{value:!0})};var a={};return(()=>{function e(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function t(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function r(r){for(var n=1;n<arguments.length;n++){var u=null!=arguments[n]?arguments[n]:{};n%2?t(Object(u),!0).forEach((function(t){e(r,t,u[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(r,Object.getOwnPropertyDescriptors(u)):t(Object(u)).forEach((function(e){Object.defineProperty(r,e,Object.getOwnPropertyDescriptor(u,e))}))}return r}i.r(a),i.d(a,{AggregationTypes:()=>v,EDIT_MODES:()=>Be,FEATURE_SELECTION_MODES:()=>Se,GroupDateTypes:()=>Oe,MASK_ID:()=>Te,REQUEST_GET_MAX_URL_LENGTH:()=>n,_FilterTypes:()=>w,_applyFilters:()=>R,_buildFeatureFilter:()=>x,_filtersToSQL:()=>_,_getApplicableFilters:()=>U,aggregationFunctions:()=>g,debounce:()=>l,encodeParameter:()=>c,geojsonFeatures:()=>he,getMonday:()=>f,getRequest:()=>u,groupValuesByColumn:()=>E,groupValuesByDateColumn:()=>je,histogram:()=>h,makeIntervalComplete:()=>p,postRequest:()=>o,randomString:()=>D,scatterPlot:()=>O,throttle:()=>s,tileFeatures:()=>Ee});var n=2048;function u(e,t){return new Request(e,r({method:\"GET\",headers:{Accept:\"application/json\"}},t))}function o(e,t,n){return new Request(e,r({method:\"POST\",headers:{Accept:\"application/json\",\"Content-Type\":\"application/json\"},body:JSON.stringify(t)},n))}function c(e,t){return\"\".concat(e,\"=\").concat(encodeURIComponent(t))}function f(e){var t=new Date(e),r=t.getDay(),n=t.getDate()-r+(r?1:-6);return t.setDate(n),Date.UTC(t.getUTCFullYear(),t.getUTCMonth(),t.getUTCDate())}function l(e,t){var r,n=this;return function(){for(var u=arguments.length,o=new Array(u),i=0;i<u;i++)o[i]=arguments[i];return clearTimeout(r),r=setTimeout((function(){r=null,e.apply(n,o)}),t)}}function s(e,t){var r=0;return function(){var n=new Date;n-r>=t&&(e(),r=n)}}function D(e){for(var t=\"\",r=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\",n=0;n<e;n++)t+=r.charAt(Math.floor(Math.random()*r.length));return t}function p(e){return e.map((function(e){return void 0===e[0]?[Number.MIN_SAFE_INTEGER,e[1]]:void 0===e[1]?[e[0],Number.MAX_SAFE_INTEGER]:e}))}var y,v=Object.freeze({COUNT:\"count\",AVG:\"avg\",MIN:\"min\",MAX:\"max\",SUM:\"sum\"}),m=function(e,t){var r=t?function(e,r){return e+r[t]}:function(e,t){return e+t};return e.reduce(r,0)},g=(e(y={},v.COUNT,(function(e){return e.length})),e(y,v.MIN,(function(e,t){return function(e,t){var r=t?function(e,r){return Math.min(e,r[t])}:function(e,t){return Math.min(e,t)};return e.reduce(r,1/0)}(e,t)})),e(y,v.MAX,(function(e,t){return function(e,t){var r=t?function(e,r){return Math.max(e,r[t])}:function(e,t){return Math.max(e,t)};return e.reduce(r,-1/0)}(e,t)})),e(y,v.SUM,(function(e,t){return m(e,t)})),e(y,v.AVG,(function(e,t){return m(e,t)/(e.length||1)})),y);function F(e,t){(null==t||t>e.length)&&(t=e.length);for(var r=0,n=new Array(t);r<t;r++)n[r]=e[r];return n}function b(e,t){if(e){if(\"string\"==typeof e)return F(e,t);var r=Object.prototype.toString.call(e).slice(8,-1);return\"Object\"===r&&e.constructor&&(r=e.constructor.name),\"Map\"===r||\"Set\"===r?Array.from(e):\"Arguments\"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?F(e,t):void 0}}function d(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){var r=null==e?null:\"undefined\"!=typeof Symbol&&e[Symbol.iterator]||e[\"@@iterator\"];if(null!=r){var n,u,o=[],i=!0,a=!1;try{for(r=r.call(e);!(i=(n=r.next()).done)&&(o.push(n.value),!t||o.length!==t);i=!0);}catch(e){a=!0,u=e}finally{try{i||null==r.return||r.return()}finally{if(a)throw u}}return o}}(e,t)||b(e,t)||function(){throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\")}()}function E(e,t,r,n){if(Array.isArray(e)&&0===e.length)return null;var u=e.reduce((function(e,u){var o=u[r];return e[o]=e[o]||[],(n===v.COUNT||null!==u[t])&&void 0!==u[t]&&e[o].push(u[t]),e}),{}),o=g[n];return o?Object.entries(u).map((function(e){var t=d(e,2),r=t[0],n=t[1];return{name:r,value:o(n)}})):[]}function A(e){return function(e){if(Array.isArray(e))return F(e)}(e)||function(e){if(\"undefined\"!=typeof Symbol&&null!=e[Symbol.iterator]||null!=e[\"@@iterator\"])return Array.from(e)}(e)||b(e)||function(){throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\")}()}function h(e,t,r,n){if(Array.isArray(e)&&0===e.length)return[];var u=(r=[Number.MIN_SAFE_INTEGER].concat(A(r))).map((function(e,t,r){return{bin:t,start:e,end:t===r.length-1?Number.MAX_SAFE_INTEGER:r[t+1],values:[]}}));e.forEach((function(e){var r=e[t];if(null!=r){var n=u.find((function(e){return e.start<=r&&e.end>r}));n&&n.values.push(r)}}));var o=g[n];return o?u.map((function(e){return e.values})).map((function(e){return e.length?o(e):0})):[]}var C,O=function(e,t,r){return e.filter((function(e){var n=null!=e[t],u=e[r];return n&&null!=u})).map((function(e){return[e[t],e[r]]}))},w=Object.freeze({IN:\"in\",BETWEEN:\"between\",CLOSED_OPEN:\"closed_open\",TIME:\"time\",STRING_SEARCH:\"stringSearch\"}),j=(e(C={},w.IN,(function(e,t){return e.includes(t)})),e(C,w.BETWEEN,S),e(C,w.TIME,(function(e,t){var r=new Date(t).getTime();if(isFinite(r))return S(e,r);throw new Error(\"Column used to filter by time isn't well formatted.\")})),e(C,w.CLOSED_OPEN,(function(e,t){return p(e).some((function(e){var r=d(e,2),n=r[0],u=r[1];return t>=n&&t<u}))})),e(C,w.STRING_SEARCH,(function(e,t){var r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},n=I(t,r),u=e.map((function(e){var t=P(I(e,r));return r.mustStart&&(t=\"^\".concat(t)),r.mustEnd&&(t=\"\".concat(t,\"$\")),t})).join(\"|\"),o=new RegExp(u,\"g\");return!!n.match(o)})),C);function S(e,t){return p(e).some((function(e){var r=d(e,2),n=r[0],u=r[1];return t>=n&&t<=u}))}var B=/[.*+?^${}()|[\\]\\\\]/g,T=/(?:[\\^`\\xA8\\xAF\\xB4\\xB7\\xB8\\u02B0-\\u034E\\u0350-\\u0357\\u035D-\\u0362\\u0374\\u0375\\u037A\\u0384\\u0385\\u0483-\\u0487\\u0559\\u0591-\\u05A1\\u05A3-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u064B-\\u0652\\u0657\\u0658\\u06DF\\u06E0\\u06E5\\u06E6\\u06EA-\\u06EC\\u0730-\\u074A\\u07A6-\\u07B0\\u07EB-\\u07F5\\u0818\\u0819\\u0898-\\u089F\\u08C9-\\u08D2\\u08E3-\\u08FE\\u093C\\u094D\\u0951-\\u0954\\u0971\\u09BC\\u09CD\\u0A3C\\u0A4D\\u0ABC\\u0ACD\\u0AFD-\\u0AFF\\u0B3C\\u0B4D\\u0B55\\u0BCD\\u0C3C\\u0C4D\\u0CBC\\u0CCD\\u0D3B\\u0D3C\\u0D4D\\u0DCA\\u0E47-\\u0E4C\\u0E4E\\u0EBA\\u0EC8-\\u0ECC\\u0F18\\u0F19\\u0F35\\u0F37\\u0F39\\u0F3E\\u0F3F\\u0F82-\\u0F84\\u0F86\\u0F87\\u0FC6\\u1037\\u1039\\u103A\\u1063\\u1064\\u1069-\\u106D\\u1087-\\u108D\\u108F\\u109A\\u109B\\u135D-\\u135F\\u1714\\u1715\\u17C9-\\u17D3\\u17DD\\u1939-\\u193B\\u1A75-\\u1A7C\\u1A7F\\u1AB0-\\u1ABE\\u1AC1-\\u1ACB\\u1B34\\u1B44\\u1B6B-\\u1B73\\u1BAA\\u1BAB\\u1C36\\u1C37\\u1C78-\\u1C7D\\u1CD0-\\u1CE8\\u1CED\\u1CF4\\u1CF7-\\u1CF9\\u1D2C-\\u1D6A\\u1DC4-\\u1DCF\\u1DF5-\\u1DFF\\u1FBD\\u1FBF-\\u1FC1\\u1FCD-\\u1FCF\\u1FDD-\\u1FDF\\u1FED-\\u1FEF\\u1FFD\\u1FFE\\u2CEF-\\u2CF1\\u2E2F\\u302A-\\u302F\\u3099-\\u309C\\u30FC\\uA66F\\uA67C\\uA67D\\uA67F\\uA69C\\uA69D\\uA6F0\\uA6F1\\uA700-\\uA721\\uA788-\\uA78A\\uA7F8\\uA7F9\\uA8C4\\uA8E0-\\uA8F1\\uA92B-\\uA92E\\uA953\\uA9B3\\uA9C0\\uA9E5\\uAA7B-\\uAA7D\\uAABF-\\uAAC2\\uAAF6\\uAB5B-\\uAB5F\\uAB69-\\uAB6B\\uABEC\\uABED\\uFB1E\\uFE20-\\uFE2F\\uFF3E\\uFF40\\uFF70\\uFF9E\\uFF9F\\uFFE3]|\\uD800\\uDEE0|\\uD801[\\uDF80-\\uDF85\\uDF87-\\uDFB0\\uDFB2-\\uDFBA]|\\uD802[\\uDEE5\\uDEE6]|\\uD803[\\uDD22-\\uDD27\\uDF46-\\uDF50\\uDF82-\\uDF85]|\\uD804[\\uDC46\\uDC70\\uDCB9\\uDCBA\\uDD33\\uDD34\\uDD73\\uDDC0\\uDDCA-\\uDDCC\\uDE35\\uDE36\\uDEE9\\uDEEA\\uDF3C\\uDF4D\\uDF66-\\uDF6C\\uDF70-\\uDF74]|\\uD805[\\uDC42\\uDC46\\uDCC2\\uDCC3\\uDDBF\\uDDC0\\uDE3F\\uDEB6\\uDEB7\\uDF2B]|\\uD806[\\uDC39\\uDC3A\\uDD3D\\uDD3E\\uDD43\\uDDE0\\uDE34\\uDE47\\uDE99]|\\uD807[\\uDC3F\\uDD42\\uDD44\\uDD45\\uDD97]|\\uD81A[\\uDEF0-\\uDEF4\\uDF30-\\uDF36]|\\uD81B[\\uDF8F-\\uDF9F\\uDFF0\\uDFF1]|\\uD82B[\\uDFF0-\\uDFF3\\uDFF5-\\uDFFB\\uDFFD\\uDFFE]|\\uD833[\\uDF00-\\uDF2D\\uDF30-\\uDF46]|\\uD834[\\uDD67-\\uDD69\\uDD6D-\\uDD72\\uDD7B-\\uDD82\\uDD85-\\uDD8B\\uDDAA-\\uDDAD]|\\uD838[\\uDD30-\\uDD36\\uDEAE\\uDEEC-\\uDEEF]|\\uD83A[\\uDCD0-\\uDCD6\\uDD44-\\uDD46\\uDD48-\\uDD4A])/g;function P(e){return e.replace(B,\"\\\\$&\")}function I(e,t){var r=\"\"+e;return t.caseSensitive||(r=r.toLocaleLowerCase()),t.keepSpecialCharacters||(r=r.normalize(\"NFD\").replace(T,\"\")),r}function M(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function N(t){for(var r=1;r<arguments.length;r++){var n=null!=arguments[r]?arguments[r]:{};r%2?M(Object(n),!0).forEach((function(r){e(t,r,n[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):M(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}var U=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=arguments.length>1?arguments[1]:void 0,r={};return Object.entries(e).forEach((function(e){var n=d(e,2),u=n[0],o=n[1],i={};Object.keys(o).filter((function(e){return o[e].owner!==t})).forEach((function(e){return i[e]=N({},o[e])})),Object.keys(i).length&&(r[u]=i)})),r},_=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=[];return Object.entries(e).forEach((function(e){var r=d(e,2),n=r[0],u=r[1];Object.entries(u).forEach((function(e){var r=d(e,2),u=r[0],o=r[1];switch(u){case w.IN:t.push(\"\".concat(n,\" \").concat(u,\"(\").concat(o.values.map((function(e){return isFinite(e)?e:\"'\".concat(e,\"'\")})).join(\",\"),\")\"));break;case w.BETWEEN:t.push(\"(\".concat(o.values.map((function(e){var t=d(e,2),r=t[0],u=t[1];return\"\".concat(r?\"\".concat(n,\" >= \").concat(r):\"\",\" \").concat(r&&u?\" and \":\"\",\" \").concat(u?\"\".concat(n,\" < \").concat(u):\"\")})).join(\") OR (\"),\")\"));break;default:throw new Error(\"Not valid operator has provided: \".concat(u))}}))})),t.length?\"WHERE (\".concat(t.join(\") AND (\"),\")\"):\"\"};function x(e){var t=e.filters,r=void 0===t?{}:t,n=e.type,u=void 0===n?\"boolean\":n,o=Object.keys(r);return o.length?function(e){var t=e.properties||e,n=function(e,t,r){return e.every((function(e){var n=t[e],u=Object.keys(n);return!(!r||null===r[e]||void 0===r[e])&&u.every((function(t){var u=j[t];if(!u)throw new Error('\"'.concat(t,'\" filter is not implemented.'));return u(n[t].values,r[e],n[t].params)}))}))}(o,r,t);return\"number\"===u?Number(n):n}:function(){return\"number\"!==u||1}}function R(e,t){return Object.keys(t).length?e.filter(x({filters:t})):e}const q=\"{user}\",L=(\"https://\".concat(q,\".carto.com/api/v1/map\"),\"https://maps-api-v2.\".concat(\"{region}\",\".carto.com/user/\").concat(q),\"mvt\");let k;!function(e){e.Number=\"number\",e.Bigint=\"bigint\",e.String=\"string\",e.Geometry=\"geometry\",e.Timestamp=\"timestamp\",e.Object=\"object\",e.Boolean=\"boolean\",e.Variant=\"variant\",e.Unknown=\"unknown\"}(k||(k={}));var G=i(855),z=i.n(G),Y=i(97),H=i.n(Y),V=i(55),W=i.n(V),X=i(956),$=i.n(X);function K(e,t){if(!e)throw new Error(t||\"@math.gl/web-mercator: assertion failed.\")}Math.log2;const Q=Math.PI,J=Q/4,Z=Q/180;function ee(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function te(t){for(var r=1;r<arguments.length;r++){var n=null!=arguments[r]?arguments[r]:{};r%2?ee(Object(n),!0).forEach((function(r){e(t,r,n[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):ee(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function re(e,t){var r=[ce([t.west,t.north]),ce([t.east,t.south])],n=ne[e.type];if(!n)throw new Error(\"Unrecognized geometry type \".concat(e.type));return te(te({},e),{},{coordinates:n(e.coordinates,r)})}Math.PI;var ne={Point:ue,MultiPoint:function(e,t){return oe(e,t)},LineString:ie,MultiLineString:function(e,t){return e.map((function(e){return ie(e,t)}))},Polygon:ae,MultiPolygon:function(e,t){return e.map((function(e){return ae(e,t)}))}};function ue(e,t){var r=d(e,2),n=r[0],u=r[1],o=d(t,2),i=o[0],a=o[1];return[fe(i[0],a[0],n),fe(i[1],a[1],u)]}function oe(e,t){return e.map((function(e){return ue(ce(e),t)}))}function ie(e,t){return oe(e,t)}function ae(e,t){return e.map((function(e){return oe(e,t)}))}function ce(e){return function([e,t]){K(Number.isFinite(e)),K(Number.isFinite(t)&&t>=-90&&t<=90,\"invalid latitude\");const r=t*Z;return[512*(e*Z+Q)/(2*Q),512*(Q+Math.log(Math.tan(J+.5*r)))/(2*Q)]}(e)}function fe(e,t,r){return(r-e)/(t-e)}function le(e,t){(null==t||t>e.length)&&(t=e.length);for(var r=0,n=new Array(t);r<t;r++)n[r]=e[r];return n}var se=Object.freeze({Point:0,LineString:1,Polygon:2});function De(e){return(e.primitivePolygonIndices||e.pathIndices||e.pointIndices).value}function pe(e,t){var r=function(e,t){return e.featureIds.value[t]}(e,t),n=e.properties,u=e.numericProps,o={properties:n[r],numericProps:{}};for(var i in u)o.numericProps[i]=u[i].value[t];return o}function ye(e){var t=e.properties,r=e.numericProps;return Object.assign({},t,r)}function ve(e,t,r){if(t)return me(e,t);var n=r.size+1;return me(e,\"cartodb_id\")||me(e,\"geoid\")||n}function me(e,t){var r=e.properties;return e.numericProps[t]||r[t]}function ge(e,t){switch(t){case se.Polygon:return{type:\"Polygon\",coordinates:[e]};case se.LineString:return{type:\"LineString\",coordinates:e};case se.Point:return{type:\"Point\",coordinates:e[0]};default:throw new Error(\"Invalid geometry type\")}}function Fe(e,t,r){for(var n=[],u=e;u<t;u++)n.push(Array.from(r.value.subarray(u*r.size,(u+1)*r.size)));return n}function be(e){var t=e.map,r=e.tileIsFullyVisible,n=e.geometryIntersection,u=e.data,o=e.type,i=e.uniqueIdProperty;null!=u&&u.properties.length&&(r?function(e){for(var t=e.map,r=e.data,n=e.uniqueIdProperty,u=De(r),o=0;o<u.length-1;o++){var i=pe(r,u[o]),a=ve(i,n,t);a&&!t.has(a)&&t.set(a,ye(i))}}({map:t,data:u,uniqueIdProperty:i}):function(e){for(var t=e.map,r=e.data,n=e.geometryIntersection,u=e.type,o=e.uniqueIdProperty,i=De(r),a=r.positions,c=0;c<i.length-1;c++){var f=i[c],l=i[c+1],s=pe(r,f),D=ve(s,o,t);if(D&&!t.has(D)){var p=Fe(f,l,a);H()(ge(p,u),n)&&t.set(D,ye(s))}}}({map:t,data:u,geometryIntersection:n,type:o,uniqueIdProperty:i}))}function de(e,t){return t?$()(z()(e),t):z()(e)}function Ee(e){var t=e.tiles,r=e.viewport,n=e.geometry,u=e.uniqueIdProperty,o=e.tileFormat,i=new Map,a=de(r,n);if(!a)return[];var c,f,l,s,D=function(e,t){var r=\"undefined\"!=typeof Symbol&&e[Symbol.iterator]||e[\"@@iterator\"];if(!r){if(Array.isArray(e)||(r=function(e,t){if(e){if(\"string\"==typeof e)return le(e,t);var r=Object.prototype.toString.call(e).slice(8,-1);return\"Object\"===r&&e.constructor&&(r=e.constructor.name),\"Map\"===r||\"Set\"===r?Array.from(e):\"Arguments\"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?le(e,t):void 0}}(e))||t&&e&&\"number\"==typeof e.length){r&&(e=r);var n=0,u=function(){};return{s:u,n:function(){return n>=e.length?{done:!0}:{done:!1,value:e[n++]}},e:function(e){throw e},f:u}}throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\")}var o,i=!0,a=!1;return{s:function(){r=r.call(e)},n:function(){var e=r.next();return i=e.done,e},e:function(e){a=!0,o=e},f:function(){try{i||null==r.return||r.return()}finally{if(a)throw o}}}}(t);try{for(D.s();!(c=D.n()).done;){var p=c.value;if(!1!==p.isVisible&&p.data){var y=p.bbox,v=z()([y.west,y.south,y.east,y.north]),m=W()(v,a),g=$()(v,a);if(g){var F={type:\"Feature\",geometry:o===L?re(g.geometry,y):g.geometry};f=p.data.points,l=void 0,void 0,s=(l=f.featureIds.value)[l.length-1],f.pointIndices={value:new l.constructor(l.length+1),size:1},f.pointIndices.value.set(l),f.pointIndices.value.set([s+1],l.length),be({map:i,tileIsFullyVisible:m,geometryIntersection:F,data:p.data.points,type:se.Point,uniqueIdProperty:u}),be({map:i,tileIsFullyVisible:m,geometryIntersection:F,data:p.data.lines,type:se.LineString,uniqueIdProperty:u}),be({map:i,tileIsFullyVisible:m,geometryIntersection:F,data:p.data.polygons,type:se.Polygon,uniqueIdProperty:u})}}}}catch(e){D.e(e)}finally{D.f()}return Array.from(i.values())}function Ae(e,t){(null==t||t>e.length)&&(t=e.length);for(var r=0,n=new Array(t);r<t;r++)n[r]=e[r];return n}function he(e){var t=e.geojson,r=e.viewport,n=e.geometry,u=e.uniqueIdProperty,o=0,i=new Map,a=de(r,n);if(!a)return[];var c,f=function(e,t){var r=\"undefined\"!=typeof Symbol&&e[Symbol.iterator]||e[\"@@iterator\"];if(!r){if(Array.isArray(e)||(r=function(e,t){if(e){if(\"string\"==typeof e)return Ae(e,t);var r=Object.prototype.toString.call(e).slice(8,-1);return\"Object\"===r&&e.constructor&&(r=e.constructor.name),\"Map\"===r||\"Set\"===r?Array.from(e):\"Arguments\"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?Ae(e,t):void 0}}(e))||t&&e&&\"number\"==typeof e.length){r&&(e=r);var n=0,u=function(){};return{s:u,n:function(){return n>=e.length?{done:!0}:{done:!1,value:e[n++]}},e:function(e){throw e},f:u}}throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\")}var o,i=!0,a=!1;return{s:function(){r=r.call(e)},n:function(){var e=r.next();return i=e.done,e},e:function(e){a=!0,o=e},f:function(){try{i||null==r.return||r.return()}finally{if(a)throw o}}}}(t.features);try{for(f.s();!(c=f.n()).done;){var l=c.value,s=u?l.properties[u]:++o;!i.has(s)&&H()(a,l)&&i.set(s,l.properties)}}catch(e){f.e(e)}finally{f.f()}return Array.from(i.values())}var Ce,Oe=Object.freeze({YEARS:\"years\",MONTHS:\"months\",WEEKS:\"weeks\",DAYS:\"days\",HOURS:\"hours\",MINUTES:\"minutes\"}),we=(e(Ce={},Oe.YEARS,(function(e){return Date.UTC(e.getUTCFullYear())})),e(Ce,Oe.MONTHS,(function(e){return Date.UTC(e.getUTCFullYear(),e.getUTCMonth())})),e(Ce,Oe.WEEKS,(function(e){return f(e)})),e(Ce,Oe.DAYS,(function(e){return Date.UTC(e.getUTCFullYear(),e.getUTCMonth(),e.getUTCDate())})),e(Ce,Oe.HOURS,(function(e){return Date.UTC(e.getUTCFullYear(),e.getUTCMonth(),e.getUTCDate(),e.getUTCHours())})),e(Ce,Oe.MINUTES,(function(e){return Date.UTC(e.getUTCFullYear(),e.getUTCMonth(),e.getUTCDate(),e.getUTCHours(),e.getUTCMinutes())})),Ce);function je(e,t,r,n,u){if(Array.isArray(e)&&0===e.length)return null;var o=we[n];if(!o)return null;var i=e.reduce((function(e,n){var u=n[r],i=new Date(u),a=o(i);if(!isNaN(a)){var c=e.get(a);c||(c=[],e.set(a,c)),null!==n[t]&&void 0!==n[t]&&(c.push(n[t]),e.set(a,c))}return e}),new Map),a=g[u];return a?A(i.entries()).map((function(e){var t=d(e,2),r=t[0],n=t[1];return{name:r,value:a(n)}})).sort((function(e,t){return e.name-t.name})):[]}var Se=Object.freeze({POLYGON:\"DrawPolygonMode\",RECTANGLE:\"DrawRectangleMode\",CIRCLE:\"DrawCircleFromCenterMode\",LASSO_TOOL:\"DrawPolygonByDraggingMode\"}),Be=Object.freeze({EDIT:\"edit\"}),Te=\"feature_selection_mask\"})(),a})()}));\n//# sourceMappingURL=index.js.map","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import { firstBy } from 'thenby';\n\n/**\n * Apply sort structure to a collection of features\n * @param {array} features\n * @param {object} [sortOptions]\n * @param {string | string[] | object[]} [sortOptions.sortBy] - One or more columns to sort by\n * @param {string} [sortOptions.sortByDirection] - Direction by the columns will be sorted\n */\nexport function applySorting(features, { sortBy, sortByDirection = 'asc' } = {}) {\n  // If sortBy is undefined, pass all features\n  if (sortBy === undefined) {\n    return features;\n  }\n\n  // sortOptions exists, but are bad formatted\n  const isValidSortBy =\n    (Array.isArray(sortBy) && sortBy.length) || // sortBy can be an array of columns\n    typeof sortBy === 'string'; // or just one column\n\n  if (!isValidSortBy) {\n    throw new Error('Sorting options are bad formatted');\n  }\n\n  const sortFn = createSortFn({\n    sortBy,\n    sortByDirection\n  });\n\n  return features.sort(sortFn);\n}\n\n// Aux\nfunction createSortFn({ sortBy, sortByDirection }) {\n  const [firstSortOption, ...othersSortOptions] = normalizeSortByOptions({\n    sortBy,\n    sortByDirection\n  });\n\n  let sortFn = firstBy(...firstSortOption);\n  for (let sortOptions of othersSortOptions) {\n    sortFn = sortFn.thenBy(...sortOptions);\n  }\n\n  return sortFn;\n}\n\nfunction normalizeSortByOptions({ sortBy, sortByDirection }) {\n  if (!Array.isArray(sortBy)) {\n    sortBy = [sortBy];\n  }\n\n  return sortBy.map((sortByEl) => {\n    // sortByEl is 'column'\n    if (typeof sortByEl === 'string') {\n      return [sortByEl, sortByDirection];\n    }\n\n    if (Array.isArray(sortByEl)) {\n      // sortBy is ['column']\n      if (sortByEl[1] === undefined) {\n        return [sortByEl, sortByDirection];\n      }\n\n      // sortBy is ['column', { ... }]\n      if (typeof sortByEl[1] === 'object') {\n        return [sortByEl[0], { direction: sortByDirection, ...sortByEl[1] }];\n      }\n    }\n    return sortByEl;\n  });\n}\n","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _toArray(arr) {\n  return arrayWithHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","export const Methods = Object.freeze({\n  TILE_FEATURES: 'tileFeatures',\n  FEATURES_FORMULA: 'featuresFormula',\n  FEATURES_HISTOGRAM: 'featuresHistogram',\n  FEATURES_CATEGORY: 'featuresCategory',\n  FEATURES_SCATTERPLOT: 'featuresScatterPlot',\n  FEATURES_TIME_SERIES: 'featuresTimeSeries',\n  FEATURES_RAW: 'featuresRawFeatures',\n  LOAD_GEOJSON_FEATURES: 'loadGeoJSONFeatures',\n  GEOJSON_FEATURES: 'featuresGeoJSON',\n  LOAD_TILES: 'loadTiles'\n});\n","import {\n  tileFeatures,\n  geojsonFeatures,\n  aggregationFunctions,\n  _applyFilters,\n  histogram,\n  scatterPlot,\n  groupValuesByColumn,\n  groupValuesByDateColumn\n} from '@carto/react-core';\nimport { applySorting } from '../utils/sorting';\nimport { Methods } from '../workerMethods';\n\nlet currentFeatures;\nlet currentGeoJSON;\nlet currentTiles;\n\nonmessage = ({ data: { method, ...params } }) => {\n  switch (method) {\n    case Methods.TILE_FEATURES:\n      getTileFeatures(params);\n      break;\n    case Methods.FEATURES_FORMULA:\n      getFormula(params);\n      break;\n    case Methods.FEATURES_HISTOGRAM:\n      getHistogram(params);\n      break;\n    case Methods.FEATURES_CATEGORY:\n      getCategories(params);\n      break;\n    case Methods.FEATURES_SCATTERPLOT:\n      getScatterPlot(params);\n      break;\n    case Methods.FEATURES_TIME_SERIES:\n      getTimeSeries(params);\n      break;\n    case Methods.FEATURES_RAW:\n      getRawFeatures(params);\n      break;\n    case Methods.LOAD_TILES:\n      loadTiles(params);\n      break;\n    case Methods.LOAD_GEOJSON_FEATURES:\n      loadGeoJSONFeatures(params);\n      break;\n    case Methods.GEOJSON_FEATURES:\n      getGeojsonFeatures(params);\n      break;\n    default:\n      throw new Error('Invalid worker method');\n  }\n};\n\nfunction getTileFeatures({ viewport, geometry, uniqueIdProperty, tileFormat }) {\n  currentFeatures = tileFeatures({\n    tiles: currentTiles,\n    viewport,\n    geometry,\n    uniqueIdProperty,\n    tileFormat\n  });\n  postMessage({ result: true });\n}\n\nfunction loadTiles({ tiles }) {\n  currentTiles = tiles;\n  postMessage({ result: true });\n}\n\nfunction loadGeoJSONFeatures({ geojson }) {\n  currentGeoJSON = geojson;\n  postMessage({ result: true });\n}\n\nfunction getGeojsonFeatures({ viewport, geometry, uniqueIdProperty }) {\n  if (currentGeoJSON) {\n    currentFeatures = geojsonFeatures({\n      geojson: currentGeoJSON,\n      viewport,\n      geometry,\n      uniqueIdProperty\n    });\n  }\n  postMessage({ result: true });\n}\n\nfunction getFormula({ filters, operation, column }) {\n  let result = null;\n\n  if (currentFeatures) {\n    const targetOperation = aggregationFunctions[operation];\n\n    const filteredFeatures = getFilteredFeatures(filters);\n\n    result = [{ value: targetOperation(filteredFeatures, column) }];\n  }\n\n  postMessage({ result });\n}\n\nfunction getHistogram({ filters, operation, column, ticks }) {\n  let result = null;\n\n  if (currentFeatures) {\n    const filteredFeatures = getFilteredFeatures(filters);\n\n    result = histogram(filteredFeatures, column, ticks, operation);\n  }\n\n  postMessage({ result });\n}\n\nfunction getCategories({ filters, operation, column, operationColumn }) {\n  let result = null;\n\n  if (currentFeatures) {\n    const filteredFeatures = getFilteredFeatures(filters);\n\n    const groups = groupValuesByColumn(\n      filteredFeatures,\n      operationColumn,\n      column,\n      operation\n    );\n\n    result = groups || [];\n  }\n\n  postMessage({ result });\n}\n\nfunction getScatterPlot({ filters, xAxisColumn, yAxisColumn }) {\n  let result = [];\n  if (currentFeatures) {\n    const filteredFeatures = getFilteredFeatures(filters);\n    result = scatterPlot(filteredFeatures, xAxisColumn, yAxisColumn);\n  }\n\n  postMessage({ result });\n}\n\nfunction getTimeSeries({ filters, column, stepSize, operation, operationColumn }) {\n  let result = [];\n\n  if (currentFeatures) {\n    const filteredFeatures = getFilteredFeatures(filters);\n\n    const groups = groupValuesByDateColumn(\n      filteredFeatures,\n      operationColumn,\n      column,\n      stepSize,\n      operation\n    );\n\n    result = groups || [];\n  }\n\n  postMessage({ result });\n}\n\n// See sorting details in utils/sorting.js\nfunction getRawFeatures({\n  filters,\n  limit = 10,\n  page = 0,\n  sortBy,\n  sortByDirection = 'asc'\n}) {\n  let data = [];\n  let numberPages = 0;\n  let totalCount = 0;\n\n  if (currentFeatures) {\n    data = applySorting(getFilteredFeatures(filters), {\n      sortBy,\n      sortByDirection\n    });\n\n    totalCount = data.length;\n\n    if (limit) {\n      numberPages = Math.ceil(data.length / limit);\n      data = applyPagination(data, { limit, page });\n    }\n  }\n\n  postMessage({\n    result: { data, currentPage: page, pages: numberPages, totalCount }\n  });\n}\n\nfunction applyPagination(features, { limit, page }) {\n  return features.slice(limit * Math.max(0, page), limit * Math.max(1, page + 1));\n}\n\nfunction getFilteredFeatures(filters = {}) {\n  return _applyFilters(currentFeatures, filters);\n}\n"],"names":["Object","defineProperty","exports","value","helpers_1","bbox","options","west","Number","south","east","north","length","Error","lowLeft","topLeft","topRight","lowRight","polygon","properties","id","meta_1","geojson","result","Infinity","coordEach","coord","__importDefault","this","mod","__esModule","boolean_point_in_polygon_1","line_intersect_1","polygon_to_line_1","isPointOnLine","lineString","pt","i","coordinates","isPointOnLineSegment","isLineInPoly","_i","_a","default","features","lineSegmentStart","lineSegmentEnd","dxc","dyc","dxl","dyl","Math","abs","feature1","feature2","bool","flattenEach","flatten1","flatten2","geom1","geom2","type","pair1","pair2","lineString1","lineString2","coord1","_b","_c","coord2","isPolyInPoly","disjoint","geometry","boolean_disjoint_1","invariant_1","inRing","ring","ignoreBoundary","isInside","slice","j","xi","yi","xj","yj","point","getCoord","geom","getGeom","polys","inBBox","insidePoly","inHole","k","excludeBoundary","epsilon","x","y","x1","y1","x2","y2","cross","line","ptCoords","lineCoords","getCoords","ignoreEndVertices","bbox_1","boolean_point_on_line_1","doBBoxOverlap","bbox1","bbox2","compareCoords","type1","type2","multiPoint","output","isPointInMultiPoint","multiPoint1","multiPoint2","anyMatch","i2","isMultiPointInMultiPoint","foundInsidePoint","isMultiPointOnLine","isMultiPointInPoly","isLineOnLine","linestring","midpoint","geometry1","geometry2","poly1Bbox","feature","feat","Array","isArray","isNumber","coordinates_1","featureCollection","fc","multiLineString","multiPolygon","radiansToLength","radians","units","factor","factors","lengthToRadians","distance","radiansToDegrees","PI","num","isNaN","earthRadius","centimeters","centimetres","degrees","feet","inches","kilometers","kilometres","meters","metres","miles","millimeters","millimetres","nauticalmiles","yards","unitsFactors","areaFactors","acres","hectares","_options","points","map","coords","polygons","lineStrings","geometryCollection","geometries","round","precision","multiplier","pow","lengthToDegrees","bearingToAzimuth","bearing","angle","degreesToRadians","convertLength","originalUnit","finalUnit","convertArea","area","startFactor","finalFactor","isObject","input","constructor","validateBBox","forEach","validateId","indexOf","polygon_clipping_1","poly1","poly2","intersection","containsNumber","geojsonType","name","featureOf","collectionOf","getType","_name","line_segment_1","geojson_rbush_1","intersects","line1","line2","coords1","coords2","x3","y3","x4","y4","denom","uA","uB","unique","results","intersect","push","tree","load","featureEach","segment","search","match","key","join","segments","reduce","previousCoords","currentCoords","createSegments","lineSegmentFeature","helpers","callback","excludeWrapCoord","l","stopG","geometryMaybeCollection","isGeometryCollection","wrapShrink","coordIndex","isFeatureCollection","isFeature","stop","featureIndex","geomIndex","multiFeatureIndex","geometryIndex","geomType","propEach","geomEach","g","featureProperties","featureBBox","featureId","undefined","segmentEach","segmentIndex","previousFeatureIndex","previousMultiIndex","prevGeomIndex","currentCoord","featureIndexCoord","multiPartIndexCoord","currentSegment","lineEach","coordAll","coordReduce","initialValue","previousValue","featureReduce","currentFeature","findPoint","findSegment","flattenReduce","geomReduce","currentGeometry","lineReduce","currentLine","propReduce","currentProperties","segmentReduce","started","polygonToLine","poly","coordsToLine","multiPolygonToLine","multiPoly","lines","rbush","meta","turfBBox","geojsonRbush","maxEntries","insert","prototype","call","remove","equals","clear","toBBox","collides","all","toJSON","fromJSON","json","minX","minY","maxX","maxY","module","_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","descriptor","enumerable","configurable","writable","_createClass","protoProps","staticProps","Node","data","next","left","right","DEFAULT_COMPARE","a","b","splay","t","comparator","N","r","cmp","node","split","v","printRow","root","prefix","isTail","out","printNode","indent","Tree","_root","_size","_comparator","add","_remove","pop","findStatic","current","compare","find","contains","visitor","ctx","Q","done","range","low","high","fn","keys","values","min","minNode","max","maxNode","at","index","d","successor","prev","predecessor","toList","head","p","presort","size","sort","loadRecursive","mergedList","l1","l2","p1","p2","mergeLists","createList","sortedListToBST","isEmpty","get","toString","n","String","update","newKey","newData","merge","start","end","middle","floor","list","pivot","tmp","isInBbox","ll","ur","getBboxOverlap","b1","b2","lowerX","upperX","EPSILON","EPSILON_SQ","ab","PtRounder","reset","xRounder","CoordRounder","yRounder","prevNode","nextNode","rounder","crossProduct","dotProduct","compareVectorAngles","basePt","endPt1","endPt2","v1","v2","kross","sqrt","cosineOfAngle","pShared","pBase","pAngle","vBase","vAngle","horizontalIntersection","verticalIntersection","SweepEvent","isLeft","events","ptCmp","comparePoints","link","Segment","aPt","bPt","other","otherEvents","iMax","evt","checkForConsuming","numEvents","evt1","consumedBy","evt2","otherSE","consume","ringOut","isInResult","baseEvent","_this","cache","Map","fillCache","linkedEvent","nextEvent","set","sine","cosine","has","_cache$get","asine","acosine","_cache$get2","bsine","bcosine","segmentId","leftSE","rightSE","rings","windings","alx","blx","arx","brx","aly","bly","ary","bry","aCmpBLeft","comparePoint","bCmpARight","bCmpALeft","aCmpBRight","_bCmpARight","_aCmpBRight","ay","ax","by","bx","newRightSE","isAnEndpoint","lPt","rPt","vector","yDist","xFromYDist","xDist","yFromXDist","tBbox","oBbox","bboxOverlap","tlp","trp","olp","orp","touchesOtherLSE","touchesThisLSE","touchesOtherRSE","touchesThisRSE","pt1","pt2","ve","d1","d2","newEvents","alreadyLinked","newLeftSE","oldRightSE","replaceRightSE","newSeg","swapEvents","tmpEvt","consumer","consumee","_tmp","winding","_prevInResult","prevInResult","_beforeState","seg","afterState","multiPolys","_afterState","beforeState","ringsAfter","windingsAfter","mpsAfter","polysAfter","polysExclude","_iMax","_ring","isExterior","_index","splice","_i2","_iMax2","mp","_isInResult","mpsBefore","operation","noBefores","noAfters","least","most","numMultiPolys","diff","isJustSubject","mps","isSubject","concat","leftPt","rightPt","cmpPts","RingIn","geomRing","firstPoint","prevPoint","fromRing","sweepEvents","PolyIn","geomPoly","exteriorRing","interiorRings","getSweepEvents","ringSweepEvents","jMax","MultiPolyIn","ex","POSITIVE_INFINITY","NEGATIVE_INFINITY","polySweepEvents","RingOut","allSegments","ringsOut","prevEvent","event","startingPoint","intersectionLEs","availableLEs","getAvailableLinkedEvents","firstPt","lastPt","indexLE","getLeftmostComparator","intersectionLE","ringEvents","unshift","reverse","prevPt","_pt","_nextPt","nextPt","shift","step","isExteriorRing","iStart","iEnd","orderedPoints","_isExteriorRing","enclosing","enclosingRing","_enclosingRing","_calcEnclosingRing","leftMostEvt","prevSeg","prevPrevSeg","PolyOut","ringGeom","MultiPolyOut","_composePolys","polyGeom","addInterior","SweepLine","queue","arguments","nextSeg","prevMySplitter","prevInter","getIntersection","newEventsFromSplit","_splitSafely","nextMySplitter","nextInter","_newEventsFromSplit","mySplitter","_newEventsFromSplit2","inter","_newEventsFromSplit3","_i3","_iMax3","_newEventsFromSplit4","_i4","_iMax4","POLYGON_CLIPPING_MAX_QUEUE_SIZE","process","env","POLYGON_CLIPPING_MAX_SWEEPLINE_SEGMENTS","Operation","moreGeoms","multipolys","subject","mpA","_j","_jMax","sweepLine","prevQueueSize","_evt","factory","union","_len","_key","run","_len2","_key2","xor","_len3","_key3","difference","subjectGeom","_len4","clippingGeoms","_key4","e","h","o","s","log","f","exp","u","_maxEntries","_minEntries","ceil","children","leaf","m","c","height","_all","_build","_splitRoot","_insert","_condense","compareMinX","compareMinY","apply","_chooseSubtree","_split","_adjustParentBBoxes","_chooseSplitAxis","_chooseSplitIndex","M","_allDistMargin","identity","ignoreCase","toLowerCase","tb","func","opt","firstBy","direction","prop","uf","preprocess","desc","makeCompareFunction","thenBy","self","hasOwnProperty","Symbol","toStringTag","getOwnPropertySymbols","filter","getOwnPropertyDescriptor","getOwnPropertyDescriptors","defineProperties","AggregationTypes","EDIT_MODES","Be","FEATURE_SELECTION_MODES","Se","GroupDateTypes","Oe","MASK_ID","Te","REQUEST_GET_MAX_URL_LENGTH","_FilterTypes","w","_applyFilters","R","_buildFeatureFilter","_filtersToSQL","_","_getApplicableFilters","U","aggregationFunctions","debounce","encodeParameter","geojsonFeatures","he","getMonday","getRequest","groupValuesByColumn","E","groupValuesByDateColumn","je","histogram","makeIntervalComplete","postRequest","randomString","D","scatterPlot","O","throttle","tileFeatures","Ee","Request","method","headers","Accept","body","JSON","stringify","encodeURIComponent","Date","getDay","getDate","setDate","UTC","getUTCFullYear","getUTCMonth","getUTCDate","clearTimeout","setTimeout","charAt","random","MIN_SAFE_INTEGER","MAX_SAFE_INTEGER","freeze","COUNT","AVG","MIN","MAX","SUM","F","from","test","iterator","return","entries","A","bin","C","IN","BETWEEN","CLOSED_OPEN","TIME","STRING_SEARCH","includes","S","getTime","isFinite","some","I","P","mustStart","mustEnd","RegExp","B","T","replace","caseSensitive","toLocaleLowerCase","keepSpecialCharacters","normalize","owner","filters","every","params","q","L","Bigint","Geometry","Timestamp","Boolean","Variant","Unknown","G","z","Y","H","V","W","X","$","K","log2","J","Z","ee","te","re","ce","ne","Point","ue","MultiPoint","oe","LineString","ie","MultiLineString","Polygon","ae","MultiPolygon","fe","tan","le","se","De","primitivePolygonIndices","pathIndices","pointIndices","pe","featureIds","numericProps","ye","assign","me","ge","Fe","subarray","be","tileIsFullyVisible","geometryIntersection","uniqueIdProperty","positions","de","tiles","viewport","tileFormat","isVisible","Ae","Ce","YEARS","MONTHS","WEEKS","DAYS","HOURS","MINUTES","we","getUTCHours","getUTCMinutes","POLYGON","RECTANGLE","CIRCLE","LASSO_TOOL","EDIT","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","_defineProperty","obj","_typeof","_arrayLikeToArray","arr","len","arr2","_iterableToArray","iter","_unsupportedIterableToArray","minLen","_toConsumableArray","createSortFn","sortBy","sortByDirection","sortByEl","firstSortOption","othersSortOptions","sortFn","sortOptions","Methods","TILE_FEATURES","FEATURES_FORMULA","FEATURES_HISTOGRAM","FEATURES_CATEGORY","FEATURES_SCATTERPLOT","FEATURES_TIME_SERIES","FEATURES_RAW","LOAD_GEOJSON_FEATURES","GEOJSON_FEATURES","LOAD_TILES","currentFeatures","currentGeoJSON","currentTiles","getFilteredFeatures","onmessage","postMessage","getTileFeatures","column","targetOperation","getFormula","ticks","filteredFeatures","getHistogram","operationColumn","getCategories","xAxisColumn","yAxisColumn","getScatterPlot","stepSize","getTimeSeries","limit","page","numberPages","totalCount","applySorting","applyPagination","currentPage","pages","getRawFeatures","loadTiles","loadGeoJSONFeatures","getGeojsonFeatures"],"sourceRoot":""}