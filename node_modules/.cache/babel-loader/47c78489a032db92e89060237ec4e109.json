{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport VectorTileFeature from './vector-tile-feature';\nexport default class VectorTileLayer {\n  constructor(pbf, end) {\n    _defineProperty(this, \"version\", void 0);\n\n    _defineProperty(this, \"name\", void 0);\n\n    _defineProperty(this, \"extent\", void 0);\n\n    _defineProperty(this, \"length\", void 0);\n\n    _defineProperty(this, \"_pbf\", void 0);\n\n    _defineProperty(this, \"_keys\", void 0);\n\n    _defineProperty(this, \"_values\", void 0);\n\n    _defineProperty(this, \"_features\", void 0);\n\n    this.version = 1;\n    this.name = '';\n    this.extent = 4096;\n    this.length = 0;\n    this._pbf = pbf;\n    this._keys = [];\n    this._values = [];\n    this._features = [];\n    pbf.readFields(readLayer, this, end);\n    this.length = this._features.length;\n  }\n\n  feature(i) {\n    if (i < 0 || i >= this._features.length) {\n      throw new Error('feature index out of bounds');\n    }\n\n    this._pbf.pos = this._features[i];\n\n    const end = this._pbf.readVarint() + this._pbf.pos;\n\n    return new VectorTileFeature(this._pbf, end, this.extent, this._keys, this._values);\n  }\n\n}\n\nfunction readLayer(tag, layer, pbf) {\n  if (layer && pbf) {\n    if (tag === 15) layer.version = pbf.readVarint();else if (tag === 1) layer.name = pbf.readString();else if (tag === 5) layer.extent = pbf.readVarint();else if (tag === 2) layer._features.push(pbf.pos);else if (tag === 3) layer._keys.push(pbf.readString());else if (tag === 4) layer._values.push(readValueMessage(pbf));\n  }\n}\n\nfunction readValueMessage(pbf) {\n  let value = null;\n  const end = pbf.readVarint() + pbf.pos;\n\n  while (pbf.pos < end) {\n    const tag = pbf.readVarint() >> 3;\n    value = tag === 1 ? pbf.readString() : tag === 2 ? pbf.readFloat() : tag === 3 ? pbf.readDouble() : tag === 4 ? pbf.readVarint64() : tag === 5 ? pbf.readVarint() : tag === 6 ? pbf.readSVarint() : tag === 7 ? pbf.readBoolean() : null;\n  }\n\n  return value;\n}","map":{"version":3,"mappings":"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","names":["VectorTileFeature","VectorTileLayer","constructor","pbf","end","_defineProperty","version","name","extent","length","_pbf","_keys","_values","_features","readFields","readLayer","feature","i","Error","pos","readVarint","tag","layer","readString","push","readValueMessage","value","readFloat","readDouble","readVarint64","readSVarint","readBoolean"],"sources":["../../../../src/lib/mapbox-vector-tile/vector-tile-layer.ts"],"sourcesContent":["/* eslint-disable indent */\n// This code is forked from https://github.com/mapbox/vector-tile-js under BSD 3-clause license.\n\nimport Protobuf from 'pbf';\nimport VectorTileFeature from './vector-tile-feature';\n\nexport default class VectorTileLayer {\n  version: number;\n  name: string;\n  extent: number;\n  length: number;\n  _pbf: Protobuf;\n  _keys: string[];\n  _values: (string | number | boolean | null)[];\n  _features: number[];\n  constructor(pbf: Protobuf, end: number) {\n    // Public\n    this.version = 1;\n    this.name = '';\n    this.extent = 4096;\n    this.length = 0;\n\n    // Private\n    this._pbf = pbf;\n    this._keys = [];\n    this._values = [];\n    this._features = [];\n\n    pbf.readFields(readLayer, this, end);\n\n    this.length = this._features.length;\n  }\n\n  /**\n   * return feature `i` from this layer as a `VectorTileFeature`\n   * @param index\n   * @returns feature\n   */\n\n  feature(i: number): VectorTileFeature {\n    if (i < 0 || i >= this._features.length) {\n      throw new Error('feature index out of bounds');\n    }\n\n    this._pbf.pos = this._features[i];\n\n    const end = this._pbf.readVarint() + this._pbf.pos;\n    return new VectorTileFeature(this._pbf, end, this.extent, this._keys, this._values);\n  }\n}\n\n/**\n *\n * @param tag\n * @param layer\n * @param pbf\n */\nfunction readLayer(tag: number, layer?: VectorTileLayer, pbf?: Protobuf): void {\n  if (layer && pbf) {\n    if (tag === 15) layer.version = pbf.readVarint();\n    else if (tag === 1) layer.name = pbf.readString();\n    else if (tag === 5) layer.extent = pbf.readVarint();\n    else if (tag === 2) layer._features.push(pbf.pos);\n    else if (tag === 3) layer._keys.push(pbf.readString());\n    else if (tag === 4) layer._values.push(readValueMessage(pbf));\n  }\n}\n\n/**\n *\n * @param pbf\n * @returns value\n */\nfunction readValueMessage(pbf: Protobuf) {\n  let value: string | number | boolean | null = null;\n  const end = pbf.readVarint() + pbf.pos;\n\n  while (pbf.pos < end) {\n    const tag = pbf.readVarint() >> 3;\n\n    value =\n      tag === 1\n        ? pbf.readString()\n        : tag === 2\n        ? pbf.readFloat()\n        : tag === 3\n        ? pbf.readDouble()\n        : tag === 4\n        ? pbf.readVarint64()\n        : tag === 5\n        ? pbf.readVarint()\n        : tag === 6\n        ? pbf.readSVarint()\n        : tag === 7\n        ? pbf.readBoolean()\n        : null;\n  }\n\n  return value;\n}\n"]},"metadata":{},"sourceType":"module"}