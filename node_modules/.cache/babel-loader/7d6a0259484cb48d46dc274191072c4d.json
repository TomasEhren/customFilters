{"ast":null,"code":"import _slicedToArray from \"/Users/tomasehrenfeld/projs/se-team/tomas/react-apps/custom_filter/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _createForOfIteratorHelper from \"/Users/tomasehrenfeld/projs/se-team/tomas/react-apps/custom_filter/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport getPalette, { DEFAULT_PALETTE, NULL_COLOR, OTHERS_COLOR } from './palette';\nimport { assert, getAttrValue } from './utils';\nexport default function colorCategories(_ref) {\n  var attr = _ref.attr,\n      domain = _ref.domain,\n      _ref$colors = _ref.colors,\n      colors = _ref$colors === void 0 ? DEFAULT_PALETTE : _ref$colors,\n      _ref$nullColor = _ref.nullColor,\n      nullColor = _ref$nullColor === void 0 ? NULL_COLOR : _ref$nullColor,\n      _ref$othersColor = _ref.othersColor,\n      othersColor = _ref$othersColor === void 0 ? OTHERS_COLOR : _ref$othersColor;\n  assert(Array.isArray(domain), 'Expected \"domain\" to be an array of numbers or strings');\n  var colorsByCategory = {};\n  var palette = typeof colors === 'string' ? getPalette(colors, domain.length) : colors;\n\n  var _iterator = _createForOfIteratorHelper(domain.entries()),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var _step$value = _slicedToArray(_step.value, 2),\n          i = _step$value[0],\n          c = _step$value[1];\n\n      colorsByCategory[c] = palette[i];\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n\n  return function (d) {\n    var value = getAttrValue(attr, d);\n    return typeof value === 'number' && Number.isFinite(value) || typeof value === 'string' ? colorsByCategory[value] || othersColor : nullColor;\n  };\n}","map":{"version":3,"mappings":";;AAAA,OAAOA,UAAP,IAA2BC,eAA3B,EAA4CC,UAA5C,EAAwDC,YAAxD,QAA2E,WAA3E;AACA,SAAQC,MAAR,EAAmCC,YAAnC,QAAsD,SAAtD;AAEA,eAAe,SAASC,eAAT,OAYO;EAAA,IAXpBC,IAWoB,QAXpBA,IAWoB;EAAA,IAVpBC,MAUoB,QAVpBA,MAUoB;EAAA,uBATpBC,MASoB;EAAA,IATpBA,MASoB,4BATXR,eASW;EAAA,0BARpBS,SAQoB;EAAA,IARpBA,SAQoB,+BARRR,UAQQ;EAAA,4BAPpBS,WAOoB;EAAA,IAPpBA,WAOoB,iCAPNR,YAOM;EACpBC,MAAM,CAACQ,KAAK,CAACC,OAAND,CAAcJ,MAAdI,CAAD,EAAwB,wDAAxB,CAANR;EAEA,IAAMU,gBAAgB,GAAG,EAAzB;EACA,IAAMC,OAAO,GAAG,OAAON,MAAP,KAAkB,QAAlB,GAA6BT,UAAU,CAACS,MAAD,EAASD,MAAM,CAACQ,MAAhB,CAAvC,GAAiEP,MAAjF;;EAJoB,2CAMCD,MAAM,CAACS,OAAPT,EAND;EAAA;;EAAA;IAMpB,oDAAuC;MAAA;MAAA,IAA3BU,CAA2B;MAAA,IAAxBC,CAAwB;;MACrCL,gBAAgB,CAACK,CAAD,CAAhBL,GAAsBC,OAAO,CAACG,CAAD,CAA7BJ;IACD;EARmB;IAAA;EAAA;IAAA;EAAA;;EAUpB,OAAOM,WAAC,EAAI;IACV,IAAMC,KAAK,GAAGhB,YAAY,CAACE,IAAD,EAAOa,CAAP,CAA1B;IACA,OAAQ,OAAOC,KAAP,KAAiB,QAAjB,IAA6BC,MAAM,CAACC,QAAPD,CAAgBD,KAAhBC,CAA7B,IAAwD,OAAOD,KAAP,KAAiB,QAAzE,GACJP,gBAAgB,CAACO,KAAD,CAAhBP,IAA2BH,WADvB,GAEJD,SAFJ;EAFF;AAMD","names":["getPalette","DEFAULT_PALETTE","NULL_COLOR","OTHERS_COLOR","assert","getAttrValue","colorCategories","attr","domain","colors","nullColor","othersColor","Array","isArray","colorsByCategory","palette","length","entries","i","c","d","value","Number","isFinite"],"sources":["../../../src/style/color-categories-style.ts"],"sourcesContent":["import getPalette, {Color, DEFAULT_PALETTE, NULL_COLOR, OTHERS_COLOR} from './palette';\nimport {assert, AttributeSelector, getAttrValue} from './utils';\n\nexport default function colorCategories({\n  attr,\n  domain,\n  colors = DEFAULT_PALETTE,\n  nullColor = NULL_COLOR,\n  othersColor = OTHERS_COLOR\n}: {\n  attr: AttributeSelector;\n  domain: number[];\n  colors: string | Color[];\n  nullColor?: Color;\n  othersColor?: Color;\n}): AttributeSelector {\n  assert(Array.isArray(domain), 'Expected \"domain\" to be an array of numbers or strings');\n\n  const colorsByCategory = {};\n  const palette = typeof colors === 'string' ? getPalette(colors, domain.length) : colors;\n\n  for (const [i, c] of domain.entries()) {\n    colorsByCategory[c] = palette[i];\n  }\n\n  return d => {\n    const value = getAttrValue(attr, d);\n    return (typeof value === 'number' && Number.isFinite(value)) || typeof value === 'string'\n      ? colorsByCategory[value] || othersColor\n      : nullColor;\n  };\n}\n"]},"metadata":{},"sourceType":"module"}