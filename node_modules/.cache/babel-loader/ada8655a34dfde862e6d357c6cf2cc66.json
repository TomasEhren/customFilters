{"ast":null,"code":"import _asyncToGenerator from \"/Users/tomasehrenfeld/projs/se-team/tomas/react-apps/custom_filter/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _classCallCheck from \"/Users/tomasehrenfeld/projs/se-team/tomas/react-apps/custom_filter/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/tomasehrenfeld/projs/se-team/tomas/react-apps/custom_filter/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/Users/tomasehrenfeld/projs/se-team/tomas/react-apps/custom_filter/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/tomasehrenfeld/projs/se-team/tomas/react-apps/custom_filter/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _wrapNativeSuper from \"/Users/tomasehrenfeld/projs/se-team/tomas/react-apps/custom_filter/node_modules/@babel/runtime/helpers/esm/wrapNativeSuper.js\";\nimport _regeneratorRuntime from \"/Users/tomasehrenfeld/projs/se-team/tomas/react-apps/custom_filter/node_modules/@babel/runtime/regenerator/index.js\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _Symbol$asyncIterator;\n\nvar ArrayQueue = /*#__PURE__*/function (_Array) {\n  _inherits(ArrayQueue, _Array);\n\n  var _super = _createSuper(ArrayQueue);\n\n  function ArrayQueue() {\n    _classCallCheck(this, ArrayQueue);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(ArrayQueue, [{\n    key: \"enqueue\",\n    value: function enqueue(value) {\n      return this.push(value);\n    }\n  }, {\n    key: \"dequeue\",\n    value: function dequeue() {\n      return this.shift();\n    }\n  }]);\n\n  return ArrayQueue;\n}( /*#__PURE__*/_wrapNativeSuper(Array));\n\n_Symbol$asyncIterator = Symbol.asyncIterator;\n\nvar AsyncQueue = /*#__PURE__*/function (_Symbol$asyncIterator2) {\n  function AsyncQueue() {\n    _classCallCheck(this, AsyncQueue);\n\n    _defineProperty(this, \"_values\", void 0);\n\n    _defineProperty(this, \"_settlers\", void 0);\n\n    _defineProperty(this, \"_closed\", void 0);\n\n    this._values = new ArrayQueue();\n    this._settlers = new ArrayQueue();\n    this._closed = false;\n  }\n\n  _createClass(AsyncQueue, [{\n    key: \"close\",\n    value: function close() {\n      while (this._settlers.length > 0) {\n        this._settlers.dequeue().resolve({\n          done: true\n        });\n      }\n\n      this._closed = true;\n    }\n  }, {\n    key: _Symbol$asyncIterator2,\n    value: function value() {\n      return this;\n    }\n  }, {\n    key: \"enqueue\",\n    value: function enqueue(value) {\n      if (this._closed) {\n        throw new Error('Closed');\n      }\n\n      if (this._settlers.length > 0) {\n        if (this._values.length > 0) {\n          throw new Error('Illegal internal state');\n        }\n\n        var settler = this._settlers.dequeue();\n\n        if (value instanceof Error) {\n          settler.reject(value);\n        } else {\n          settler.resolve({\n            value: value\n          });\n        }\n      } else {\n        this._values.enqueue(value);\n      }\n    }\n  }, {\n    key: \"next\",\n    value: function next() {\n      var _this = this;\n\n      if (this._values.length > 0) {\n        var value = this._values.dequeue();\n\n        if (value instanceof Error) {\n          return Promise.reject(value);\n        }\n\n        return Promise.resolve({\n          value: value\n        });\n      }\n\n      if (this._closed) {\n        if (this._settlers.length > 0) {\n          throw new Error('Illegal internal state');\n        }\n\n        return Promise.resolve({\n          done: true\n        });\n      }\n\n      return new Promise(function (resolve, reject) {\n        _this._settlers.enqueue({\n          resolve: resolve,\n          reject: reject\n        });\n      });\n    }\n  }]);\n\n  return AsyncQueue;\n}(_Symbol$asyncIterator);\n\nexport { AsyncQueue as default };\nexport function takeAsync(_x) {\n  return _takeAsync.apply(this, arguments);\n}\n\nfunction _takeAsync() {\n  _takeAsync = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(asyncIterable) {\n    var count,\n        result,\n        iterator,\n        _yield$iterator$next,\n        value,\n        done,\n        _args = arguments;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            count = _args.length > 1 && _args[1] !== undefined ? _args[1] : Infinity;\n            result = [];\n            iterator = asyncIterable[Symbol.asyncIterator]();\n\n          case 3:\n            if (!(result.length < count)) {\n              _context.next = 14;\n              break;\n            }\n\n            _context.next = 6;\n            return iterator.next();\n\n          case 6:\n            _yield$iterator$next = _context.sent;\n            value = _yield$iterator$next.value;\n            done = _yield$iterator$next.done;\n\n            if (!done) {\n              _context.next = 11;\n              break;\n            }\n\n            return _context.abrupt(\"break\", 14);\n\n          case 11:\n            result.push(value);\n            _context.next = 3;\n            break;\n\n          case 14:\n            return _context.abrupt(\"return\", result);\n\n          case 15:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _takeAsync.apply(this, arguments);\n}","map":{"version":3,"mappings":"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","names":["ArrayQueue","enqueue","value","push","dequeue","shift","Array","Symbol","asyncIterator","AsyncQueue","constructor","_defineProperty","_values","_settlers","_closed","close","length","resolve","done","Error","settler","reject","next","Promise","_Symbol$asyncIterator","takeAsync","asyncIterable","count","Infinity","result","iterator"],"sources":["../../../../src/lib/utils/async-queue.ts"],"sourcesContent":["// From https://github.com/rauschma/async-iter-demo/tree/master/src under MIT license\n// http://2ality.com/2016/10/asynchronous-iteration.html\n\nclass ArrayQueue<T> extends Array<T> {\n  enqueue(value: T) {\n    // Add at the end\n    return this.push(value);\n  }\n  dequeue(): T {\n    // Remove first element\n    return this.shift() as T;\n  }\n}\n\nexport default class AsyncQueue<T> {\n  private _values: ArrayQueue<T | Error>;\n  private _settlers: ArrayQueue<{resolve: (value: any) => void; reject: (reason?: any) => void}>;\n  private _closed: boolean;\n\n  constructor() {\n    // enqueues > dequeues\n    this._values = new ArrayQueue<T>();\n    // dequeues > enqueues\n    this._settlers = new ArrayQueue<{\n      resolve: (value: any) => void;\n      reject: (reason?: any) => void;\n    }>();\n    this._closed = false;\n  }\n\n  close(): void {\n    while (this._settlers.length > 0) {\n      this._settlers.dequeue().resolve({done: true});\n    }\n    this._closed = true;\n  }\n\n  [Symbol.asyncIterator](): AsyncIterator<T> {\n    return this;\n  }\n\n  enqueue(value: T | Error): void {\n    if (this._closed) {\n      throw new Error('Closed');\n    }\n\n    if (this._settlers.length > 0) {\n      if (this._values.length > 0) {\n        throw new Error('Illegal internal state');\n      }\n      const settler = this._settlers.dequeue();\n      if (value instanceof Error) {\n        settler.reject(value);\n      } else {\n        settler.resolve({value});\n      }\n    } else {\n      this._values.enqueue(value);\n    }\n  }\n\n  /**\n   * @returns a Promise for an IteratorResult\n   */\n  next(): Promise<any> {\n    if (this._values.length > 0) {\n      const value = this._values.dequeue();\n      if (value instanceof Error) {\n        return Promise.reject(value);\n      }\n      return Promise.resolve({value});\n    }\n\n    if (this._closed) {\n      if (this._settlers.length > 0) {\n        throw new Error('Illegal internal state');\n      }\n      return Promise.resolve({done: true});\n    }\n    // Wait for new values to be enqueued\n    return new Promise((resolve, reject) => {\n      this._settlers.enqueue({resolve, reject});\n    });\n  }\n}\n\n/**\n * @returns a Promise for an Array with the elements in `asyncIterable`\n */\nexport async function takeAsync(\n  asyncIterable: AsyncIterable<any>,\n  count = Infinity\n): Promise<any[]> {\n  const result: Array<any> = [];\n  const iterator = asyncIterable[Symbol.asyncIterator]();\n  while (result.length < count) {\n    const {value, done} = await iterator.next();\n    if (done) {\n      break;\n    }\n    result.push(value);\n  }\n  return result;\n}\n"]},"metadata":{},"sourceType":"module"}