{"ast":null,"code":"import _slicedToArray from \"/Users/tomasehrenfeld/projs/se-team/tomas/react-apps/custom_filter/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _toConsumableArray from \"/Users/tomasehrenfeld/projs/se-team/tomas/react-apps/custom_filter/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _defineProperty from \"/Users/tomasehrenfeld/projs/se-team/tomas/react-apps/custom_filter/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\n\nvar _GL_PARAMETER_DEFAULT, _GL_PARAMETER_SETTERS, _GL_PARAMETER_GETTERS;\n\nimport { isWebGL2 } from '../utils/webgl-checks';\nexport var GL_PARAMETER_DEFAULTS = (_GL_PARAMETER_DEFAULT = {}, _defineProperty(_GL_PARAMETER_DEFAULT, 3042, false), _defineProperty(_GL_PARAMETER_DEFAULT, 32773, new Float32Array([0, 0, 0, 0])), _defineProperty(_GL_PARAMETER_DEFAULT, 32777, 32774), _defineProperty(_GL_PARAMETER_DEFAULT, 34877, 32774), _defineProperty(_GL_PARAMETER_DEFAULT, 32969, 1), _defineProperty(_GL_PARAMETER_DEFAULT, 32968, 0), _defineProperty(_GL_PARAMETER_DEFAULT, 32971, 1), _defineProperty(_GL_PARAMETER_DEFAULT, 32970, 0), _defineProperty(_GL_PARAMETER_DEFAULT, 3106, new Float32Array([0, 0, 0, 0])), _defineProperty(_GL_PARAMETER_DEFAULT, 3107, [true, true, true, true]), _defineProperty(_GL_PARAMETER_DEFAULT, 2884, false), _defineProperty(_GL_PARAMETER_DEFAULT, 2885, 1029), _defineProperty(_GL_PARAMETER_DEFAULT, 2929, false), _defineProperty(_GL_PARAMETER_DEFAULT, 2931, 1), _defineProperty(_GL_PARAMETER_DEFAULT, 2932, 513), _defineProperty(_GL_PARAMETER_DEFAULT, 2928, new Float32Array([0, 1])), _defineProperty(_GL_PARAMETER_DEFAULT, 2930, true), _defineProperty(_GL_PARAMETER_DEFAULT, 3024, true), _defineProperty(_GL_PARAMETER_DEFAULT, 36006, null), _defineProperty(_GL_PARAMETER_DEFAULT, 2886, 2305), _defineProperty(_GL_PARAMETER_DEFAULT, 33170, 4352), _defineProperty(_GL_PARAMETER_DEFAULT, 2849, 1), _defineProperty(_GL_PARAMETER_DEFAULT, 32823, false), _defineProperty(_GL_PARAMETER_DEFAULT, 32824, 0), _defineProperty(_GL_PARAMETER_DEFAULT, 10752, 0), _defineProperty(_GL_PARAMETER_DEFAULT, 32938, 1.0), _defineProperty(_GL_PARAMETER_DEFAULT, 32939, false), _defineProperty(_GL_PARAMETER_DEFAULT, 3089, false), _defineProperty(_GL_PARAMETER_DEFAULT, 3088, new Int32Array([0, 0, 1024, 1024])), _defineProperty(_GL_PARAMETER_DEFAULT, 2960, false), _defineProperty(_GL_PARAMETER_DEFAULT, 2961, 0), _defineProperty(_GL_PARAMETER_DEFAULT, 2968, 0xffffffff), _defineProperty(_GL_PARAMETER_DEFAULT, 36005, 0xffffffff), _defineProperty(_GL_PARAMETER_DEFAULT, 2962, 519), _defineProperty(_GL_PARAMETER_DEFAULT, 2967, 0), _defineProperty(_GL_PARAMETER_DEFAULT, 2963, 0xffffffff), _defineProperty(_GL_PARAMETER_DEFAULT, 34816, 519), _defineProperty(_GL_PARAMETER_DEFAULT, 36003, 0), _defineProperty(_GL_PARAMETER_DEFAULT, 36004, 0xffffffff), _defineProperty(_GL_PARAMETER_DEFAULT, 2964, 7680), _defineProperty(_GL_PARAMETER_DEFAULT, 2965, 7680), _defineProperty(_GL_PARAMETER_DEFAULT, 2966, 7680), _defineProperty(_GL_PARAMETER_DEFAULT, 34817, 7680), _defineProperty(_GL_PARAMETER_DEFAULT, 34818, 7680), _defineProperty(_GL_PARAMETER_DEFAULT, 34819, 7680), _defineProperty(_GL_PARAMETER_DEFAULT, 2978, [0, 0, 1024, 1024]), _defineProperty(_GL_PARAMETER_DEFAULT, 3333, 4), _defineProperty(_GL_PARAMETER_DEFAULT, 3317, 4), _defineProperty(_GL_PARAMETER_DEFAULT, 37440, false), _defineProperty(_GL_PARAMETER_DEFAULT, 37441, false), _defineProperty(_GL_PARAMETER_DEFAULT, 37443, 37444), _defineProperty(_GL_PARAMETER_DEFAULT, 35723, 4352), _defineProperty(_GL_PARAMETER_DEFAULT, 36010, null), _defineProperty(_GL_PARAMETER_DEFAULT, 35977, false), _defineProperty(_GL_PARAMETER_DEFAULT, 3330, 0), _defineProperty(_GL_PARAMETER_DEFAULT, 3332, 0), _defineProperty(_GL_PARAMETER_DEFAULT, 3331, 0), _defineProperty(_GL_PARAMETER_DEFAULT, 3314, 0), _defineProperty(_GL_PARAMETER_DEFAULT, 32878, 0), _defineProperty(_GL_PARAMETER_DEFAULT, 3316, 0), _defineProperty(_GL_PARAMETER_DEFAULT, 3315, 0), _defineProperty(_GL_PARAMETER_DEFAULT, 32877, 0), _GL_PARAMETER_DEFAULT);\n\nvar enable = function enable(gl, value, key) {\n  return value ? gl.enable(key) : gl.disable(key);\n};\n\nvar hint = function hint(gl, value, key) {\n  return gl.hint(key, value);\n};\n\nvar pixelStorei = function pixelStorei(gl, value, key) {\n  return gl.pixelStorei(key, value);\n};\n\nvar drawFramebuffer = function drawFramebuffer(gl, value) {\n  var target = isWebGL2(gl) ? 36009 : 36160;\n  return gl.bindFramebuffer(target, value);\n};\n\nvar readFramebuffer = function readFramebuffer(gl, value) {\n  return gl.bindFramebuffer(36008, value);\n};\n\nfunction isArray(array) {\n  return Array.isArray(array) || ArrayBuffer.isView(array);\n}\n\nexport var GL_PARAMETER_SETTERS = (_GL_PARAMETER_SETTERS = {}, _defineProperty(_GL_PARAMETER_SETTERS, 3042, enable), _defineProperty(_GL_PARAMETER_SETTERS, 32773, function _(gl, value) {\n  return gl.blendColor.apply(gl, _toConsumableArray(value));\n}), _defineProperty(_GL_PARAMETER_SETTERS, 32777, 'blendEquation'), _defineProperty(_GL_PARAMETER_SETTERS, 34877, 'blendEquation'), _defineProperty(_GL_PARAMETER_SETTERS, 32969, 'blendFunc'), _defineProperty(_GL_PARAMETER_SETTERS, 32968, 'blendFunc'), _defineProperty(_GL_PARAMETER_SETTERS, 32971, 'blendFunc'), _defineProperty(_GL_PARAMETER_SETTERS, 32970, 'blendFunc'), _defineProperty(_GL_PARAMETER_SETTERS, 3106, function _(gl, value) {\n  return gl.clearColor.apply(gl, _toConsumableArray(value));\n}), _defineProperty(_GL_PARAMETER_SETTERS, 3107, function _(gl, value) {\n  return gl.colorMask.apply(gl, _toConsumableArray(value));\n}), _defineProperty(_GL_PARAMETER_SETTERS, 2884, enable), _defineProperty(_GL_PARAMETER_SETTERS, 2885, function _(gl, value) {\n  return gl.cullFace(value);\n}), _defineProperty(_GL_PARAMETER_SETTERS, 2929, enable), _defineProperty(_GL_PARAMETER_SETTERS, 2931, function _(gl, value) {\n  return gl.clearDepth(value);\n}), _defineProperty(_GL_PARAMETER_SETTERS, 2932, function _(gl, value) {\n  return gl.depthFunc(value);\n}), _defineProperty(_GL_PARAMETER_SETTERS, 2928, function _(gl, value) {\n  return gl.depthRange.apply(gl, _toConsumableArray(value));\n}), _defineProperty(_GL_PARAMETER_SETTERS, 2930, function _(gl, value) {\n  return gl.depthMask(value);\n}), _defineProperty(_GL_PARAMETER_SETTERS, 3024, enable), _defineProperty(_GL_PARAMETER_SETTERS, 35723, hint), _defineProperty(_GL_PARAMETER_SETTERS, 36006, drawFramebuffer), _defineProperty(_GL_PARAMETER_SETTERS, 2886, function _(gl, value) {\n  return gl.frontFace(value);\n}), _defineProperty(_GL_PARAMETER_SETTERS, 33170, hint), _defineProperty(_GL_PARAMETER_SETTERS, 2849, function _(gl, value) {\n  return gl.lineWidth(value);\n}), _defineProperty(_GL_PARAMETER_SETTERS, 32823, enable), _defineProperty(_GL_PARAMETER_SETTERS, 32824, 'polygonOffset'), _defineProperty(_GL_PARAMETER_SETTERS, 10752, 'polygonOffset'), _defineProperty(_GL_PARAMETER_SETTERS, 35977, enable), _defineProperty(_GL_PARAMETER_SETTERS, 32938, 'sampleCoverage'), _defineProperty(_GL_PARAMETER_SETTERS, 32939, 'sampleCoverage'), _defineProperty(_GL_PARAMETER_SETTERS, 3089, enable), _defineProperty(_GL_PARAMETER_SETTERS, 3088, function _(gl, value) {\n  return gl.scissor.apply(gl, _toConsumableArray(value));\n}), _defineProperty(_GL_PARAMETER_SETTERS, 2960, enable), _defineProperty(_GL_PARAMETER_SETTERS, 2961, function _(gl, value) {\n  return gl.clearStencil(value);\n}), _defineProperty(_GL_PARAMETER_SETTERS, 2968, function _(gl, value) {\n  return gl.stencilMaskSeparate(1028, value);\n}), _defineProperty(_GL_PARAMETER_SETTERS, 36005, function _(gl, value) {\n  return gl.stencilMaskSeparate(1029, value);\n}), _defineProperty(_GL_PARAMETER_SETTERS, 2962, 'stencilFuncFront'), _defineProperty(_GL_PARAMETER_SETTERS, 2967, 'stencilFuncFront'), _defineProperty(_GL_PARAMETER_SETTERS, 2963, 'stencilFuncFront'), _defineProperty(_GL_PARAMETER_SETTERS, 34816, 'stencilFuncBack'), _defineProperty(_GL_PARAMETER_SETTERS, 36003, 'stencilFuncBack'), _defineProperty(_GL_PARAMETER_SETTERS, 36004, 'stencilFuncBack'), _defineProperty(_GL_PARAMETER_SETTERS, 2964, 'stencilOpFront'), _defineProperty(_GL_PARAMETER_SETTERS, 2965, 'stencilOpFront'), _defineProperty(_GL_PARAMETER_SETTERS, 2966, 'stencilOpFront'), _defineProperty(_GL_PARAMETER_SETTERS, 34817, 'stencilOpBack'), _defineProperty(_GL_PARAMETER_SETTERS, 34818, 'stencilOpBack'), _defineProperty(_GL_PARAMETER_SETTERS, 34819, 'stencilOpBack'), _defineProperty(_GL_PARAMETER_SETTERS, 2978, function _(gl, value) {\n  return gl.viewport.apply(gl, _toConsumableArray(value));\n}), _defineProperty(_GL_PARAMETER_SETTERS, 3333, pixelStorei), _defineProperty(_GL_PARAMETER_SETTERS, 3317, pixelStorei), _defineProperty(_GL_PARAMETER_SETTERS, 37440, pixelStorei), _defineProperty(_GL_PARAMETER_SETTERS, 37441, pixelStorei), _defineProperty(_GL_PARAMETER_SETTERS, 37443, pixelStorei), _defineProperty(_GL_PARAMETER_SETTERS, 3330, pixelStorei), _defineProperty(_GL_PARAMETER_SETTERS, 3332, pixelStorei), _defineProperty(_GL_PARAMETER_SETTERS, 3331, pixelStorei), _defineProperty(_GL_PARAMETER_SETTERS, 36010, readFramebuffer), _defineProperty(_GL_PARAMETER_SETTERS, 3314, pixelStorei), _defineProperty(_GL_PARAMETER_SETTERS, 32878, pixelStorei), _defineProperty(_GL_PARAMETER_SETTERS, 3316, pixelStorei), _defineProperty(_GL_PARAMETER_SETTERS, 3315, pixelStorei), _defineProperty(_GL_PARAMETER_SETTERS, 32877, pixelStorei), _defineProperty(_GL_PARAMETER_SETTERS, \"framebuffer\", function framebuffer(gl, _framebuffer) {\n  var handle = _framebuffer && 'handle' in _framebuffer ? _framebuffer.handle : _framebuffer;\n  return gl.bindFramebuffer(36160, handle);\n}), _defineProperty(_GL_PARAMETER_SETTERS, \"blend\", function blend(gl, value) {\n  return value ? gl.enable(3042) : gl.disable(3042);\n}), _defineProperty(_GL_PARAMETER_SETTERS, \"blendColor\", function blendColor(gl, value) {\n  return gl.blendColor.apply(gl, _toConsumableArray(value));\n}), _defineProperty(_GL_PARAMETER_SETTERS, \"blendEquation\", function blendEquation(gl, args) {\n  args = isArray(args) ? args : [args, args];\n  gl.blendEquationSeparate.apply(gl, _toConsumableArray(args));\n}), _defineProperty(_GL_PARAMETER_SETTERS, \"blendFunc\", function blendFunc(gl, args) {\n  args = isArray(args) && args.length === 2 ? [].concat(_toConsumableArray(args), _toConsumableArray(args)) : args;\n  gl.blendFuncSeparate.apply(gl, _toConsumableArray(args));\n}), _defineProperty(_GL_PARAMETER_SETTERS, \"clearColor\", function clearColor(gl, value) {\n  return gl.clearColor.apply(gl, _toConsumableArray(value));\n}), _defineProperty(_GL_PARAMETER_SETTERS, \"clearDepth\", function clearDepth(gl, value) {\n  return gl.clearDepth(value);\n}), _defineProperty(_GL_PARAMETER_SETTERS, \"clearStencil\", function clearStencil(gl, value) {\n  return gl.clearStencil(value);\n}), _defineProperty(_GL_PARAMETER_SETTERS, \"colorMask\", function colorMask(gl, value) {\n  return gl.colorMask.apply(gl, _toConsumableArray(value));\n}), _defineProperty(_GL_PARAMETER_SETTERS, \"cull\", function cull(gl, value) {\n  return value ? gl.enable(2884) : gl.disable(2884);\n}), _defineProperty(_GL_PARAMETER_SETTERS, \"cullFace\", function cullFace(gl, value) {\n  return gl.cullFace(value);\n}), _defineProperty(_GL_PARAMETER_SETTERS, \"depthTest\", function depthTest(gl, value) {\n  return value ? gl.enable(2929) : gl.disable(2929);\n}), _defineProperty(_GL_PARAMETER_SETTERS, \"depthFunc\", function depthFunc(gl, value) {\n  return gl.depthFunc(value);\n}), _defineProperty(_GL_PARAMETER_SETTERS, \"depthMask\", function depthMask(gl, value) {\n  return gl.depthMask(value);\n}), _defineProperty(_GL_PARAMETER_SETTERS, \"depthRange\", function depthRange(gl, value) {\n  return gl.depthRange.apply(gl, _toConsumableArray(value));\n}), _defineProperty(_GL_PARAMETER_SETTERS, \"dither\", function dither(gl, value) {\n  return value ? gl.enable(3024) : gl.disable(3024);\n}), _defineProperty(_GL_PARAMETER_SETTERS, \"derivativeHint\", function derivativeHint(gl, value) {\n  gl.hint(35723, value);\n}), _defineProperty(_GL_PARAMETER_SETTERS, \"frontFace\", function frontFace(gl, value) {\n  return gl.frontFace(value);\n}), _defineProperty(_GL_PARAMETER_SETTERS, \"mipmapHint\", function mipmapHint(gl, value) {\n  return gl.hint(33170, value);\n}), _defineProperty(_GL_PARAMETER_SETTERS, \"lineWidth\", function lineWidth(gl, value) {\n  return gl.lineWidth(value);\n}), _defineProperty(_GL_PARAMETER_SETTERS, \"polygonOffsetFill\", function polygonOffsetFill(gl, value) {\n  return value ? gl.enable(32823) : gl.disable(32823);\n}), _defineProperty(_GL_PARAMETER_SETTERS, \"polygonOffset\", function polygonOffset(gl, value) {\n  return gl.polygonOffset.apply(gl, _toConsumableArray(value));\n}), _defineProperty(_GL_PARAMETER_SETTERS, \"sampleCoverage\", function sampleCoverage(gl, value) {\n  return gl.sampleCoverage.apply(gl, _toConsumableArray(value));\n}), _defineProperty(_GL_PARAMETER_SETTERS, \"scissorTest\", function scissorTest(gl, value) {\n  return value ? gl.enable(3089) : gl.disable(3089);\n}), _defineProperty(_GL_PARAMETER_SETTERS, \"scissor\", function scissor(gl, value) {\n  return gl.scissor.apply(gl, _toConsumableArray(value));\n}), _defineProperty(_GL_PARAMETER_SETTERS, \"stencilTest\", function stencilTest(gl, value) {\n  return value ? gl.enable(2960) : gl.disable(2960);\n}), _defineProperty(_GL_PARAMETER_SETTERS, \"stencilMask\", function stencilMask(gl, value) {\n  value = isArray(value) ? value : [value, value];\n\n  var _value = value,\n      _value2 = _slicedToArray(_value, 2),\n      mask = _value2[0],\n      backMask = _value2[1];\n\n  gl.stencilMaskSeparate(1028, mask);\n  gl.stencilMaskSeparate(1029, backMask);\n}), _defineProperty(_GL_PARAMETER_SETTERS, \"stencilFunc\", function stencilFunc(gl, args) {\n  args = isArray(args) && args.length === 3 ? [].concat(_toConsumableArray(args), _toConsumableArray(args)) : args;\n\n  var _args = args,\n      _args2 = _slicedToArray(_args, 6),\n      func = _args2[0],\n      ref = _args2[1],\n      mask = _args2[2],\n      backFunc = _args2[3],\n      backRef = _args2[4],\n      backMask = _args2[5];\n\n  gl.stencilFuncSeparate(1028, func, ref, mask);\n  gl.stencilFuncSeparate(1029, backFunc, backRef, backMask);\n}), _defineProperty(_GL_PARAMETER_SETTERS, \"stencilOp\", function stencilOp(gl, args) {\n  args = isArray(args) && args.length === 3 ? [].concat(_toConsumableArray(args), _toConsumableArray(args)) : args;\n\n  var _args3 = args,\n      _args4 = _slicedToArray(_args3, 6),\n      sfail = _args4[0],\n      dpfail = _args4[1],\n      dppass = _args4[2],\n      backSfail = _args4[3],\n      backDpfail = _args4[4],\n      backDppass = _args4[5];\n\n  gl.stencilOpSeparate(1028, sfail, dpfail, dppass);\n  gl.stencilOpSeparate(1029, backSfail, backDpfail, backDppass);\n}), _defineProperty(_GL_PARAMETER_SETTERS, \"viewport\", function viewport(gl, value) {\n  return gl.viewport.apply(gl, _toConsumableArray(value));\n}), _GL_PARAMETER_SETTERS);\n\nfunction getValue(glEnum, values, cache) {\n  return values[glEnum] !== undefined ? values[glEnum] : cache[glEnum];\n}\n\nexport var GL_COMPOSITE_PARAMETER_SETTERS = {\n  blendEquation: function blendEquation(gl, values, cache) {\n    return gl.blendEquationSeparate(getValue(32777, values, cache), getValue(34877, values, cache));\n  },\n  blendFunc: function blendFunc(gl, values, cache) {\n    return gl.blendFuncSeparate(getValue(32969, values, cache), getValue(32968, values, cache), getValue(32971, values, cache), getValue(32970, values, cache));\n  },\n  polygonOffset: function polygonOffset(gl, values, cache) {\n    return gl.polygonOffset(getValue(32824, values, cache), getValue(10752, values, cache));\n  },\n  sampleCoverage: function sampleCoverage(gl, values, cache) {\n    return gl.sampleCoverage(getValue(32938, values, cache), getValue(32939, values, cache));\n  },\n  stencilFuncFront: function stencilFuncFront(gl, values, cache) {\n    return gl.stencilFuncSeparate(1028, getValue(2962, values, cache), getValue(2967, values, cache), getValue(2963, values, cache));\n  },\n  stencilFuncBack: function stencilFuncBack(gl, values, cache) {\n    return gl.stencilFuncSeparate(1029, getValue(34816, values, cache), getValue(36003, values, cache), getValue(36004, values, cache));\n  },\n  stencilOpFront: function stencilOpFront(gl, values, cache) {\n    return gl.stencilOpSeparate(1028, getValue(2964, values, cache), getValue(2965, values, cache), getValue(2966, values, cache));\n  },\n  stencilOpBack: function stencilOpBack(gl, values, cache) {\n    return gl.stencilOpSeparate(1029, getValue(34817, values, cache), getValue(34818, values, cache), getValue(34819, values, cache));\n  }\n};\nexport var GL_HOOKED_SETTERS = {\n  enable: function enable(update, capability) {\n    return update(_defineProperty({}, capability, true));\n  },\n  disable: function disable(update, capability) {\n    return update(_defineProperty({}, capability, false));\n  },\n  pixelStorei: function pixelStorei(update, pname, value) {\n    return update(_defineProperty({}, pname, value));\n  },\n  hint: function hint(update, pname, _hint) {\n    return update(_defineProperty({}, pname, _hint));\n  },\n  bindFramebuffer: function bindFramebuffer(update, target, framebuffer) {\n    var _update5;\n\n    switch (target) {\n      case 36160:\n        return update((_update5 = {}, _defineProperty(_update5, 36006, framebuffer), _defineProperty(_update5, 36010, framebuffer), _update5));\n\n      case 36009:\n        return update(_defineProperty({}, 36006, framebuffer));\n\n      case 36008:\n        return update(_defineProperty({}, 36010, framebuffer));\n\n      default:\n        return null;\n    }\n  },\n  blendColor: function blendColor(update, r, g, b, a) {\n    return update(_defineProperty({}, 32773, new Float32Array([r, g, b, a])));\n  },\n  blendEquation: function blendEquation(update, mode) {\n    var _update9;\n\n    return update((_update9 = {}, _defineProperty(_update9, 32777, mode), _defineProperty(_update9, 34877, mode), _update9));\n  },\n  blendEquationSeparate: function blendEquationSeparate(update, modeRGB, modeAlpha) {\n    var _update10;\n\n    return update((_update10 = {}, _defineProperty(_update10, 32777, modeRGB), _defineProperty(_update10, 34877, modeAlpha), _update10));\n  },\n  blendFunc: function blendFunc(update, src, dst) {\n    var _update11;\n\n    return update((_update11 = {}, _defineProperty(_update11, 32969, src), _defineProperty(_update11, 32968, dst), _defineProperty(_update11, 32971, src), _defineProperty(_update11, 32970, dst), _update11));\n  },\n  blendFuncSeparate: function blendFuncSeparate(update, srcRGB, dstRGB, srcAlpha, dstAlpha) {\n    var _update12;\n\n    return update((_update12 = {}, _defineProperty(_update12, 32969, srcRGB), _defineProperty(_update12, 32968, dstRGB), _defineProperty(_update12, 32971, srcAlpha), _defineProperty(_update12, 32970, dstAlpha), _update12));\n  },\n  clearColor: function clearColor(update, r, g, b, a) {\n    return update(_defineProperty({}, 3106, new Float32Array([r, g, b, a])));\n  },\n  clearDepth: function clearDepth(update, depth) {\n    return update(_defineProperty({}, 2931, depth));\n  },\n  clearStencil: function clearStencil(update, s) {\n    return update(_defineProperty({}, 2961, s));\n  },\n  colorMask: function colorMask(update, r, g, b, a) {\n    return update(_defineProperty({}, 3107, [r, g, b, a]));\n  },\n  cullFace: function cullFace(update, mode) {\n    return update(_defineProperty({}, 2885, mode));\n  },\n  depthFunc: function depthFunc(update, func) {\n    return update(_defineProperty({}, 2932, func));\n  },\n  depthRange: function depthRange(update, zNear, zFar) {\n    return update(_defineProperty({}, 2928, new Float32Array([zNear, zFar])));\n  },\n  depthMask: function depthMask(update, mask) {\n    return update(_defineProperty({}, 2930, mask));\n  },\n  frontFace: function frontFace(update, face) {\n    return update(_defineProperty({}, 2886, face));\n  },\n  lineWidth: function lineWidth(update, width) {\n    return update(_defineProperty({}, 2849, width));\n  },\n  polygonOffset: function polygonOffset(update, factor, units) {\n    var _update23;\n\n    return update((_update23 = {}, _defineProperty(_update23, 32824, factor), _defineProperty(_update23, 10752, units), _update23));\n  },\n  sampleCoverage: function sampleCoverage(update, value, invert) {\n    var _update24;\n\n    return update((_update24 = {}, _defineProperty(_update24, 32938, value), _defineProperty(_update24, 32939, invert), _update24));\n  },\n  scissor: function scissor(update, x, y, width, height) {\n    return update(_defineProperty({}, 3088, new Int32Array([x, y, width, height])));\n  },\n  stencilMask: function stencilMask(update, mask) {\n    var _update26;\n\n    return update((_update26 = {}, _defineProperty(_update26, 2968, mask), _defineProperty(_update26, 36005, mask), _update26));\n  },\n  stencilMaskSeparate: function stencilMaskSeparate(update, face, mask) {\n    return update(_defineProperty({}, face === 1028 ? 2968 : 36005, mask));\n  },\n  stencilFunc: function stencilFunc(update, func, ref, mask) {\n    var _update28;\n\n    return update((_update28 = {}, _defineProperty(_update28, 2962, func), _defineProperty(_update28, 2967, ref), _defineProperty(_update28, 2963, mask), _defineProperty(_update28, 34816, func), _defineProperty(_update28, 36003, ref), _defineProperty(_update28, 36004, mask), _update28));\n  },\n  stencilFuncSeparate: function stencilFuncSeparate(update, face, func, ref, mask) {\n    var _update29;\n\n    return update((_update29 = {}, _defineProperty(_update29, face === 1028 ? 2962 : 34816, func), _defineProperty(_update29, face === 1028 ? 2967 : 36003, ref), _defineProperty(_update29, face === 1028 ? 2963 : 36004, mask), _update29));\n  },\n  stencilOp: function stencilOp(update, fail, zfail, zpass) {\n    var _update30;\n\n    return update((_update30 = {}, _defineProperty(_update30, 2964, fail), _defineProperty(_update30, 2965, zfail), _defineProperty(_update30, 2966, zpass), _defineProperty(_update30, 34817, fail), _defineProperty(_update30, 34818, zfail), _defineProperty(_update30, 34819, zpass), _update30));\n  },\n  stencilOpSeparate: function stencilOpSeparate(update, face, fail, zfail, zpass) {\n    var _update31;\n\n    return update((_update31 = {}, _defineProperty(_update31, face === 1028 ? 2964 : 34817, fail), _defineProperty(_update31, face === 1028 ? 2965 : 34818, zfail), _defineProperty(_update31, face === 1028 ? 2966 : 34819, zpass), _update31));\n  },\n  viewport: function viewport(update, x, y, width, height) {\n    return update(_defineProperty({}, 2978, [x, y, width, height]));\n  }\n};\n\nvar isEnabled = function isEnabled(gl, key) {\n  return gl.isEnabled(key);\n};\n\nexport var GL_PARAMETER_GETTERS = (_GL_PARAMETER_GETTERS = {}, _defineProperty(_GL_PARAMETER_GETTERS, 3042, isEnabled), _defineProperty(_GL_PARAMETER_GETTERS, 2884, isEnabled), _defineProperty(_GL_PARAMETER_GETTERS, 2929, isEnabled), _defineProperty(_GL_PARAMETER_GETTERS, 3024, isEnabled), _defineProperty(_GL_PARAMETER_GETTERS, 32823, isEnabled), _defineProperty(_GL_PARAMETER_GETTERS, 32926, isEnabled), _defineProperty(_GL_PARAMETER_GETTERS, 32928, isEnabled), _defineProperty(_GL_PARAMETER_GETTERS, 3089, isEnabled), _defineProperty(_GL_PARAMETER_GETTERS, 2960, isEnabled), _defineProperty(_GL_PARAMETER_GETTERS, 35977, isEnabled), _GL_PARAMETER_GETTERS);","map":{"version":3,"mappings":"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","names":["isWebGL2","GL_PARAMETER_DEFAULTS","Float32Array","Int32Array","enable","gl","value","key","disable","hint","pixelStorei","drawFramebuffer","target","bindFramebuffer","readFramebuffer","isArray","array","Array","ArrayBuffer","isView","GL_PARAMETER_SETTERS","blendColor","clearColor","colorMask","cullFace","clearDepth","depthFunc","depthRange","depthMask","frontFace","lineWidth","scissor","clearStencil","stencilMaskSeparate","viewport","framebuffer","handle","args","blendEquationSeparate","length","blendFuncSeparate","polygonOffset","sampleCoverage","mask","backMask","func","ref","backFunc","backRef","stencilFuncSeparate","sfail","dpfail","dppass","backSfail","backDpfail","backDppass","stencilOpSeparate","getValue","glEnum","values","cache","undefined","GL_COMPOSITE_PARAMETER_SETTERS","blendEquation","blendFunc","stencilFuncFront","stencilFuncBack","stencilOpFront","stencilOpBack","GL_HOOKED_SETTERS","update","capability","pname","r","g","b","a","mode","modeRGB","modeAlpha","src","dst","srcRGB","dstRGB","srcAlpha","dstAlpha","depth","s","zNear","zFar","face","width","factor","units","invert","x","y","height","stencilMask","stencilFunc","stencilOp","fail","zfail","zpass","isEnabled","GL_PARAMETER_GETTERS"],"sources":["../../../src/state-tracker/webgl-parameter-tables.js"],"sourcesContent":["// Tables describing WebGL parameters\nimport GL from '@luma.gl/constants';\nimport {isWebGL2} from '../utils/webgl-checks';\n\n// DEFAULT SETTINGS - FOR FAST CACHE INITIALIZATION AND CONTEXT RESETS\n\n/* eslint-disable no-shadow */\n\nexport const GL_PARAMETER_DEFAULTS = {\n  [GL.BLEND]: false,\n  [GL.BLEND_COLOR]: new Float32Array([0, 0, 0, 0]),\n  [GL.BLEND_EQUATION_RGB]: GL.FUNC_ADD,\n  [GL.BLEND_EQUATION_ALPHA]: GL.FUNC_ADD,\n  [GL.BLEND_SRC_RGB]: GL.ONE,\n  [GL.BLEND_DST_RGB]: GL.ZERO,\n  [GL.BLEND_SRC_ALPHA]: GL.ONE,\n  [GL.BLEND_DST_ALPHA]: GL.ZERO,\n  [GL.COLOR_CLEAR_VALUE]: new Float32Array([0, 0, 0, 0]), // TBD\n  [GL.COLOR_WRITEMASK]: [true, true, true, true],\n  [GL.CULL_FACE]: false,\n  [GL.CULL_FACE_MODE]: GL.BACK,\n  [GL.DEPTH_TEST]: false,\n  [GL.DEPTH_CLEAR_VALUE]: 1,\n  [GL.DEPTH_FUNC]: GL.LESS,\n  [GL.DEPTH_RANGE]: new Float32Array([0, 1]), // TBD\n  [GL.DEPTH_WRITEMASK]: true,\n  [GL.DITHER]: true,\n  // FRAMEBUFFER_BINDING and DRAW_FRAMEBUFFER_BINDING(WebGL2) refer same state.\n  [GL.FRAMEBUFFER_BINDING]: null,\n  [GL.FRONT_FACE]: GL.CCW,\n  [GL.GENERATE_MIPMAP_HINT]: GL.DONT_CARE,\n  [GL.LINE_WIDTH]: 1,\n  [GL.POLYGON_OFFSET_FILL]: false,\n  [GL.POLYGON_OFFSET_FACTOR]: 0,\n  [GL.POLYGON_OFFSET_UNITS]: 0,\n  [GL.SAMPLE_COVERAGE_VALUE]: 1.0,\n  [GL.SAMPLE_COVERAGE_INVERT]: false,\n  [GL.SCISSOR_TEST]: false,\n  // Note: Dynamic value. If scissor test enabled we expect users to set correct scissor box\n  [GL.SCISSOR_BOX]: new Int32Array([0, 0, 1024, 1024]),\n  [GL.STENCIL_TEST]: false,\n  [GL.STENCIL_CLEAR_VALUE]: 0,\n  [GL.STENCIL_WRITEMASK]: 0xffffffff,\n  [GL.STENCIL_BACK_WRITEMASK]: 0xffffffff,\n  [GL.STENCIL_FUNC]: GL.ALWAYS,\n  [GL.STENCIL_REF]: 0,\n  [GL.STENCIL_VALUE_MASK]: 0xffffffff,\n  [GL.STENCIL_BACK_FUNC]: GL.ALWAYS,\n  [GL.STENCIL_BACK_REF]: 0,\n  [GL.STENCIL_BACK_VALUE_MASK]: 0xffffffff,\n  [GL.STENCIL_FAIL]: GL.KEEP,\n  [GL.STENCIL_PASS_DEPTH_FAIL]: GL.KEEP,\n  [GL.STENCIL_PASS_DEPTH_PASS]: GL.KEEP,\n  [GL.STENCIL_BACK_FAIL]: GL.KEEP,\n  [GL.STENCIL_BACK_PASS_DEPTH_FAIL]: GL.KEEP,\n  [GL.STENCIL_BACK_PASS_DEPTH_PASS]: GL.KEEP,\n  // Dynamic value: We use [0, 0, 1024, 1024] as default, but usually this is updated in each frame.\n  [GL.VIEWPORT]: [0, 0, 1024, 1024],\n  // WEBGL1 PIXEL PACK/UNPACK MODES\n  [GL.PACK_ALIGNMENT]: 4,\n  [GL.UNPACK_ALIGNMENT]: 4,\n  [GL.UNPACK_FLIP_Y_WEBGL]: false,\n  [GL.UNPACK_PREMULTIPLY_ALPHA_WEBGL]: false,\n  [GL.UNPACK_COLORSPACE_CONVERSION_WEBGL]: GL.BROWSER_DEFAULT_WEBGL,\n\n  // WEBGL2 / EXTENSIONS\n  // gl1: 'OES_standard_derivatives'\n  [GL.FRAGMENT_SHADER_DERIVATIVE_HINT]: GL.DONT_CARE,\n  [GL.READ_FRAMEBUFFER_BINDING]: null,\n  [GL.RASTERIZER_DISCARD]: false,\n  [GL.PACK_ROW_LENGTH]: 0,\n  [GL.PACK_SKIP_PIXELS]: 0,\n  [GL.PACK_SKIP_ROWS]: 0,\n  [GL.UNPACK_ROW_LENGTH]: 0,\n  [GL.UNPACK_IMAGE_HEIGHT]: 0,\n  [GL.UNPACK_SKIP_PIXELS]: 0,\n  [GL.UNPACK_SKIP_ROWS]: 0,\n  [GL.UNPACK_SKIP_IMAGES]: 0\n};\n\n// SETTER TABLES - ENABLES SETTING ANY PARAMETER WITH A COMMON API\n\nconst enable = (gl, value, key) => (value ? gl.enable(key) : gl.disable(key));\nconst hint = (gl, value, key) => gl.hint(key, value);\nconst pixelStorei = (gl, value, key) => gl.pixelStorei(key, value);\n\nconst drawFramebuffer = (gl, value) => {\n  const target = isWebGL2(gl) ? GL.DRAW_FRAMEBUFFER : GL.FRAMEBUFFER;\n  return gl.bindFramebuffer(target, value);\n};\nconst readFramebuffer = (gl, value) => {\n  return gl.bindFramebuffer(GL.READ_FRAMEBUFFER, value);\n};\n\n// Utility\nfunction isArray(array) {\n  return Array.isArray(array) || ArrayBuffer.isView(array);\n}\n\n// Map from WebGL parameter names to corresponding WebGL setter functions\n// WegGL constants are read by parameter names, but set by function names\n// NOTE: When value type is a string, it will be handled by 'GL_COMPOSITE_PARAMETER_SETTERS'\nexport const GL_PARAMETER_SETTERS = {\n  [GL.BLEND]: enable,\n  [GL.BLEND_COLOR]: (gl, value) => gl.blendColor(...value),\n  [GL.BLEND_EQUATION_RGB]: 'blendEquation',\n  [GL.BLEND_EQUATION_ALPHA]: 'blendEquation',\n  [GL.BLEND_SRC_RGB]: 'blendFunc',\n  [GL.BLEND_DST_RGB]: 'blendFunc',\n  [GL.BLEND_SRC_ALPHA]: 'blendFunc',\n  [GL.BLEND_DST_ALPHA]: 'blendFunc',\n  [GL.COLOR_CLEAR_VALUE]: (gl, value) => gl.clearColor(...value),\n  [GL.COLOR_WRITEMASK]: (gl, value) => gl.colorMask(...value),\n  [GL.CULL_FACE]: enable,\n  [GL.CULL_FACE_MODE]: (gl, value) => gl.cullFace(value),\n  [GL.DEPTH_TEST]: enable,\n  [GL.DEPTH_CLEAR_VALUE]: (gl, value) => gl.clearDepth(value),\n  [GL.DEPTH_FUNC]: (gl, value) => gl.depthFunc(value),\n  [GL.DEPTH_RANGE]: (gl, value) => gl.depthRange(...value),\n  [GL.DEPTH_WRITEMASK]: (gl, value) => gl.depthMask(value),\n  [GL.DITHER]: enable,\n  [GL.FRAGMENT_SHADER_DERIVATIVE_HINT]: hint,\n  // NOTE: FRAMEBUFFER_BINDING and DRAW_FRAMEBUFFER_BINDING(WebGL2) refer same state.\n  [GL.FRAMEBUFFER_BINDING]: drawFramebuffer,\n  [GL.FRONT_FACE]: (gl, value) => gl.frontFace(value),\n  [GL.GENERATE_MIPMAP_HINT]: hint,\n  [GL.LINE_WIDTH]: (gl, value) => gl.lineWidth(value),\n  [GL.POLYGON_OFFSET_FILL]: enable,\n  [GL.POLYGON_OFFSET_FACTOR]: 'polygonOffset',\n  [GL.POLYGON_OFFSET_UNITS]: 'polygonOffset',\n  [GL.RASTERIZER_DISCARD]: enable,\n  [GL.SAMPLE_COVERAGE_VALUE]: 'sampleCoverage',\n  [GL.SAMPLE_COVERAGE_INVERT]: 'sampleCoverage',\n  [GL.SCISSOR_TEST]: enable,\n  [GL.SCISSOR_BOX]: (gl, value) => gl.scissor(...value),\n  [GL.STENCIL_TEST]: enable,\n  [GL.STENCIL_CLEAR_VALUE]: (gl, value) => gl.clearStencil(value),\n  [GL.STENCIL_WRITEMASK]: (gl, value) => gl.stencilMaskSeparate(GL.FRONT, value),\n  [GL.STENCIL_BACK_WRITEMASK]: (gl, value) => gl.stencilMaskSeparate(GL.BACK, value),\n  [GL.STENCIL_FUNC]: 'stencilFuncFront',\n  [GL.STENCIL_REF]: 'stencilFuncFront',\n  [GL.STENCIL_VALUE_MASK]: 'stencilFuncFront',\n  [GL.STENCIL_BACK_FUNC]: 'stencilFuncBack',\n  [GL.STENCIL_BACK_REF]: 'stencilFuncBack',\n  [GL.STENCIL_BACK_VALUE_MASK]: 'stencilFuncBack',\n  [GL.STENCIL_FAIL]: 'stencilOpFront',\n  [GL.STENCIL_PASS_DEPTH_FAIL]: 'stencilOpFront',\n  [GL.STENCIL_PASS_DEPTH_PASS]: 'stencilOpFront',\n  [GL.STENCIL_BACK_FAIL]: 'stencilOpBack',\n  [GL.STENCIL_BACK_PASS_DEPTH_FAIL]: 'stencilOpBack',\n  [GL.STENCIL_BACK_PASS_DEPTH_PASS]: 'stencilOpBack',\n  [GL.VIEWPORT]: (gl, value) => gl.viewport(...value),\n\n  // WEBGL1 PIXEL PACK/UNPACK MODES\n  [GL.PACK_ALIGNMENT]: pixelStorei,\n  [GL.UNPACK_ALIGNMENT]: pixelStorei,\n  [GL.UNPACK_FLIP_Y_WEBGL]: pixelStorei,\n  [GL.UNPACK_PREMULTIPLY_ALPHA_WEBGL]: pixelStorei,\n  [GL.UNPACK_COLORSPACE_CONVERSION_WEBGL]: pixelStorei,\n\n  // WEBGL2 PIXEL PACK/UNPACK MODES\n  // RASTERIZER_DISCARD ...\n  [GL.PACK_ROW_LENGTH]: pixelStorei,\n  [GL.PACK_SKIP_PIXELS]: pixelStorei,\n  [GL.PACK_SKIP_ROWS]: pixelStorei,\n  [GL.READ_FRAMEBUFFER_BINDING]: readFramebuffer,\n  [GL.UNPACK_ROW_LENGTH]: pixelStorei,\n  [GL.UNPACK_IMAGE_HEIGHT]: pixelStorei,\n  [GL.UNPACK_SKIP_PIXELS]: pixelStorei,\n  [GL.UNPACK_SKIP_ROWS]: pixelStorei,\n  [GL.UNPACK_SKIP_IMAGES]: pixelStorei,\n\n  // Function-style setters\n  framebuffer: (gl, framebuffer) => {\n    // accepts 1) a WebGLFramebuffer 2) null (default framebuffer), or 3) luma.gl Framebuffer class\n    // framebuffer is null when restoring to default framebuffer, otherwise use the WebGL handle.\n    const handle = framebuffer && 'handle' in framebuffer ? framebuffer.handle : framebuffer;\n    return gl.bindFramebuffer(GL.FRAMEBUFFER, handle);\n  },\n  blend: (gl, value) => (value ? gl.enable(GL.BLEND) : gl.disable(GL.BLEND)),\n  blendColor: (gl, value) => gl.blendColor(...value),\n  blendEquation: (gl, args) => {\n    args = isArray(args) ? args : [args, args];\n    gl.blendEquationSeparate(...args);\n  },\n  blendFunc: (gl, args) => {\n    args = isArray(args) && args.length === 2 ? [...args, ...args] : args;\n    gl.blendFuncSeparate(...args);\n  },\n\n  clearColor: (gl, value) => gl.clearColor(...value),\n  clearDepth: (gl, value) => gl.clearDepth(value),\n  clearStencil: (gl, value) => gl.clearStencil(value),\n\n  colorMask: (gl, value) => gl.colorMask(...value),\n\n  cull: (gl, value) => (value ? gl.enable(GL.CULL_FACE) : gl.disable(GL.CULL_FACE)),\n  cullFace: (gl, value) => gl.cullFace(value),\n\n  depthTest: (gl, value) => (value ? gl.enable(GL.DEPTH_TEST) : gl.disable(GL.DEPTH_TEST)),\n  depthFunc: (gl, value) => gl.depthFunc(value),\n  depthMask: (gl, value) => gl.depthMask(value),\n  depthRange: (gl, value) => gl.depthRange(...value),\n\n  dither: (gl, value) => (value ? gl.enable(GL.DITHER) : gl.disable(GL.DITHER)),\n\n  derivativeHint: (gl, value) => {\n    // gl1: 'OES_standard_derivatives'\n    gl.hint(GL.FRAGMENT_SHADER_DERIVATIVE_HINT, value);\n  },\n\n  frontFace: (gl, value) => gl.frontFace(value),\n\n  mipmapHint: (gl, value) => gl.hint(GL.GENERATE_MIPMAP_HINT, value),\n\n  lineWidth: (gl, value) => gl.lineWidth(value),\n\n  polygonOffsetFill: (gl, value) =>\n    value ? gl.enable(GL.POLYGON_OFFSET_FILL) : gl.disable(GL.POLYGON_OFFSET_FILL),\n  polygonOffset: (gl, value) => gl.polygonOffset(...value),\n\n  sampleCoverage: (gl, value) => gl.sampleCoverage(...value),\n\n  scissorTest: (gl, value) => (value ? gl.enable(GL.SCISSOR_TEST) : gl.disable(GL.SCISSOR_TEST)),\n  scissor: (gl, value) => gl.scissor(...value),\n\n  stencilTest: (gl, value) => (value ? gl.enable(GL.STENCIL_TEST) : gl.disable(GL.STENCIL_TEST)),\n  stencilMask: (gl, value) => {\n    value = isArray(value) ? value : [value, value];\n    const [mask, backMask] = value;\n    gl.stencilMaskSeparate(GL.FRONT, mask);\n    gl.stencilMaskSeparate(GL.BACK, backMask);\n  },\n  stencilFunc: (gl, args) => {\n    args = isArray(args) && args.length === 3 ? [...args, ...args] : args;\n    const [func, ref, mask, backFunc, backRef, backMask] = args;\n    gl.stencilFuncSeparate(GL.FRONT, func, ref, mask);\n    gl.stencilFuncSeparate(GL.BACK, backFunc, backRef, backMask);\n  },\n  stencilOp: (gl, args) => {\n    args = isArray(args) && args.length === 3 ? [...args, ...args] : args;\n    const [sfail, dpfail, dppass, backSfail, backDpfail, backDppass] = args;\n    gl.stencilOpSeparate(GL.FRONT, sfail, dpfail, dppass);\n    gl.stencilOpSeparate(GL.BACK, backSfail, backDpfail, backDppass);\n  },\n\n  viewport: (gl, value) => gl.viewport(...value)\n};\n\nfunction getValue(glEnum, values, cache) {\n  return values[glEnum] !== undefined ? values[glEnum] : cache[glEnum];\n}\n\n// COMPOSITE_WEBGL_PARAMETER_\nexport const GL_COMPOSITE_PARAMETER_SETTERS = {\n  blendEquation: (gl, values, cache) =>\n    gl.blendEquationSeparate(\n      getValue(GL.BLEND_EQUATION_RGB, values, cache),\n      getValue(GL.BLEND_EQUATION_ALPHA, values, cache)\n    ),\n  blendFunc: (gl, values, cache) =>\n    gl.blendFuncSeparate(\n      getValue(GL.BLEND_SRC_RGB, values, cache),\n      getValue(GL.BLEND_DST_RGB, values, cache),\n      getValue(GL.BLEND_SRC_ALPHA, values, cache),\n      getValue(GL.BLEND_DST_ALPHA, values, cache)\n    ),\n  polygonOffset: (gl, values, cache) =>\n    gl.polygonOffset(\n      getValue(GL.POLYGON_OFFSET_FACTOR, values, cache),\n      getValue(GL.POLYGON_OFFSET_UNITS, values, cache)\n    ),\n  sampleCoverage: (gl, values, cache) =>\n    gl.sampleCoverage(\n      getValue(GL.SAMPLE_COVERAGE_VALUE, values, cache),\n      getValue(GL.SAMPLE_COVERAGE_INVERT, values, cache)\n    ),\n  stencilFuncFront: (gl, values, cache) =>\n    gl.stencilFuncSeparate(\n      GL.FRONT,\n      getValue(GL.STENCIL_FUNC, values, cache),\n      getValue(GL.STENCIL_REF, values, cache),\n      getValue(GL.STENCIL_VALUE_MASK, values, cache)\n    ),\n  stencilFuncBack: (gl, values, cache) =>\n    gl.stencilFuncSeparate(\n      GL.BACK,\n      getValue(GL.STENCIL_BACK_FUNC, values, cache),\n      getValue(GL.STENCIL_BACK_REF, values, cache),\n      getValue(GL.STENCIL_BACK_VALUE_MASK, values, cache)\n    ),\n  stencilOpFront: (gl, values, cache) =>\n    gl.stencilOpSeparate(\n      GL.FRONT,\n      getValue(GL.STENCIL_FAIL, values, cache),\n      getValue(GL.STENCIL_PASS_DEPTH_FAIL, values, cache),\n      getValue(GL.STENCIL_PASS_DEPTH_PASS, values, cache)\n    ),\n  stencilOpBack: (gl, values, cache) =>\n    gl.stencilOpSeparate(\n      GL.BACK,\n      getValue(GL.STENCIL_BACK_FAIL, values, cache),\n      getValue(GL.STENCIL_BACK_PASS_DEPTH_FAIL, values, cache),\n      getValue(GL.STENCIL_BACK_PASS_DEPTH_PASS, values, cache)\n    )\n};\n\n// Setter functions intercepted for cache updates\nexport const GL_HOOKED_SETTERS = {\n  // GENERIC SETTERS\n\n  enable: (update, capability) =>\n    update({\n      [capability]: true\n    }),\n  disable: (update, capability) =>\n    update({\n      [capability]: false\n    }),\n  pixelStorei: (update, pname, value) =>\n    update({\n      [pname]: value\n    }),\n  hint: (update, pname, hint) =>\n    update({\n      [pname]: hint\n    }),\n\n  // SPECIFIC SETTERS\n\n  bindFramebuffer: (update, target, framebuffer) => {\n    switch (target) {\n      case GL.FRAMEBUFFER:\n        return update({\n          [GL.DRAW_FRAMEBUFFER_BINDING]: framebuffer,\n          [GL.READ_FRAMEBUFFER_BINDING]: framebuffer\n        });\n      case GL.DRAW_FRAMEBUFFER:\n        return update({[GL.DRAW_FRAMEBUFFER_BINDING]: framebuffer});\n      case GL.READ_FRAMEBUFFER:\n        return update({[GL.READ_FRAMEBUFFER_BINDING]: framebuffer});\n      default:\n        return null;\n    }\n  },\n  blendColor: (update, r, g, b, a) =>\n    update({\n      [GL.BLEND_COLOR]: new Float32Array([r, g, b, a])\n    }),\n\n  blendEquation: (update, mode) =>\n    update({\n      [GL.BLEND_EQUATION_RGB]: mode,\n      [GL.BLEND_EQUATION_ALPHA]: mode\n    }),\n\n  blendEquationSeparate: (update, modeRGB, modeAlpha) =>\n    update({\n      [GL.BLEND_EQUATION_RGB]: modeRGB,\n      [GL.BLEND_EQUATION_ALPHA]: modeAlpha\n    }),\n\n  blendFunc: (update, src, dst) =>\n    update({\n      [GL.BLEND_SRC_RGB]: src,\n      [GL.BLEND_DST_RGB]: dst,\n      [GL.BLEND_SRC_ALPHA]: src,\n      [GL.BLEND_DST_ALPHA]: dst\n    }),\n\n  blendFuncSeparate: (update, srcRGB, dstRGB, srcAlpha, dstAlpha) =>\n    update({\n      [GL.BLEND_SRC_RGB]: srcRGB,\n      [GL.BLEND_DST_RGB]: dstRGB,\n      [GL.BLEND_SRC_ALPHA]: srcAlpha,\n      [GL.BLEND_DST_ALPHA]: dstAlpha\n    }),\n\n  clearColor: (update, r, g, b, a) =>\n    update({\n      [GL.COLOR_CLEAR_VALUE]: new Float32Array([r, g, b, a])\n    }),\n\n  clearDepth: (update, depth) =>\n    update({\n      [GL.DEPTH_CLEAR_VALUE]: depth\n    }),\n\n  clearStencil: (update, s) =>\n    update({\n      [GL.STENCIL_CLEAR_VALUE]: s\n    }),\n\n  colorMask: (update, r, g, b, a) =>\n    update({\n      [GL.COLOR_WRITEMASK]: [r, g, b, a]\n    }),\n\n  cullFace: (update, mode) =>\n    update({\n      [GL.CULL_FACE_MODE]: mode\n    }),\n\n  depthFunc: (update, func) =>\n    update({\n      [GL.DEPTH_FUNC]: func\n    }),\n\n  depthRange: (update, zNear, zFar) =>\n    update({\n      [GL.DEPTH_RANGE]: new Float32Array([zNear, zFar])\n    }),\n\n  depthMask: (update, mask) =>\n    update({\n      [GL.DEPTH_WRITEMASK]: mask\n    }),\n\n  frontFace: (update, face) =>\n    update({\n      [GL.FRONT_FACE]: face\n    }),\n\n  lineWidth: (update, width) =>\n    update({\n      [GL.LINE_WIDTH]: width\n    }),\n\n  polygonOffset: (update, factor, units) =>\n    update({\n      [GL.POLYGON_OFFSET_FACTOR]: factor,\n      [GL.POLYGON_OFFSET_UNITS]: units\n    }),\n\n  sampleCoverage: (update, value, invert) =>\n    update({\n      [GL.SAMPLE_COVERAGE_VALUE]: value,\n      [GL.SAMPLE_COVERAGE_INVERT]: invert\n    }),\n\n  scissor: (update, x, y, width, height) =>\n    update({\n      [GL.SCISSOR_BOX]: new Int32Array([x, y, width, height])\n    }),\n\n  stencilMask: (update, mask) =>\n    update({\n      [GL.STENCIL_WRITEMASK]: mask,\n      [GL.STENCIL_BACK_WRITEMASK]: mask\n    }),\n\n  stencilMaskSeparate: (update, face, mask) =>\n    update({\n      [face === GL.FRONT ? GL.STENCIL_WRITEMASK : GL.STENCIL_BACK_WRITEMASK]: mask\n    }),\n\n  stencilFunc: (update, func, ref, mask) =>\n    update({\n      [GL.STENCIL_FUNC]: func,\n      [GL.STENCIL_REF]: ref,\n      [GL.STENCIL_VALUE_MASK]: mask,\n      [GL.STENCIL_BACK_FUNC]: func,\n      [GL.STENCIL_BACK_REF]: ref,\n      [GL.STENCIL_BACK_VALUE_MASK]: mask\n    }),\n\n  stencilFuncSeparate: (update, face, func, ref, mask) =>\n    update({\n      [face === GL.FRONT ? GL.STENCIL_FUNC : GL.STENCIL_BACK_FUNC]: func,\n      [face === GL.FRONT ? GL.STENCIL_REF : GL.STENCIL_BACK_REF]: ref,\n      [face === GL.FRONT ? GL.STENCIL_VALUE_MASK : GL.STENCIL_BACK_VALUE_MASK]: mask\n    }),\n\n  stencilOp: (update, fail, zfail, zpass) =>\n    update({\n      [GL.STENCIL_FAIL]: fail,\n      [GL.STENCIL_PASS_DEPTH_FAIL]: zfail,\n      [GL.STENCIL_PASS_DEPTH_PASS]: zpass,\n      [GL.STENCIL_BACK_FAIL]: fail,\n      [GL.STENCIL_BACK_PASS_DEPTH_FAIL]: zfail,\n      [GL.STENCIL_BACK_PASS_DEPTH_PASS]: zpass\n    }),\n\n  stencilOpSeparate: (update, face, fail, zfail, zpass) =>\n    update({\n      [face === GL.FRONT ? GL.STENCIL_FAIL : GL.STENCIL_BACK_FAIL]: fail,\n      [face === GL.FRONT ? GL.STENCIL_PASS_DEPTH_FAIL : GL.STENCIL_BACK_PASS_DEPTH_FAIL]: zfail,\n      [face === GL.FRONT ? GL.STENCIL_PASS_DEPTH_PASS : GL.STENCIL_BACK_PASS_DEPTH_PASS]: zpass\n    }),\n\n  viewport: (update, x, y, width, height) =>\n    update({\n      [GL.VIEWPORT]: [x, y, width, height]\n    })\n};\n\n// GETTER TABLE - FOR READING OUT AN ENTIRE CONTEXT\n\nconst isEnabled = (gl, key) => gl.isEnabled(key);\n\n// Exceptions for any keys that cannot be queried by gl.getParameters\nexport const GL_PARAMETER_GETTERS = {\n  [GL.BLEND]: isEnabled,\n  [GL.CULL_FACE]: isEnabled,\n  [GL.DEPTH_TEST]: isEnabled,\n  [GL.DITHER]: isEnabled,\n  [GL.POLYGON_OFFSET_FILL]: isEnabled,\n  [GL.SAMPLE_ALPHA_TO_COVERAGE]: isEnabled,\n  [GL.SAMPLE_COVERAGE]: isEnabled,\n  [GL.SCISSOR_TEST]: isEnabled,\n  [GL.STENCIL_TEST]: isEnabled,\n\n  // WebGL 2\n  [GL.RASTERIZER_DISCARD]: isEnabled\n};\n"]},"metadata":{},"sourceType":"module"}