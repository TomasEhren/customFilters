{"ast":null,"code":"export function getTransferList(object) {\n  var recursive = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n  var transfers = arguments.length > 2 ? arguments[2] : undefined;\n  var transfersSet = transfers || new Set();\n\n  if (!object) {} else if (isTransferable(object)) {\n    transfersSet.add(object);\n  } else if (isTransferable(object.buffer)) {\n    transfersSet.add(object.buffer);\n  } else if (ArrayBuffer.isView(object)) {} else if (recursive && typeof object === 'object') {\n    for (var key in object) {\n      getTransferList(object[key], recursive, transfersSet);\n    }\n  }\n\n  return transfers === undefined ? Array.from(transfersSet) : [];\n}\n\nfunction isTransferable(object) {\n  if (!object) {\n    return false;\n  }\n\n  if (object instanceof ArrayBuffer) {\n    return true;\n  }\n\n  if (typeof MessagePort !== 'undefined' && object instanceof MessagePort) {\n    return true;\n  }\n\n  if (typeof ImageBitmap !== 'undefined' && object instanceof ImageBitmap) {\n    return true;\n  }\n\n  if (typeof OffscreenCanvas !== 'undefined' && object instanceof OffscreenCanvas) {\n    return true;\n  }\n\n  return false;\n}","map":{"version":3,"mappings":"AAWA,OAAO,SAASA,eAAT,CACLC,MADK,EAIW;EAAA,IAFhBC,SAEgB,uEAFK,IAEL;EAAA,IADhBC,SACgB;EAEhB,IAAMC,YAAY,GAAGD,SAAS,IAAI,IAAIE,GAAJ,EAAlC;;EAEA,IAAI,CAACJ,MAAL,EAAa,CAAb,OAEO,IAAIK,cAAc,CAACL,MAAD,CAAlB,EAA4B;IACjCG,YAAY,CAACG,GAAbH,CAAiBH,MAAjBG;EADK,OAEA,IAAIE,cAAc,CAACL,MAAM,CAACO,MAAR,CAAlB,EAAmC;IAExCJ,YAAY,CAACG,GAAbH,CAAiBH,MAAM,CAACO,MAAxBJ;EAFK,OAGA,IAAIK,WAAW,CAACC,MAAZD,CAAmBR,MAAnBQ,CAAJ,EAAgC,CAAhC,OAGA,IAAIP,SAAS,IAAI,OAAOD,MAAP,KAAkB,QAAnC,EAA6C;IAClD,KAAK,IAAMU,GAAX,IAAkBV,MAAlB,EAA0B;MAExBD,eAAe,CAACC,MAAM,CAACU,GAAD,CAAP,EAAcT,SAAd,EAAyBE,YAAzB,CAAfJ;IACD;EACF;;EAID,OAAOG,SAAS,KAAKS,SAAdT,GAA0BU,KAAK,CAACC,IAAND,CAAWT,YAAXS,CAA1BV,GAAqD,EAA5D;AACD;;AAGD,SAASG,cAAT,CAAwBL,MAAxB,EAAyC;EACvC,IAAI,CAACA,MAAL,EAAa;IACX,OAAO,KAAP;EACD;;EACD,IAAIA,MAAM,YAAYQ,WAAtB,EAAmC;IACjC,OAAO,IAAP;EACD;;EACD,IAAI,OAAOM,WAAP,KAAuB,WAAvB,IAAsCd,MAAM,YAAYc,WAA5D,EAAyE;IACvE,OAAO,IAAP;EACD;;EACD,IAAI,OAAOC,WAAP,KAAuB,WAAvB,IAAsCf,MAAM,YAAYe,WAA5D,EAAyE;IACvE,OAAO,IAAP;EACD;;EAED,IAAI,OAAOC,eAAP,KAA2B,WAA3B,IAA0ChB,MAAM,YAAYgB,eAAhE,EAAiF;IAC/E,OAAO,IAAP;EACD;;EACD,OAAO,KAAP;AACD","names":["getTransferList","object","recursive","transfers","transfersSet","Set","isTransferable","add","buffer","ArrayBuffer","isView","key","undefined","Array","from","MessagePort","ImageBitmap","OffscreenCanvas"],"sources":["../../../../src/lib/worker-utils/get-transfer-list.ts"],"sourcesContent":["// NOTE - there is a copy of this function is both in core and loader-utils\n// core does not need all the utils in loader-utils, just this one.\n\n/**\n * Returns an array of Transferrable objects that can be used with postMessage\n * https://developer.mozilla.org/en-US/docs/Web/API/Worker/postMessage\n * @param object data to be sent via postMessage\n * @param recursive - not for application use\n * @param transfers - not for application use\n * @returns a transfer list that can be passed to postMessage\n */\nexport function getTransferList(\n  object: any,\n  recursive: boolean = true,\n  transfers?: Set<any>\n): Transferable[] {\n  // Make sure that items in the transfer list is unique\n  const transfersSet = transfers || new Set();\n\n  if (!object) {\n    // ignore\n  } else if (isTransferable(object)) {\n    transfersSet.add(object);\n  } else if (isTransferable(object.buffer)) {\n    // Typed array\n    transfersSet.add(object.buffer);\n  } else if (ArrayBuffer.isView(object)) {\n    // object is a TypeArray viewing into a SharedArrayBuffer (not transferable)\n    // Do not iterate through the content in this case\n  } else if (recursive && typeof object === 'object') {\n    for (const key in object) {\n      // Avoid perf hit - only go one level deep\n      getTransferList(object[key], recursive, transfersSet);\n    }\n  }\n\n  // If transfers is defined, is internal recursive call\n  // Otherwise it's called by the user\n  return transfers === undefined ? Array.from(transfersSet) : [];\n}\n\n// https://developer.mozilla.org/en-US/docs/Web/API/Transferable\nfunction isTransferable(object: unknown) {\n  if (!object) {\n    return false;\n  }\n  if (object instanceof ArrayBuffer) {\n    return true;\n  }\n  if (typeof MessagePort !== 'undefined' && object instanceof MessagePort) {\n    return true;\n  }\n  if (typeof ImageBitmap !== 'undefined' && object instanceof ImageBitmap) {\n    return true;\n  }\n  // @ts-ignore\n  if (typeof OffscreenCanvas !== 'undefined' && object instanceof OffscreenCanvas) {\n    return true;\n  }\n  return false;\n}\n"]},"metadata":{},"sourceType":"module"}