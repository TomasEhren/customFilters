{"ast":null,"code":"import _asyncToGenerator from \"/Users/tomasehrenfeld/projs/se-team/tomas/react-apps/custom_filter/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _regeneratorRuntime from \"/Users/tomasehrenfeld/projs/se-team/tomas/react-apps/custom_filter/node_modules/@babel/runtime/regenerator/index.js\";\nimport { isBrowser, assert, resolvePath } from '@loaders.gl/loader-utils';\nimport { fs, toBuffer } from '@loaders.gl/loader-utils';\nexport function writeFile(_x, _x2, _x3) {\n  return _writeFile.apply(this, arguments);\n}\n\nfunction _writeFile() {\n  _writeFile = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(filePath, arrayBufferOrString, options) {\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            filePath = resolvePath(filePath);\n\n            if (isBrowser) {\n              _context.next = 4;\n              break;\n            }\n\n            _context.next = 4;\n            return fs.writeFile(filePath, toBuffer(arrayBufferOrString), {\n              flag: 'w'\n            });\n\n          case 4:\n            assert(false);\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _writeFile.apply(this, arguments);\n}\n\nexport function writeFileSync(filePath, arrayBufferOrString, options) {\n  filePath = resolvePath(filePath);\n\n  if (!isBrowser) {\n    fs.writeFileSync(filePath, toBuffer(arrayBufferOrString), {\n      flag: 'w'\n    });\n  }\n\n  assert(false);\n}","map":{"version":3,"mappings":";;AACA,SAAQA,SAAR,EAAmBC,MAAnB,EAA2BC,WAA3B,QAA6C,0BAA7C;AACA,SAAQC,EAAR,EAAYC,QAAZ,QAA2B,0BAA3B;AAEA,gBAAsBC,SAAtB;EAAA;AAAA;;;wEAAO,iBACLC,QADK,EAELC,mBAFK,EAGLC,OAHK;IAAA;MAAA;QAAA;UAAA;YAKLF,QAAQ,GAAGJ,WAAW,CAACI,QAAD,CAAtBA;;YALK,IAMAN,SANA;cAAA;cAAA;YAAA;;YAAA;YAAA,OAOGG,EAAE,CAACE,SAAHF,CAAaG,QAAbH,EAAuBC,QAAQ,CAACG,mBAAD,CAA/BJ,EAAsD;cAACM,IAAI,EAAE;YAAP,CAAtDN,CAPH;;UAAA;YASLF,MAAM,CAAC,KAAD,CAANA;;UATK;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,C;;;;AAYP,OAAO,SAASS,aAAT,CACLJ,QADK,EAELC,mBAFK,EAGLC,OAHK,EAIC;EACNF,QAAQ,GAAGJ,WAAW,CAACI,QAAD,CAAtBA;;EACA,IAAI,CAACN,SAAL,EAAgB;IACdG,EAAE,CAACO,aAAHP,CAAiBG,QAAjBH,EAA2BC,QAAQ,CAACG,mBAAD,CAAnCJ,EAA0D;MAACM,IAAI,EAAE;IAAP,CAA1DN;EACD;;EACDF,MAAM,CAAC,KAAD,CAANA;AACD","names":["isBrowser","assert","resolvePath","fs","toBuffer","writeFile","filePath","arrayBufferOrString","options","flag","writeFileSync"],"sources":["../../../../src/lib/fetch/write-file.ts"],"sourcesContent":["// file write\nimport {isBrowser, assert, resolvePath} from '@loaders.gl/loader-utils';\nimport {fs, toBuffer} from '@loaders.gl/loader-utils';\n\nexport async function writeFile(\n  filePath: string,\n  arrayBufferOrString: ArrayBuffer | string,\n  options?\n): Promise<void> {\n  filePath = resolvePath(filePath);\n  if (!isBrowser) {\n    await fs.writeFile(filePath, toBuffer(arrayBufferOrString), {flag: 'w'});\n  }\n  assert(false);\n}\n\nexport function writeFileSync(\n  filePath: string,\n  arrayBufferOrString: ArrayBuffer | string,\n  options?\n): void {\n  filePath = resolvePath(filePath);\n  if (!isBrowser) {\n    fs.writeFileSync(filePath, toBuffer(arrayBufferOrString), {flag: 'w'});\n  }\n  assert(false);\n}\n"]},"metadata":{},"sourceType":"module"}