{"ast":null,"code":"import Vector from './base/vector';\nimport { config, isArray } from '../lib/common';\nimport { checkNumber } from '../lib/validators';\nimport * as vec2 from 'gl-matrix/vec2';\nimport { vec2_transformMat4AsVector } from '../lib/gl-matrix-extras';\nexport default class Vector2 extends Vector {\n  constructor() {\n    let x = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    let y = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    super(2);\n\n    if (isArray(x) && arguments.length === 1) {\n      this.copy(x);\n    } else {\n      if (config.debug) {\n        checkNumber(x);\n        checkNumber(y);\n      }\n\n      this[0] = x;\n      this[1] = y;\n    }\n  }\n\n  set(x, y) {\n    this[0] = x;\n    this[1] = y;\n    return this.check();\n  }\n\n  copy(array) {\n    this[0] = array[0];\n    this[1] = array[1];\n    return this.check();\n  }\n\n  fromObject(object) {\n    if (config.debug) {\n      checkNumber(object.x);\n      checkNumber(object.y);\n    }\n\n    this[0] = object.x;\n    this[1] = object.y;\n    return this.check();\n  }\n\n  toObject(object) {\n    object.x = this[0];\n    object.y = this[1];\n    return object;\n  }\n\n  get ELEMENTS() {\n    return 2;\n  }\n\n  horizontalAngle() {\n    return Math.atan2(this.y, this.x);\n  }\n\n  verticalAngle() {\n    return Math.atan2(this.x, this.y);\n  }\n\n  transform(matrix4) {\n    return this.transformAsPoint(matrix4);\n  }\n\n  transformAsPoint(matrix4) {\n    vec2.transformMat4(this, this, matrix4);\n    return this.check();\n  }\n\n  transformAsVector(matrix4) {\n    vec2_transformMat4AsVector(this, this, matrix4);\n    return this.check();\n  }\n\n  transformByMatrix3(matrix3) {\n    vec2.transformMat3(this, this, matrix3);\n    return this.check();\n  }\n\n  transformByMatrix2x3(matrix2x3) {\n    vec2.transformMat2d(this, this, matrix2x3);\n    return this.check();\n  }\n\n  transformByMatrix2(matrix2) {\n    vec2.transformMat2(this, this, matrix2);\n    return this.check();\n  }\n\n}","map":{"version":3,"mappings":"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","names":["Vector","config","isArray","checkNumber","vec2","vec2_transformMat4AsVector","Vector2","constructor","x","y","arguments","length","copy","debug","set","check","array","fromObject","object","toObject","ELEMENTS","horizontalAngle","Math","atan2","verticalAngle","transform","matrix4","transformAsPoint","transformMat4","transformAsVector","transformByMatrix3","matrix3","transformMat3","transformByMatrix2x3","matrix2x3","transformMat2d","transformByMatrix2","matrix2","transformMat2"],"sources":["../../../src/classes/vector2.js"],"sourcesContent":["// Copyright (c) 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport Vector from './base/vector';\nimport {config, isArray} from '../lib/common';\nimport {checkNumber} from '../lib/validators';\n\n// @ts-ignore: error TS2307: Cannot find module 'gl-matrix/...'.\nimport * as vec2 from 'gl-matrix/vec2';\n// eslint-disable-next-line camelcase\nimport {vec2_transformMat4AsVector} from '../lib/gl-matrix-extras';\n\nexport default class Vector2 extends Vector {\n  // Creates a new, empty vec2\n  constructor(x = 0, y = 0) {\n    // PERF NOTE: initialize elements as double precision numbers\n    super(2); // -0, -0);\n    if (isArray(x) && arguments.length === 1) {\n      this.copy(x);\n    } else {\n      if (config.debug) {\n        checkNumber(x);\n        checkNumber(y);\n      }\n      this[0] = x;\n      this[1] = y;\n    }\n  }\n\n  set(x, y) {\n    this[0] = x;\n    this[1] = y;\n    return this.check();\n  }\n\n  copy(array) {\n    this[0] = array[0];\n    this[1] = array[1];\n    return this.check();\n  }\n\n  fromObject(object) {\n    if (config.debug) {\n      checkNumber(object.x);\n      checkNumber(object.y);\n    }\n    this[0] = object.x;\n    this[1] = object.y;\n    return this.check();\n  }\n\n  toObject(object) {\n    object.x = this[0];\n    object.y = this[1];\n    return object;\n  }\n\n  // Getters/setters\n  get ELEMENTS() {\n    return 2;\n  }\n\n  // x,y inherited from Vector\n\n  horizontalAngle() {\n    return Math.atan2(this.y, this.x);\n  }\n\n  verticalAngle() {\n    return Math.atan2(this.x, this.y);\n  }\n\n  // Transforms\n\n  transform(matrix4) {\n    return this.transformAsPoint(matrix4);\n  }\n\n  // transforms as point (4th component is implicitly 1)\n  transformAsPoint(matrix4) {\n    vec2.transformMat4(this, this, matrix4);\n    return this.check();\n  }\n\n  // transforms as vector  (4th component is implicitly 0, ignores translation. slightly faster)\n  transformAsVector(matrix4) {\n    vec2_transformMat4AsVector(this, this, matrix4);\n    return this.check();\n  }\n\n  transformByMatrix3(matrix3) {\n    vec2.transformMat3(this, this, matrix3);\n    return this.check();\n  }\n\n  transformByMatrix2x3(matrix2x3) {\n    vec2.transformMat2d(this, this, matrix2x3);\n    return this.check();\n  }\n\n  transformByMatrix2(matrix2) {\n    vec2.transformMat2(this, this, matrix2);\n    return this.check();\n  }\n}\n"]},"metadata":{},"sourceType":"module"}