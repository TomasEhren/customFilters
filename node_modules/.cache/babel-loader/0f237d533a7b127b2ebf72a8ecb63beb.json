{"ast":null,"code":"import _classCallCheck from \"/Users/tomasehrenfeld/projs/se-team/tomas/react-apps/custom_filter/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/tomasehrenfeld/projs/se-team/tomas/react-apps/custom_filter/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _assertThisInitialized from \"/Users/tomasehrenfeld/projs/se-team/tomas/react-apps/custom_filter/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _inherits from \"/Users/tomasehrenfeld/projs/se-team/tomas/react-apps/custom_filter/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/tomasehrenfeld/projs/se-team/tomas/react-apps/custom_filter/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { isWebGL2, assertWebGL2Context, log } from '@luma.gl/gltools';\nimport Resource from './resource';\nimport Buffer from './buffer';\nimport { isObjectEmpty } from '../utils/utils';\n\nvar TransformFeedback = /*#__PURE__*/function (_Resource) {\n  _inherits(TransformFeedback, _Resource);\n\n  var _super = _createSuper(TransformFeedback);\n\n  function TransformFeedback(gl) {\n    var _this;\n\n    var props = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    _classCallCheck(this, TransformFeedback);\n\n    assertWebGL2Context(gl);\n    _this = _super.call(this, gl, props);\n\n    _this.initialize(props);\n\n    _this.stubRemovedMethods('TransformFeedback', 'v6.0', ['pause', 'resume']);\n\n    Object.seal(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(TransformFeedback, [{\n    key: \"initialize\",\n    value: function initialize() {\n      var _this2 = this;\n\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      this.buffers = {};\n      this.unused = {};\n      this.configuration = null;\n      this.bindOnUse = true;\n\n      if (!isObjectEmpty(this.buffers)) {\n        this.bind(function () {\n          return _this2._unbindBuffers();\n        });\n      }\n\n      this.setProps(props);\n      return this;\n    }\n  }, {\n    key: \"setProps\",\n    value: function setProps(props) {\n      if ('program' in props) {\n        this.configuration = props.program && props.program.configuration;\n      }\n\n      if ('configuration' in props) {\n        this.configuration = props.configuration;\n      }\n\n      if ('bindOnUse' in props) {\n        props = props.bindOnUse;\n      }\n\n      if ('buffers' in props) {\n        this.setBuffers(props.buffers);\n      }\n    }\n  }, {\n    key: \"setBuffers\",\n    value: function setBuffers() {\n      var _this3 = this;\n\n      var buffers = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      this.bind(function () {\n        for (var bufferName in buffers) {\n          _this3.setBuffer(bufferName, buffers[bufferName]);\n        }\n      });\n      return this;\n    }\n  }, {\n    key: \"setBuffer\",\n    value: function setBuffer(locationOrName, bufferOrParams) {\n      var _this4 = this;\n\n      var location = this._getVaryingIndex(locationOrName);\n\n      var _this$_getBufferParam = this._getBufferParams(bufferOrParams),\n          buffer = _this$_getBufferParam.buffer,\n          byteSize = _this$_getBufferParam.byteSize,\n          byteOffset = _this$_getBufferParam.byteOffset;\n\n      if (location < 0) {\n        this.unused[locationOrName] = buffer;\n        log.warn(function () {\n          return \"\".concat(_this4.id, \" unused varying buffer \").concat(locationOrName);\n        })();\n        return this;\n      }\n\n      this.buffers[location] = bufferOrParams;\n\n      if (!this.bindOnUse) {\n        this._bindBuffer(location, buffer, byteOffset, byteSize);\n      }\n\n      return this;\n    }\n  }, {\n    key: \"begin\",\n    value: function begin() {\n      var primitiveMode = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n      this.gl.bindTransformFeedback(36386, this.handle);\n\n      this._bindBuffers();\n\n      this.gl.beginTransformFeedback(primitiveMode);\n      return this;\n    }\n  }, {\n    key: \"end\",\n    value: function end() {\n      this.gl.endTransformFeedback();\n\n      this._unbindBuffers();\n\n      this.gl.bindTransformFeedback(36386, null);\n      return this;\n    }\n  }, {\n    key: \"_getBufferParams\",\n    value: function _getBufferParams(bufferOrParams) {\n      var byteOffset;\n      var byteSize;\n      var buffer;\n\n      if (bufferOrParams instanceof Buffer === false) {\n        buffer = bufferOrParams.buffer;\n        byteSize = bufferOrParams.byteSize;\n        byteOffset = bufferOrParams.byteOffset;\n      } else {\n        buffer = bufferOrParams;\n      }\n\n      if (byteOffset !== undefined || byteSize !== undefined) {\n        byteOffset = byteOffset || 0;\n        byteSize = byteSize || buffer.byteLength - byteOffset;\n      }\n\n      return {\n        buffer: buffer,\n        byteOffset: byteOffset,\n        byteSize: byteSize\n      };\n    }\n  }, {\n    key: \"_getVaryingInfo\",\n    value: function _getVaryingInfo(locationOrName) {\n      return this.configuration && this.configuration.getVaryingInfo(locationOrName);\n    }\n  }, {\n    key: \"_getVaryingIndex\",\n    value: function _getVaryingIndex(locationOrName) {\n      if (this.configuration) {\n        return this.configuration.getVaryingInfo(locationOrName).location;\n      }\n\n      var location = Number(locationOrName);\n      return Number.isFinite(location) ? location : -1;\n    }\n  }, {\n    key: \"_bindBuffers\",\n    value: function _bindBuffers() {\n      if (this.bindOnUse) {\n        for (var bufferIndex in this.buffers) {\n          var _this$_getBufferParam2 = this._getBufferParams(this.buffers[bufferIndex]),\n              buffer = _this$_getBufferParam2.buffer,\n              byteSize = _this$_getBufferParam2.byteSize,\n              byteOffset = _this$_getBufferParam2.byteOffset;\n\n          this._bindBuffer(bufferIndex, buffer, byteOffset, byteSize);\n        }\n      }\n    }\n  }, {\n    key: \"_unbindBuffers\",\n    value: function _unbindBuffers() {\n      if (this.bindOnUse) {\n        for (var bufferIndex in this.buffers) {\n          this._bindBuffer(bufferIndex, null);\n        }\n      }\n    }\n  }, {\n    key: \"_bindBuffer\",\n    value: function _bindBuffer(index, buffer) {\n      var byteOffset = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n      var byteSize = arguments.length > 3 ? arguments[3] : undefined;\n      var handle = buffer && buffer.handle;\n\n      if (!handle || byteSize === undefined) {\n        this.gl.bindBufferBase(35982, index, handle);\n      } else {\n        this.gl.bindBufferRange(35982, index, handle, byteOffset, byteSize);\n      }\n\n      return this;\n    }\n  }, {\n    key: \"_createHandle\",\n    value: function _createHandle() {\n      return this.gl.createTransformFeedback();\n    }\n  }, {\n    key: \"_deleteHandle\",\n    value: function _deleteHandle() {\n      this.gl.deleteTransformFeedback(this.handle);\n    }\n  }, {\n    key: \"_bindHandle\",\n    value: function _bindHandle(handle) {\n      this.gl.bindTransformFeedback(36386, this.handle);\n    }\n  }], [{\n    key: \"isSupported\",\n    value: function isSupported(gl) {\n      return isWebGL2(gl);\n    }\n  }]);\n\n  return TransformFeedback;\n}(Resource);\n\nexport { TransformFeedback as default };","map":{"version":3,"mappings":"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","names":["isWebGL2","assertWebGL2Context","log","Resource","Buffer","isObjectEmpty","TransformFeedback","constructor","gl","props","initialize","stubRemovedMethods","Object","seal","buffers","unused","configuration","bindOnUse","bind","_unbindBuffers","setProps","program","setBuffers","bufferName","setBuffer","locationOrName","bufferOrParams","location","_getVaryingIndex","_getBufferParams","buffer","byteSize","byteOffset","warn","id","_bindBuffer","begin","primitiveMode","bindTransformFeedback","handle","_bindBuffers","beginTransformFeedback","end","endTransformFeedback","undefined","byteLength","_getVaryingInfo","getVaryingInfo","Number","isFinite","bufferIndex","index","bindBufferBase","bindBufferRange","_createHandle","createTransformFeedback","_deleteHandle","deleteTransformFeedback","_bindHandle"],"sources":["../../../src/classes/transform-feedback.js"],"sourcesContent":["import GL from '@luma.gl/constants';\nimport {isWebGL2, assertWebGL2Context, log} from '@luma.gl/gltools';\nimport Resource from './resource';\nimport Buffer from './buffer';\nimport {isObjectEmpty} from '../utils/utils';\n\n// NOTE: The `bindOnUse` flag is a major workaround:\n// See https://github.com/KhronosGroup/WebGL/issues/2346\n\nexport default class TransformFeedback extends Resource {\n  static isSupported(gl) {\n    return isWebGL2(gl);\n  }\n\n  constructor(gl, props = {}) {\n    assertWebGL2Context(gl);\n    super(gl, props);\n\n    this.initialize(props);\n    this.stubRemovedMethods('TransformFeedback', 'v6.0', ['pause', 'resume']);\n    Object.seal(this);\n  }\n\n  initialize(props = {}) {\n    this.buffers = {};\n    this.unused = {};\n    this.configuration = null;\n    this.bindOnUse = true;\n\n    // Unbind any currently bound buffers\n    if (!isObjectEmpty(this.buffers)) {\n      this.bind(() => this._unbindBuffers());\n    }\n\n    this.setProps(props);\n    return this;\n  }\n\n  setProps(props) {\n    if ('program' in props) {\n      this.configuration = props.program && props.program.configuration;\n    }\n    if ('configuration' in props) {\n      this.configuration = props.configuration;\n    }\n    if ('bindOnUse' in props) {\n      props = props.bindOnUse;\n    }\n    if ('buffers' in props) {\n      this.setBuffers(props.buffers);\n    }\n  }\n\n  setBuffers(buffers = {}) {\n    this.bind(() => {\n      for (const bufferName in buffers) {\n        this.setBuffer(bufferName, buffers[bufferName]);\n      }\n    });\n    return this;\n  }\n\n  setBuffer(locationOrName, bufferOrParams) {\n    const location = this._getVaryingIndex(locationOrName);\n    const {buffer, byteSize, byteOffset} = this._getBufferParams(bufferOrParams);\n\n    if (location < 0) {\n      this.unused[locationOrName] = buffer;\n      log.warn(() => `${this.id} unused varying buffer ${locationOrName}`)();\n      return this;\n    }\n\n    this.buffers[location] = bufferOrParams;\n\n    // Need to avoid chrome bug where buffer that is already bound to a different target\n    // cannot be bound to 'TRANSFORM_FEEDBACK_BUFFER' target.\n    if (!this.bindOnUse) {\n      this._bindBuffer(location, buffer, byteOffset, byteSize);\n    }\n\n    return this;\n  }\n\n  begin(primitiveMode = GL.POINTS) {\n    // @ts-ignore\n    this.gl.bindTransformFeedback(GL.TRANSFORM_FEEDBACK, this.handle);\n    this._bindBuffers();\n    // @ts-ignore\n    this.gl.beginTransformFeedback(primitiveMode);\n    return this;\n  }\n\n  end() {\n    // @ts-ignore\n    this.gl.endTransformFeedback();\n    this._unbindBuffers();\n    // @ts-ignore\n    this.gl.bindTransformFeedback(GL.TRANSFORM_FEEDBACK, null);\n    return this;\n  }\n\n  // PRIVATE METHODS\n\n  _getBufferParams(bufferOrParams) {\n    let byteOffset;\n    let byteSize;\n    let buffer;\n    if (bufferOrParams instanceof Buffer === false) {\n      buffer = bufferOrParams.buffer;\n      byteSize = bufferOrParams.byteSize;\n      byteOffset = bufferOrParams.byteOffset;\n    } else {\n      buffer = bufferOrParams;\n    }\n    // to use bindBufferRange, either offset or size must be specified, use default value for the other.\n    if (byteOffset !== undefined || byteSize !== undefined) {\n      byteOffset = byteOffset || 0;\n      byteSize = byteSize || buffer.byteLength - byteOffset;\n    }\n    return {buffer, byteOffset, byteSize};\n  }\n\n  _getVaryingInfo(locationOrName) {\n    return this.configuration && this.configuration.getVaryingInfo(locationOrName);\n  }\n\n  _getVaryingIndex(locationOrName) {\n    if (this.configuration) {\n      return this.configuration.getVaryingInfo(locationOrName).location;\n    }\n    const location = Number(locationOrName);\n    return Number.isFinite(location) ? location : -1;\n  }\n\n  // Need to avoid chrome bug where buffer that is already bound to a different target\n  // cannot be bound to 'TRANSFORM_FEEDBACK_BUFFER' target.\n  _bindBuffers() {\n    if (this.bindOnUse) {\n      for (const bufferIndex in this.buffers) {\n        const {buffer, byteSize, byteOffset} = this._getBufferParams(this.buffers[bufferIndex]);\n        this._bindBuffer(bufferIndex, buffer, byteOffset, byteSize);\n      }\n    }\n  }\n\n  _unbindBuffers() {\n    if (this.bindOnUse) {\n      for (const bufferIndex in this.buffers) {\n        this._bindBuffer(bufferIndex, null);\n      }\n    }\n  }\n\n  _bindBuffer(index, buffer, byteOffset = 0, byteSize) {\n    const handle = buffer && buffer.handle;\n    if (!handle || byteSize === undefined) {\n      // @ts-ignore\n      this.gl.bindBufferBase(GL.TRANSFORM_FEEDBACK_BUFFER, index, handle);\n    } else {\n      // @ts-ignore\n      this.gl.bindBufferRange(GL.TRANSFORM_FEEDBACK_BUFFER, index, handle, byteOffset, byteSize);\n    }\n    return this;\n  }\n\n  // RESOURCE METHODS\n\n  _createHandle() {\n    // @ts-ignore\n    return this.gl.createTransformFeedback();\n  }\n\n  _deleteHandle() {\n    // @ts-ignore\n    this.gl.deleteTransformFeedback(this.handle);\n  }\n\n  _bindHandle(handle) {\n    // @ts-ignore\n    this.gl.bindTransformFeedback(GL.TRANSFORM_FEEDBACK, this.handle);\n  }\n}\n"]},"metadata":{},"sourceType":"module"}