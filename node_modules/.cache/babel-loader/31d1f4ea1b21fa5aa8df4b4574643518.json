{"ast":null,"code":"export function concatTypedArrays() {\n  let arrays = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  let byteLength = 0;\n\n  for (let i = 0; i < arrays.length; ++i) {\n    byteLength += arrays[i].byteLength;\n  }\n\n  const buffer = new Uint8Array(byteLength);\n  let byteOffset = 0;\n\n  for (let i = 0; i < arrays.length; ++i) {\n    const data = new Uint8Array(arrays[i].buffer);\n    byteLength = data.length;\n\n    for (let j = 0; j < byteLength; ++j) {\n      buffer[byteOffset++] = data[j];\n    }\n  }\n\n  return buffer;\n}","map":{"version":3,"mappings":"AAKA,OAAO,SAASA,iBAAT,GAAyD;EAAA,IAA9BC,MAA8B,uEAAhB,EAAgB;EAC9D,IAAIC,UAAU,GAAG,CAAjB;;EACA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,MAAM,CAACG,MAA3B,EAAmC,EAAED,CAArC,EAAwC;IACtCD,UAAU,IAAID,MAAM,CAACE,CAAD,CAANF,CAAUC,UAAxBA;EACD;;EACD,MAAMG,MAAM,GAAG,IAAIC,UAAJ,CAAeJ,UAAf,CAAf;EAEA,IAAIK,UAAU,GAAG,CAAjB;;EACA,KAAK,IAAIJ,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,MAAM,CAACG,MAA3B,EAAmC,EAAED,CAArC,EAAwC;IACtC,MAAMK,IAAI,GAAG,IAAIF,UAAJ,CAAeL,MAAM,CAACE,CAAD,CAANF,CAAUI,MAAzB,CAAb;IACAH,UAAU,GAAGM,IAAI,CAACJ,MAAlBF;;IACA,KAAK,IAAIO,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGP,UAApB,EAAgC,EAAEO,CAAlC,EAAqC;MACnCJ,MAAM,CAACE,UAAU,EAAX,CAANF,GAAuBG,IAAI,CAACC,CAAD,CAA3BJ;IACD;EACF;;EACD,OAAOA,MAAP;AACD","names":["concatTypedArrays","arrays","byteLength","i","length","buffer","Uint8Array","byteOffset","data","j"],"sources":["../../../../src/geometry/typed-arrays/typed-array-utils.ts"],"sourcesContent":["/**\n * Concats typed arrays\n * @param arrays\n * @returns new Uint8Array\n */\nexport function concatTypedArrays(arrays: any = []): Uint8Array {\n  let byteLength = 0;\n  for (let i = 0; i < arrays.length; ++i) {\n    byteLength += arrays[i].byteLength;\n  }\n  const buffer = new Uint8Array(byteLength);\n\n  let byteOffset = 0;\n  for (let i = 0; i < arrays.length; ++i) {\n    const data = new Uint8Array(arrays[i].buffer);\n    byteLength = data.length;\n    for (let j = 0; j < byteLength; ++j) {\n      buffer[byteOffset++] = data[j];\n    }\n  }\n  return buffer;\n}\n"]},"metadata":{},"sourceType":"module"}