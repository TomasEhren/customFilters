{"ast":null,"code":"import { selectSourceById } from '@carto/react-redux/';\nimport { useSelector } from 'react-redux';\nimport { useMemo } from 'react';\n/**\n * Obtain widget's filter values.\n *\n * @param  {object} props\n * @param  {string} props.dataSource - ID of the source to get the filters from.\n * @param  {string} props.id - ID of the widget that applied the filter.\n * @param  {string} props.column - name of column of this widget.\n * @param  {string} props.type - type of filter\n */\n\nexport function useWidgetFilterValues(_ref) {\n  let {\n    dataSource,\n    id,\n    column,\n    type\n  } = _ref;\n  const {\n    filters\n  } = useSelector(state => selectSourceById(state, dataSource) || {});\n  return useMemo(() => {\n    var _filters$column;\n\n    const filter = filters === null || filters === void 0 ? void 0 : (_filters$column = filters[column]) === null || _filters$column === void 0 ? void 0 : _filters$column[type];\n\n    if (!filter || filter.owner !== id) {\n      return null;\n    }\n\n    return filter.values;\n  }, [filters, column, type, id]);\n}","map":{"version":3,"names":["selectSourceById","useSelector","useMemo","useWidgetFilterValues","dataSource","id","column","type","filters","state","filter","owner","values"],"sources":["/Users/tomasehrenfeld/projs/se-team/tomas/react-apps/custom_filter/src/components/widgets/useWidgetFilterValues.js"],"sourcesContent":["import { selectSourceById } from '@carto/react-redux/';\nimport { useSelector } from 'react-redux';\nimport { useMemo } from 'react';\n\n/**\n * Obtain widget's filter values.\n *\n * @param  {object} props\n * @param  {string} props.dataSource - ID of the source to get the filters from.\n * @param  {string} props.id - ID of the widget that applied the filter.\n * @param  {string} props.column - name of column of this widget.\n * @param  {string} props.type - type of filter\n */\nexport function useWidgetFilterValues({ dataSource, id, column, type }) {\n  const { filters } = useSelector((state) => selectSourceById(state, dataSource) || {});\n\n  return useMemo(() => {\n    const filter = filters?.[column]?.[type];\n    if (!filter || filter.owner !== id) {\n      return null;\n    }\n    return filter.values;\n  }, [filters, column, type, id]);\n}\n"],"mappings":"AAAA,SAASA,gBAAT,QAAiC,qBAAjC;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,OAAT,QAAwB,OAAxB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASC,qBAAT,OAAiE;EAAA,IAAlC;IAAEC,UAAF;IAAcC,EAAd;IAAkBC,MAAlB;IAA0BC;EAA1B,CAAkC;EACtE,MAAM;IAAEC;EAAF,IAAcP,WAAW,CAAEQ,KAAD,IAAWT,gBAAgB,CAACS,KAAD,EAAQL,UAAR,CAAhB,IAAuC,EAAnD,CAA/B;EAEA,OAAOF,OAAO,CAAC,MAAM;IAAA;;IACnB,MAAMQ,MAAM,GAAGF,OAAH,aAAGA,OAAH,0CAAGA,OAAO,CAAGF,MAAH,CAAV,oDAAG,gBAAoBC,IAApB,CAAf;;IACA,IAAI,CAACG,MAAD,IAAWA,MAAM,CAACC,KAAP,KAAiBN,EAAhC,EAAoC;MAClC,OAAO,IAAP;IACD;;IACD,OAAOK,MAAM,CAACE,MAAd;EACD,CANa,EAMX,CAACJ,OAAD,EAAUF,MAAV,EAAkBC,IAAlB,EAAwBF,EAAxB,CANW,CAAd;AAOD"},"metadata":{},"sourceType":"module"}