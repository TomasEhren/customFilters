{"ast":null,"code":"import _defineProperty from \"/Users/tomasehrenfeld/projs/se-team/tomas/react-apps/custom_filter/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _classCallCheck from \"/Users/tomasehrenfeld/projs/se-team/tomas/react-apps/custom_filter/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/tomasehrenfeld/projs/se-team/tomas/react-apps/custom_filter/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { Texture2D, TextureCube } from '@luma.gl/webgl';\nimport { loadImage } from '@loaders.gl/images';\n\nvar GLTFEnvironment = /*#__PURE__*/function () {\n  function GLTFEnvironment(gl, _ref) {\n    var brdfLutUrl = _ref.brdfLutUrl,\n        getTexUrl = _ref.getTexUrl,\n        _ref$specularMipLevel = _ref.specularMipLevels,\n        specularMipLevels = _ref$specularMipLevel === void 0 ? 10 : _ref$specularMipLevel;\n\n    _classCallCheck(this, GLTFEnvironment);\n\n    this.gl = gl;\n    this.brdfLutUrl = brdfLutUrl;\n    this.getTexUrl = getTexUrl;\n    this.specularMipLevels = specularMipLevels;\n  }\n\n  _createClass(GLTFEnvironment, [{\n    key: \"makeCube\",\n    value: function makeCube(_ref2) {\n      var id = _ref2.id,\n          getTextureForFace = _ref2.getTextureForFace,\n          parameters = _ref2.parameters;\n      var pixels = {};\n      TextureCube.FACES.forEach(function (face) {\n        pixels[face] = getTextureForFace(face);\n      });\n      return new TextureCube(this.gl, {\n        id: id,\n        mipmaps: false,\n        parameters: parameters,\n        pixels: pixels\n      });\n    }\n  }, {\n    key: \"getDiffuseEnvSampler\",\n    value: function getDiffuseEnvSampler() {\n      var _this = this;\n\n      if (!this._DiffuseEnvSampler) {\n        var _parameters;\n\n        this._DiffuseEnvSampler = this.makeCube({\n          id: 'DiffuseEnvSampler',\n          getTextureForFace: function getTextureForFace(dir) {\n            return loadImage(_this.getTexUrl('diffuse', dir, 0));\n          },\n          parameters: (_parameters = {}, _defineProperty(_parameters, 10242, 33071), _defineProperty(_parameters, 10243, 33071), _defineProperty(_parameters, 10241, 9729), _defineProperty(_parameters, 10240, 9729), _parameters)\n        });\n      }\n\n      return this._DiffuseEnvSampler;\n    }\n  }, {\n    key: \"getSpecularEnvSampler\",\n    value: function getSpecularEnvSampler() {\n      var _this2 = this;\n\n      if (!this._SpecularEnvSampler) {\n        var _parameters2;\n\n        this._SpecularEnvSampler = this.makeCube({\n          id: 'SpecularEnvSampler',\n          getTextureForFace: function getTextureForFace(dir) {\n            var imageArray = [];\n\n            for (var lod = 0; lod <= _this2.specularMipLevels - 1; lod++) {\n              imageArray.push(loadImage(_this2.getTexUrl('specular', dir, lod)));\n            }\n\n            return imageArray;\n          },\n          parameters: (_parameters2 = {}, _defineProperty(_parameters2, 10242, 33071), _defineProperty(_parameters2, 10243, 33071), _defineProperty(_parameters2, 10241, 9987), _defineProperty(_parameters2, 10240, 9729), _parameters2)\n        });\n      }\n\n      return this._SpecularEnvSampler;\n    }\n  }, {\n    key: \"getBrdfTexture\",\n    value: function getBrdfTexture() {\n      if (!this._BrdfTexture) {\n        var _parameters3;\n\n        this._BrdfTexture = new Texture2D(this.gl, {\n          id: 'brdfLUT',\n          parameters: (_parameters3 = {}, _defineProperty(_parameters3, 10242, 33071), _defineProperty(_parameters3, 10243, 33071), _defineProperty(_parameters3, 10241, 9729), _defineProperty(_parameters3, 10240, 9729), _parameters3),\n          data: loadImage(this.brdfLutUrl)\n        });\n      }\n\n      return this._BrdfTexture;\n    }\n  }, {\n    key: \"delete\",\n    value: function _delete() {\n      if (this._DiffuseEnvSampler) {\n        this._DiffuseEnvSampler.delete();\n\n        this._DiffuseEnvSampler = null;\n      }\n\n      if (this._SpecularEnvSampler) {\n        this._SpecularEnvSampler.delete();\n\n        this._SpecularEnvSampler = null;\n      }\n\n      if (this._BrdfTexture) {\n        this._BrdfTexture.delete();\n\n        this._BrdfTexture = null;\n      }\n    }\n  }]);\n\n  return GLTFEnvironment;\n}();\n\nexport { GLTFEnvironment as default };","map":{"version":3,"mappings":";;;AACA,SAAQA,SAAR,EAAmBC,WAAnB,QAAqC,gBAArC;AACA,SAAQC,SAAR,QAAwB,oBAAxB;;IAEqBC,e;EACnBC,yBAAYC,EAAZD,QAAiE;IAAA,IAAhDE,UAAgD,QAAhDA,UAAgD;IAAA,IAApCC,SAAoC,QAApCA,SAAoC;IAAA,iCAAzBC,iBAAyB;IAAA,IAAzBA,iBAAyB,sCAAL,EAAK;;IAAA;;IAC/D,KAAKH,EAAL,GAAUA,EAAV;IACA,KAAKC,UAAL,GAAkBA,UAAlB;IACA,KAAKC,SAAL,GAAiBA,SAAjB;IACA,KAAKC,iBAAL,GAAyBA,iBAAzB;EACD;;;;WAEDC,yBAA8C;MAAA,IAApCC,EAAoC,SAApCA,EAAoC;MAAA,IAAhCC,iBAAgC,SAAhCA,iBAAgC;MAAA,IAAbC,UAAa,SAAbA,UAAa;MAC5C,IAAMC,MAAM,GAAG,EAAf;MACAZ,WAAW,CAACa,KAAZb,CAAkBc,OAAlBd,CAA0Be,cAAI,EAAI;QAChCH,MAAM,CAACG,IAAD,CAANH,GAAeF,iBAAiB,CAACK,IAAD,CAAhCH;MADF;MAGA,OAAO,IAAIZ,WAAJ,CAAgB,KAAKI,EAArB,EAAyB;QAC9BK,EAD8B,EAC9BA,EAD8B;QAE9BO,OAAO,EAAE,KAFqB;QAG9BL,UAH8B,EAG9BA,UAH8B;QAI9BC;MAJ8B,CAAzB,CAAP;IAMD;;;WAEDK,gCAAuB;MAAA;;MACrB,IAAI,CAAC,KAAKC,kBAAV,EAA8B;QAAA;;QAC5B,KAAKA,kBAAL,GAA0B,KAAKV,QAAL,CAAc;UACtCC,EAAE,EAAE,mBADkC;UAEtCC,iBAAiB,EAAES,8BAAG;YAAA,OAAIlB,SAAS,CAAC,MAAKK,SAAL,CAAe,SAAf,EAA0Ba,GAA1B,EAA+B,CAA/B,CAAD,CAAb;UAAA,CAFgB;UAGtCR,UAAU,kDACR,KADQ,EACR,KADQ,gCAER,KAFQ,EAER,KAFQ,gCAGR,KAHQ,EAGR,IAHQ,gCAIR,KAJQ,EAIR,IAJQ;QAH4B,CAAd,CAA1B;MAUD;;MAED,OAAO,KAAKO,kBAAZ;IACD;;;WAEDE,iCAAwB;MAAA;;MACtB,IAAI,CAAC,KAAKC,mBAAV,EAA+B;QAAA;;QAC7B,KAAKA,mBAAL,GAA2B,KAAKb,QAAL,CAAc;UACvCC,EAAE,EAAE,oBADmC;UAEvCC,iBAAiB,EAAES,8BAAG,EAAI;YACxB,IAAMG,UAAU,GAAG,EAAnB;;YACA,KAAK,IAAIC,GAAG,GAAG,CAAf,EAAkBA,GAAG,IAAI,OAAKhB,iBAAL,GAAyB,CAAlD,EAAqDgB,GAAG,EAAxD,EAA4D;cAC1DD,UAAU,CAACE,IAAXF,CAAgBrB,SAAS,CAAC,OAAKK,SAAL,CAAe,UAAf,EAA2Ba,GAA3B,EAAgCI,GAAhC,CAAD,CAAzBD;YACD;;YACD,OAAOA,UAAP;UAPqC;UASvCX,UAAU,oDACR,KADQ,EACR,KADQ,iCAER,KAFQ,EAER,KAFQ,iCAGR,KAHQ,EAGR,IAHQ,iCAIR,KAJQ,EAIR,IAJQ;QAT6B,CAAd,CAA3B;MAgBD;;MAED,OAAO,KAAKU,mBAAZ;IACD;;;WAEDI,0BAAiB;MACf,IAAI,CAAC,KAAKC,YAAV,EAAwB;QAAA;;QACtB,KAAKA,YAAL,GAAoB,IAAI3B,SAAJ,CAAc,KAAKK,EAAnB,EAAuB;UACzCK,EAAE,EAAE,SADqC;UAEzCE,UAAU,oDACR,KADQ,EACR,KADQ,iCAER,KAFQ,EAER,KAFQ,iCAGR,KAHQ,EAGR,IAHQ,iCAIR,KAJQ,EAIR,IAJQ,gBAF+B;UASzCgB,IAAI,EAAE1B,SAAS,CAAC,KAAKI,UAAN;QAT0B,CAAvB,CAApB;MAWD;;MAED,OAAO,KAAKqB,YAAZ;IACD;;;WAEDE,mBAAS;MACP,IAAI,KAAKV,kBAAT,EAA6B;QAC3B,KAAKA,kBAAL,CAAwBU,MAAxB;;QACA,KAAKV,kBAAL,GAA0B,IAA1B;MACD;;MAED,IAAI,KAAKG,mBAAT,EAA8B;QAC5B,KAAKA,mBAAL,CAAyBO,MAAzB;;QACA,KAAKP,mBAAL,GAA2B,IAA3B;MACD;;MAED,IAAI,KAAKK,YAAT,EAAuB;QACrB,KAAKA,YAAL,CAAkBE,MAAlB;;QACA,KAAKF,YAAL,GAAoB,IAApB;MACD;IACF;;;;;;SA9FkBxB,e","names":["Texture2D","TextureCube","loadImage","GLTFEnvironment","constructor","gl","brdfLutUrl","getTexUrl","specularMipLevels","makeCube","id","getTextureForFace","parameters","pixels","FACES","forEach","face","mipmaps","getDiffuseEnvSampler","_DiffuseEnvSampler","dir","getSpecularEnvSampler","_SpecularEnvSampler","imageArray","lod","push","getBrdfTexture","_BrdfTexture","data","delete"],"sources":["../../../src/gltf/gltf-environment.js"],"sourcesContent":["import GL from '@luma.gl/constants';\nimport {Texture2D, TextureCube} from '@luma.gl/webgl';\nimport {loadImage} from '@loaders.gl/images';\n\nexport default class GLTFEnvironment {\n  constructor(gl, {brdfLutUrl, getTexUrl, specularMipLevels = 10}) {\n    this.gl = gl;\n    this.brdfLutUrl = brdfLutUrl;\n    this.getTexUrl = getTexUrl;\n    this.specularMipLevels = specularMipLevels;\n  }\n\n  makeCube({id, getTextureForFace, parameters}) {\n    const pixels = {};\n    TextureCube.FACES.forEach(face => {\n      pixels[face] = getTextureForFace(face);\n    });\n    return new TextureCube(this.gl, {\n      id,\n      mipmaps: false,\n      parameters,\n      pixels\n    });\n  }\n\n  getDiffuseEnvSampler() {\n    if (!this._DiffuseEnvSampler) {\n      this._DiffuseEnvSampler = this.makeCube({\n        id: 'DiffuseEnvSampler',\n        getTextureForFace: dir => loadImage(this.getTexUrl('diffuse', dir, 0)),\n        parameters: {\n          [GL.TEXTURE_WRAP_S]: GL.CLAMP_TO_EDGE,\n          [GL.TEXTURE_WRAP_T]: GL.CLAMP_TO_EDGE,\n          [GL.TEXTURE_MIN_FILTER]: GL.LINEAR,\n          [GL.TEXTURE_MAG_FILTER]: GL.LINEAR\n        }\n      });\n    }\n\n    return this._DiffuseEnvSampler;\n  }\n\n  getSpecularEnvSampler() {\n    if (!this._SpecularEnvSampler) {\n      this._SpecularEnvSampler = this.makeCube({\n        id: 'SpecularEnvSampler',\n        getTextureForFace: dir => {\n          const imageArray = [];\n          for (let lod = 0; lod <= this.specularMipLevels - 1; lod++) {\n            imageArray.push(loadImage(this.getTexUrl('specular', dir, lod)));\n          }\n          return imageArray;\n        },\n        parameters: {\n          [GL.TEXTURE_WRAP_S]: GL.CLAMP_TO_EDGE,\n          [GL.TEXTURE_WRAP_T]: GL.CLAMP_TO_EDGE,\n          [GL.TEXTURE_MIN_FILTER]: GL.LINEAR_MIPMAP_LINEAR,\n          [GL.TEXTURE_MAG_FILTER]: GL.LINEAR\n        }\n      });\n    }\n\n    return this._SpecularEnvSampler;\n  }\n\n  getBrdfTexture() {\n    if (!this._BrdfTexture) {\n      this._BrdfTexture = new Texture2D(this.gl, {\n        id: 'brdfLUT',\n        parameters: {\n          [GL.TEXTURE_WRAP_S]: GL.CLAMP_TO_EDGE,\n          [GL.TEXTURE_WRAP_T]: GL.CLAMP_TO_EDGE,\n          [GL.TEXTURE_MIN_FILTER]: GL.LINEAR,\n          [GL.TEXTURE_MAG_FILTER]: GL.LINEAR\n        },\n        // Texture2D accepts a promise that returns an image as data (Async Textures)\n        data: loadImage(this.brdfLutUrl)\n      });\n    }\n\n    return this._BrdfTexture;\n  }\n\n  delete() {\n    if (this._DiffuseEnvSampler) {\n      this._DiffuseEnvSampler.delete();\n      this._DiffuseEnvSampler = null;\n    }\n\n    if (this._SpecularEnvSampler) {\n      this._SpecularEnvSampler.delete();\n      this._SpecularEnvSampler = null;\n    }\n\n    if (this._BrdfTexture) {\n      this._BrdfTexture.delete();\n      this._BrdfTexture = null;\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}