{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.parseUnicodeLocaleId = exports.parseUnicodeLanguageId = exports.isUnicodeVariantSubtag = exports.isUnicodeScriptSubtag = exports.isUnicodeRegionSubtag = exports.isStructurallyValidLanguageTag = exports.isUnicodeLanguageSubtag = exports.SEPARATOR = void 0;\n\nvar tslib_1 = require(\"tslib\");\n\nvar ALPHANUM_1_8 = /^[a-z0-9]{1,8}$/i;\nvar ALPHANUM_2_8 = /^[a-z0-9]{2,8}$/i;\nvar ALPHANUM_3_8 = /^[a-z0-9]{3,8}$/i;\nvar KEY_REGEX = /^[a-z0-9][a-z]$/i;\nvar TYPE_REGEX = /^[a-z0-9]{3,8}$/i;\nvar ALPHA_4 = /^[a-z]{4}$/i; // alphanum-[tTuUxX]\n\nvar OTHER_EXTENSION_TYPE = /^[0-9a-svwyz]$/i;\nvar UNICODE_REGION_SUBTAG_REGEX = /^([a-z]{2}|[0-9]{3})$/i;\nvar UNICODE_VARIANT_SUBTAG_REGEX = /^([a-z0-9]{5,8}|[0-9][a-z0-9]{3})$/i;\nvar UNICODE_LANGUAGE_SUBTAG_REGEX = /^([a-z]{2,3}|[a-z]{5,8})$/i;\nvar TKEY_REGEX = /^[a-z][0-9]$/i;\nexports.SEPARATOR = '-';\n\nfunction isUnicodeLanguageSubtag(lang) {\n  return UNICODE_LANGUAGE_SUBTAG_REGEX.test(lang);\n}\n\nexports.isUnicodeLanguageSubtag = isUnicodeLanguageSubtag;\n\nfunction isStructurallyValidLanguageTag(tag) {\n  try {\n    parseUnicodeLanguageId(tag.split(exports.SEPARATOR));\n  } catch (e) {\n    return false;\n  }\n\n  return true;\n}\n\nexports.isStructurallyValidLanguageTag = isStructurallyValidLanguageTag;\n\nfunction isUnicodeRegionSubtag(region) {\n  return UNICODE_REGION_SUBTAG_REGEX.test(region);\n}\n\nexports.isUnicodeRegionSubtag = isUnicodeRegionSubtag;\n\nfunction isUnicodeScriptSubtag(script) {\n  return ALPHA_4.test(script);\n}\n\nexports.isUnicodeScriptSubtag = isUnicodeScriptSubtag;\n\nfunction isUnicodeVariantSubtag(variant) {\n  return UNICODE_VARIANT_SUBTAG_REGEX.test(variant);\n}\n\nexports.isUnicodeVariantSubtag = isUnicodeVariantSubtag;\n\nfunction parseUnicodeLanguageId(chunks) {\n  if (typeof chunks === 'string') {\n    chunks = chunks.split(exports.SEPARATOR);\n  }\n\n  var lang = chunks.shift();\n\n  if (!lang) {\n    throw new RangeError('Missing unicode_language_subtag');\n  }\n\n  if (lang === 'root') {\n    return {\n      lang: 'root',\n      variants: []\n    };\n  } // unicode_language_subtag\n\n\n  if (!isUnicodeLanguageSubtag(lang)) {\n    throw new RangeError('Malformed unicode_language_subtag');\n  }\n\n  var script; // unicode_script_subtag\n\n  if (chunks.length && isUnicodeScriptSubtag(chunks[0])) {\n    script = chunks.shift();\n  }\n\n  var region; // unicode_region_subtag\n\n  if (chunks.length && isUnicodeRegionSubtag(chunks[0])) {\n    region = chunks.shift();\n  }\n\n  var variants = {};\n\n  while (chunks.length && isUnicodeVariantSubtag(chunks[0])) {\n    var variant = chunks.shift();\n\n    if (variant in variants) {\n      throw new RangeError(\"Duplicate variant \\\"\".concat(variant, \"\\\"\"));\n    }\n\n    variants[variant] = 1;\n  }\n\n  return {\n    lang: lang,\n    script: script,\n    region: region,\n    variants: Object.keys(variants)\n  };\n}\n\nexports.parseUnicodeLanguageId = parseUnicodeLanguageId;\n\nfunction parseUnicodeExtension(chunks) {\n  var keywords = [];\n  var keyword;\n\n  while (chunks.length && (keyword = parseKeyword(chunks))) {\n    keywords.push(keyword);\n  }\n\n  if (keywords.length) {\n    return {\n      type: 'u',\n      keywords: keywords,\n      attributes: []\n    };\n  } // Mix of attributes & keywords\n  // Check for attributes first\n\n\n  var attributes = [];\n\n  while (chunks.length && ALPHANUM_3_8.test(chunks[0])) {\n    attributes.push(chunks.shift());\n  }\n\n  while (chunks.length && (keyword = parseKeyword(chunks))) {\n    keywords.push(keyword);\n  }\n\n  if (keywords.length || attributes.length) {\n    return {\n      type: 'u',\n      attributes: attributes,\n      keywords: keywords\n    };\n  }\n\n  throw new RangeError('Malformed unicode_extension');\n}\n\nfunction parseKeyword(chunks) {\n  var key;\n\n  if (!KEY_REGEX.test(chunks[0])) {\n    return;\n  }\n\n  key = chunks.shift();\n  var type = [];\n\n  while (chunks.length && TYPE_REGEX.test(chunks[0])) {\n    type.push(chunks.shift());\n  }\n\n  var value = '';\n\n  if (type.length) {\n    value = type.join(exports.SEPARATOR);\n  }\n\n  return [key, value];\n}\n\nfunction parseTransformedExtension(chunks) {\n  var lang;\n\n  try {\n    lang = parseUnicodeLanguageId(chunks);\n  } catch (e) {// Try just parsing tfield\n  }\n\n  var fields = [];\n\n  while (chunks.length && TKEY_REGEX.test(chunks[0])) {\n    var key = chunks.shift();\n    var value = [];\n\n    while (chunks.length && ALPHANUM_3_8.test(chunks[0])) {\n      value.push(chunks.shift());\n    }\n\n    if (!value.length) {\n      throw new RangeError(\"Missing tvalue for tkey \\\"\".concat(key, \"\\\"\"));\n    }\n\n    fields.push([key, value.join(exports.SEPARATOR)]);\n  }\n\n  if (fields.length) {\n    return {\n      type: 't',\n      fields: fields,\n      lang: lang\n    };\n  }\n\n  throw new RangeError('Malformed transformed_extension');\n}\n\nfunction parsePuExtension(chunks) {\n  var exts = [];\n\n  while (chunks.length && ALPHANUM_1_8.test(chunks[0])) {\n    exts.push(chunks.shift());\n  }\n\n  if (exts.length) {\n    return {\n      type: 'x',\n      value: exts.join(exports.SEPARATOR)\n    };\n  }\n\n  throw new RangeError('Malformed private_use_extension');\n}\n\nfunction parseOtherExtensionValue(chunks) {\n  var exts = [];\n\n  while (chunks.length && ALPHANUM_2_8.test(chunks[0])) {\n    exts.push(chunks.shift());\n  }\n\n  if (exts.length) {\n    return exts.join(exports.SEPARATOR);\n  }\n\n  return '';\n}\n\nfunction parseExtensions(chunks) {\n  if (!chunks.length) {\n    return {\n      extensions: []\n    };\n  }\n\n  var extensions = [];\n  var unicodeExtension;\n  var transformedExtension;\n  var puExtension;\n  var otherExtensionMap = {};\n\n  do {\n    var type = chunks.shift();\n\n    switch (type) {\n      case 'u':\n      case 'U':\n        if (unicodeExtension) {\n          throw new RangeError('There can only be 1 -u- extension');\n        }\n\n        unicodeExtension = parseUnicodeExtension(chunks);\n        extensions.push(unicodeExtension);\n        break;\n\n      case 't':\n      case 'T':\n        if (transformedExtension) {\n          throw new RangeError('There can only be 1 -t- extension');\n        }\n\n        transformedExtension = parseTransformedExtension(chunks);\n        extensions.push(transformedExtension);\n        break;\n\n      case 'x':\n      case 'X':\n        if (puExtension) {\n          throw new RangeError('There can only be 1 -x- extension');\n        }\n\n        puExtension = parsePuExtension(chunks);\n        extensions.push(puExtension);\n        break;\n\n      default:\n        if (!OTHER_EXTENSION_TYPE.test(type)) {\n          throw new RangeError('Malformed extension type');\n        }\n\n        if (type in otherExtensionMap) {\n          throw new RangeError(\"There can only be 1 -\".concat(type, \"- extension\"));\n        }\n\n        var extension = {\n          type: type,\n          value: parseOtherExtensionValue(chunks)\n        };\n        otherExtensionMap[extension.type] = extension;\n        extensions.push(extension);\n        break;\n    }\n  } while (chunks.length);\n\n  return {\n    extensions: extensions\n  };\n}\n\nfunction parseUnicodeLocaleId(locale) {\n  var chunks = locale.split(exports.SEPARATOR);\n  var lang = parseUnicodeLanguageId(chunks);\n  return (0, tslib_1.__assign)({\n    lang: lang\n  }, parseExtensions(chunks));\n}\n\nexports.parseUnicodeLocaleId = parseUnicodeLocaleId;","map":{"version":3,"names":["Object","defineProperty","exports","value","parseUnicodeLocaleId","parseUnicodeLanguageId","isUnicodeVariantSubtag","isUnicodeScriptSubtag","isUnicodeRegionSubtag","isStructurallyValidLanguageTag","isUnicodeLanguageSubtag","SEPARATOR","tslib_1","require","ALPHANUM_1_8","ALPHANUM_2_8","ALPHANUM_3_8","KEY_REGEX","TYPE_REGEX","ALPHA_4","OTHER_EXTENSION_TYPE","UNICODE_REGION_SUBTAG_REGEX","UNICODE_VARIANT_SUBTAG_REGEX","UNICODE_LANGUAGE_SUBTAG_REGEX","TKEY_REGEX","lang","test","tag","split","e","region","script","variant","chunks","shift","RangeError","variants","length","concat","keys","parseUnicodeExtension","keywords","keyword","parseKeyword","push","type","attributes","key","join","parseTransformedExtension","fields","parsePuExtension","exts","parseOtherExtensionValue","parseExtensions","extensions","unicodeExtension","transformedExtension","puExtension","otherExtensionMap","extension","locale","__assign"],"sources":["/Users/tomasehrenfeld/projs/se-team/tomas/react-apps/custom_filter/node_modules/@formatjs/intl-getcanonicallocales/src/parser.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.parseUnicodeLocaleId = exports.parseUnicodeLanguageId = exports.isUnicodeVariantSubtag = exports.isUnicodeScriptSubtag = exports.isUnicodeRegionSubtag = exports.isStructurallyValidLanguageTag = exports.isUnicodeLanguageSubtag = exports.SEPARATOR = void 0;\nvar tslib_1 = require(\"tslib\");\nvar ALPHANUM_1_8 = /^[a-z0-9]{1,8}$/i;\nvar ALPHANUM_2_8 = /^[a-z0-9]{2,8}$/i;\nvar ALPHANUM_3_8 = /^[a-z0-9]{3,8}$/i;\nvar KEY_REGEX = /^[a-z0-9][a-z]$/i;\nvar TYPE_REGEX = /^[a-z0-9]{3,8}$/i;\nvar ALPHA_4 = /^[a-z]{4}$/i;\n// alphanum-[tTuUxX]\nvar OTHER_EXTENSION_TYPE = /^[0-9a-svwyz]$/i;\nvar UNICODE_REGION_SUBTAG_REGEX = /^([a-z]{2}|[0-9]{3})$/i;\nvar UNICODE_VARIANT_SUBTAG_REGEX = /^([a-z0-9]{5,8}|[0-9][a-z0-9]{3})$/i;\nvar UNICODE_LANGUAGE_SUBTAG_REGEX = /^([a-z]{2,3}|[a-z]{5,8})$/i;\nvar TKEY_REGEX = /^[a-z][0-9]$/i;\nexports.SEPARATOR = '-';\nfunction isUnicodeLanguageSubtag(lang) {\n    return UNICODE_LANGUAGE_SUBTAG_REGEX.test(lang);\n}\nexports.isUnicodeLanguageSubtag = isUnicodeLanguageSubtag;\nfunction isStructurallyValidLanguageTag(tag) {\n    try {\n        parseUnicodeLanguageId(tag.split(exports.SEPARATOR));\n    }\n    catch (e) {\n        return false;\n    }\n    return true;\n}\nexports.isStructurallyValidLanguageTag = isStructurallyValidLanguageTag;\nfunction isUnicodeRegionSubtag(region) {\n    return UNICODE_REGION_SUBTAG_REGEX.test(region);\n}\nexports.isUnicodeRegionSubtag = isUnicodeRegionSubtag;\nfunction isUnicodeScriptSubtag(script) {\n    return ALPHA_4.test(script);\n}\nexports.isUnicodeScriptSubtag = isUnicodeScriptSubtag;\nfunction isUnicodeVariantSubtag(variant) {\n    return UNICODE_VARIANT_SUBTAG_REGEX.test(variant);\n}\nexports.isUnicodeVariantSubtag = isUnicodeVariantSubtag;\nfunction parseUnicodeLanguageId(chunks) {\n    if (typeof chunks === 'string') {\n        chunks = chunks.split(exports.SEPARATOR);\n    }\n    var lang = chunks.shift();\n    if (!lang) {\n        throw new RangeError('Missing unicode_language_subtag');\n    }\n    if (lang === 'root') {\n        return { lang: 'root', variants: [] };\n    }\n    // unicode_language_subtag\n    if (!isUnicodeLanguageSubtag(lang)) {\n        throw new RangeError('Malformed unicode_language_subtag');\n    }\n    var script;\n    // unicode_script_subtag\n    if (chunks.length && isUnicodeScriptSubtag(chunks[0])) {\n        script = chunks.shift();\n    }\n    var region;\n    // unicode_region_subtag\n    if (chunks.length && isUnicodeRegionSubtag(chunks[0])) {\n        region = chunks.shift();\n    }\n    var variants = {};\n    while (chunks.length && isUnicodeVariantSubtag(chunks[0])) {\n        var variant = chunks.shift();\n        if (variant in variants) {\n            throw new RangeError(\"Duplicate variant \\\"\".concat(variant, \"\\\"\"));\n        }\n        variants[variant] = 1;\n    }\n    return {\n        lang: lang,\n        script: script,\n        region: region,\n        variants: Object.keys(variants),\n    };\n}\nexports.parseUnicodeLanguageId = parseUnicodeLanguageId;\nfunction parseUnicodeExtension(chunks) {\n    var keywords = [];\n    var keyword;\n    while (chunks.length && (keyword = parseKeyword(chunks))) {\n        keywords.push(keyword);\n    }\n    if (keywords.length) {\n        return {\n            type: 'u',\n            keywords: keywords,\n            attributes: [],\n        };\n    }\n    // Mix of attributes & keywords\n    // Check for attributes first\n    var attributes = [];\n    while (chunks.length && ALPHANUM_3_8.test(chunks[0])) {\n        attributes.push(chunks.shift());\n    }\n    while (chunks.length && (keyword = parseKeyword(chunks))) {\n        keywords.push(keyword);\n    }\n    if (keywords.length || attributes.length) {\n        return {\n            type: 'u',\n            attributes: attributes,\n            keywords: keywords,\n        };\n    }\n    throw new RangeError('Malformed unicode_extension');\n}\nfunction parseKeyword(chunks) {\n    var key;\n    if (!KEY_REGEX.test(chunks[0])) {\n        return;\n    }\n    key = chunks.shift();\n    var type = [];\n    while (chunks.length && TYPE_REGEX.test(chunks[0])) {\n        type.push(chunks.shift());\n    }\n    var value = '';\n    if (type.length) {\n        value = type.join(exports.SEPARATOR);\n    }\n    return [key, value];\n}\nfunction parseTransformedExtension(chunks) {\n    var lang;\n    try {\n        lang = parseUnicodeLanguageId(chunks);\n    }\n    catch (e) {\n        // Try just parsing tfield\n    }\n    var fields = [];\n    while (chunks.length && TKEY_REGEX.test(chunks[0])) {\n        var key = chunks.shift();\n        var value = [];\n        while (chunks.length && ALPHANUM_3_8.test(chunks[0])) {\n            value.push(chunks.shift());\n        }\n        if (!value.length) {\n            throw new RangeError(\"Missing tvalue for tkey \\\"\".concat(key, \"\\\"\"));\n        }\n        fields.push([key, value.join(exports.SEPARATOR)]);\n    }\n    if (fields.length) {\n        return {\n            type: 't',\n            fields: fields,\n            lang: lang,\n        };\n    }\n    throw new RangeError('Malformed transformed_extension');\n}\nfunction parsePuExtension(chunks) {\n    var exts = [];\n    while (chunks.length && ALPHANUM_1_8.test(chunks[0])) {\n        exts.push(chunks.shift());\n    }\n    if (exts.length) {\n        return {\n            type: 'x',\n            value: exts.join(exports.SEPARATOR),\n        };\n    }\n    throw new RangeError('Malformed private_use_extension');\n}\nfunction parseOtherExtensionValue(chunks) {\n    var exts = [];\n    while (chunks.length && ALPHANUM_2_8.test(chunks[0])) {\n        exts.push(chunks.shift());\n    }\n    if (exts.length) {\n        return exts.join(exports.SEPARATOR);\n    }\n    return '';\n}\nfunction parseExtensions(chunks) {\n    if (!chunks.length) {\n        return { extensions: [] };\n    }\n    var extensions = [];\n    var unicodeExtension;\n    var transformedExtension;\n    var puExtension;\n    var otherExtensionMap = {};\n    do {\n        var type = chunks.shift();\n        switch (type) {\n            case 'u':\n            case 'U':\n                if (unicodeExtension) {\n                    throw new RangeError('There can only be 1 -u- extension');\n                }\n                unicodeExtension = parseUnicodeExtension(chunks);\n                extensions.push(unicodeExtension);\n                break;\n            case 't':\n            case 'T':\n                if (transformedExtension) {\n                    throw new RangeError('There can only be 1 -t- extension');\n                }\n                transformedExtension = parseTransformedExtension(chunks);\n                extensions.push(transformedExtension);\n                break;\n            case 'x':\n            case 'X':\n                if (puExtension) {\n                    throw new RangeError('There can only be 1 -x- extension');\n                }\n                puExtension = parsePuExtension(chunks);\n                extensions.push(puExtension);\n                break;\n            default:\n                if (!OTHER_EXTENSION_TYPE.test(type)) {\n                    throw new RangeError('Malformed extension type');\n                }\n                if (type in otherExtensionMap) {\n                    throw new RangeError(\"There can only be 1 -\".concat(type, \"- extension\"));\n                }\n                var extension = {\n                    type: type,\n                    value: parseOtherExtensionValue(chunks),\n                };\n                otherExtensionMap[extension.type] = extension;\n                extensions.push(extension);\n                break;\n        }\n    } while (chunks.length);\n    return { extensions: extensions };\n}\nfunction parseUnicodeLocaleId(locale) {\n    var chunks = locale.split(exports.SEPARATOR);\n    var lang = parseUnicodeLanguageId(chunks);\n    return (0, tslib_1.__assign)({ lang: lang }, parseExtensions(chunks));\n}\nexports.parseUnicodeLocaleId = parseUnicodeLocaleId;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}