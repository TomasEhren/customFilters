{"ast":null,"code":"const KeyValueObject = {};\n\nKeyValueObject.read = function (pbf, end) {\n  return pbf.readFields(KeyValueObject._readField, {\n    key: '',\n    value: ''\n  }, end);\n};\n\nKeyValueObject._readField = function (tag, obj, pbf) {\n  if (tag === 1) obj.key = pbf.readString();else if (tag === 2) obj.value = pbf.readString();\n};\n\nconst Properties = {};\n\nProperties.read = function (pbf, end) {\n  return pbf.readFields(Properties._readField, {\n    data: []\n  }, end);\n};\n\nProperties._readField = function (tag, obj, pbf) {\n  if (tag === 1) obj.data.push(KeyValueObject.read(pbf, pbf.readVarint() + pbf.pos));\n};\n\nconst Doubles = {};\n\nDoubles.read = function (pbf, end) {\n  const {\n    value,\n    size\n  } = pbf.readFields(Doubles._readField, {\n    value: [],\n    size: 0\n  }, end);\n  return {\n    value: new Float32Array(value),\n    size\n  };\n};\n\nDoubles._readField = function (tag, obj, pbf) {\n  if (tag === 1) pbf.readPackedDouble(obj.value);else if (tag === 2) obj.size = pbf.readVarint(true);\n};\n\nconst Ints = {};\n\nInts.read = function (pbf, end) {\n  const {\n    value,\n    size\n  } = pbf.readFields(Ints._readField, {\n    value: [],\n    size: 0\n  }, end);\n  return {\n    value: new Uint32Array(value),\n    size\n  };\n};\n\nInts._readField = function (tag, obj, pbf) {\n  if (tag === 1) pbf.readPackedVarint(obj.value);else if (tag === 2) obj.size = pbf.readVarint(true);\n};\n\nconst NumericProp = {};\n\nNumericProp.read = function (pbf, end) {\n  return pbf.readFields(NumericProp._readField, {\n    value: []\n  }, end);\n};\n\nNumericProp._readField = function (tag, obj, pbf) {\n  if (tag === 1) pbf.readPackedDouble(obj.value);\n};\n\nconst NumericPropKeyValue = {};\n\nNumericPropKeyValue.read = function (pbf, end) {\n  return pbf.readFields(NumericPropKeyValue._readField, {\n    key: '',\n    value: null\n  }, end);\n};\n\nNumericPropKeyValue._readField = function (tag, obj, pbf) {\n  if (tag === 1) obj.key = pbf.readString();else if (tag === 2) obj.value = NumericProp.read(pbf, pbf.readVarint() + pbf.pos);\n};\n\nNumericProp._FieldEntry1 = {};\n\nNumericProp._FieldEntry1.read = function (pbf, end) {\n  return pbf.readFields(NumericProp._FieldEntry1._readField, {\n    key: '',\n    value: 0\n  }, end);\n};\n\nNumericProp._FieldEntry1._readField = function (tag, obj, pbf) {\n  if (tag === 1) obj.key = pbf.readString();else if (tag === 2) obj.value = pbf.readDouble();\n};\n\nconst StringProp = {};\n\nStringProp.read = function (pbf, end) {\n  return pbf.readFields(StringProp._readField, {\n    value: []\n  }, end);\n};\n\nStringProp._readField = function (tag, obj, pbf) {\n  if (tag === 1) obj.value.push(pbf.readString());\n};\n\nconst Points = {};\n\nPoints.read = function (pbf, end) {\n  return pbf.readFields(Points._readField, {\n    positions: null,\n    globalFeatureIds: null,\n    featureIds: null,\n    properties: [],\n    numericProps: {}\n  }, end);\n};\n\nPoints._readField = function (tag, obj, pbf) {\n  if (tag === 1) obj.positions = Doubles.read(pbf, pbf.readVarint() + pbf.pos);else if (tag === 2) obj.globalFeatureIds = Ints.read(pbf, pbf.readVarint() + pbf.pos);else if (tag === 3) obj.featureIds = Ints.read(pbf, pbf.readVarint() + pbf.pos);else if (tag === 4) obj.properties.push(Properties.read(pbf, pbf.readVarint() + pbf.pos));else if (tag === 5) {\n    const entry = NumericPropKeyValue.read(pbf, pbf.readVarint() + pbf.pos);\n    obj.numericProps[entry.key] = entry.value;\n  }\n};\n\nconst Lines = {};\n\nLines.read = function (pbf, end) {\n  return pbf.readFields(Lines._readField, {\n    positions: null,\n    pathIndices: null,\n    globalFeatureIds: null,\n    featureIds: null,\n    properties: [],\n    numericProps: {}\n  }, end);\n};\n\nLines._readField = function (tag, obj, pbf) {\n  if (tag === 1) obj.positions = Doubles.read(pbf, pbf.readVarint() + pbf.pos);else if (tag === 2) obj.pathIndices = Ints.read(pbf, pbf.readVarint() + pbf.pos);else if (tag === 3) obj.globalFeatureIds = Ints.read(pbf, pbf.readVarint() + pbf.pos);else if (tag === 4) obj.featureIds = Ints.read(pbf, pbf.readVarint() + pbf.pos);else if (tag === 5) obj.properties.push(Properties.read(pbf, pbf.readVarint() + pbf.pos));else if (tag === 6) {\n    const entry = NumericPropKeyValue.read(pbf, pbf.readVarint() + pbf.pos);\n    obj.numericProps[entry.key] = entry.value;\n  }\n};\n\nconst Polygons = {};\n\nPolygons.read = function (pbf, end) {\n  return pbf.readFields(Polygons._readField, {\n    positions: null,\n    polygonIndices: null,\n    globalFeatureIds: null,\n    featureIds: null,\n    primitivePolygonIndices: null,\n    triangles: null,\n    properties: [],\n    numericProps: {}\n  }, end);\n};\n\nPolygons._readField = function (tag, obj, pbf) {\n  if (tag === 1) obj.positions = Doubles.read(pbf, pbf.readVarint() + pbf.pos);else if (tag === 2) obj.polygonIndices = Ints.read(pbf, pbf.readVarint() + pbf.pos);else if (tag === 3) obj.globalFeatureIds = Ints.read(pbf, pbf.readVarint() + pbf.pos);else if (tag === 4) obj.featureIds = Ints.read(pbf, pbf.readVarint() + pbf.pos);else if (tag === 5) obj.primitivePolygonIndices = Ints.read(pbf, pbf.readVarint() + pbf.pos);else if (tag === 6) obj.triangles = Ints.read(pbf, pbf.readVarint() + pbf.pos);else if (tag === 7) obj.properties.push(Properties.read(pbf, pbf.readVarint() + pbf.pos));else if (tag === 8) {\n    const entry = NumericPropKeyValue.read(pbf, pbf.readVarint() + pbf.pos);\n    obj.numericProps[entry.key] = entry.value;\n  }\n};\n\nexport const Tile = {};\n\nTile.read = function (pbf, end) {\n  return pbf.readFields(Tile._readField, {\n    points: null,\n    lines: null,\n    polygons: null\n  }, end);\n};\n\nTile._readField = function (tag, obj, pbf) {\n  if (tag === 1) obj.points = Points.read(pbf, pbf.readVarint() + pbf.pos);else if (tag === 2) obj.lines = Lines.read(pbf, pbf.readVarint() + pbf.pos);else if (tag === 3) obj.polygons = Polygons.read(pbf, pbf.readVarint() + pbf.pos);\n};","map":{"version":3,"mappings":"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","names":["KeyValueObject","read","pbf","end","readFields","_readField","key","value","tag","obj","readString","Properties","data","push","readVarint","pos","Doubles","size","Float32Array","readPackedDouble","Ints","Uint32Array","readPackedVarint","NumericProp","NumericPropKeyValue","_FieldEntry1","readDouble","StringProp","Points","positions","globalFeatureIds","featureIds","properties","numericProps","entry","Lines","pathIndices","Polygons","polygonIndices","primitivePolygonIndices","triangles","Tile","points","lines","polygons"],"sources":["../../../../src/layers/schema/carto-tile.js"],"sourcesContent":["// KeyValueObject ========================================\n\nconst KeyValueObject = {};\n\nKeyValueObject.read = function (pbf, end) {\n  return pbf.readFields(KeyValueObject._readField, {key: '', value: ''}, end);\n};\nKeyValueObject._readField = function (tag, obj, pbf) {\n  if (tag === 1) obj.key = pbf.readString();\n  else if (tag === 2) obj.value = pbf.readString();\n};\n\n// Properties ========================================\n\nconst Properties = {};\n\nProperties.read = function (pbf, end) {\n  return pbf.readFields(Properties._readField, {data: []}, end);\n};\nProperties._readField = function (tag, obj, pbf) {\n  if (tag === 1) obj.data.push(KeyValueObject.read(pbf, pbf.readVarint() + pbf.pos));\n};\n\n// Doubles ========================================\n\nconst Doubles = {};\n\nDoubles.read = function (pbf, end) {\n  // TODO perhaps we can do better and directly map from the source\n  // ArrayBuffer using ArrayBuffer.slice()\n  const {value, size} = pbf.readFields(Doubles._readField, {value: [], size: 0}, end);\n  return {value: new Float32Array(value), size};\n};\nDoubles._readField = function (tag, obj, pbf) {\n  if (tag === 1) pbf.readPackedDouble(obj.value);\n  else if (tag === 2) obj.size = pbf.readVarint(true);\n};\n\n// Ints ========================================\n\nconst Ints = {};\n\nInts.read = function (pbf, end) {\n  const {value, size} = pbf.readFields(Ints._readField, {value: [], size: 0}, end);\n  return {value: new Uint32Array(value), size};\n};\nInts._readField = function (tag, obj, pbf) {\n  if (tag === 1) pbf.readPackedVarint(obj.value);\n  else if (tag === 2) obj.size = pbf.readVarint(true);\n};\n\n// NumericProp ========================================\n\nconst NumericProp = {};\n\nNumericProp.read = function (pbf, end) {\n  return pbf.readFields(NumericProp._readField, {value: []}, end);\n};\nNumericProp._readField = function (tag, obj, pbf) {\n  if (tag === 1) pbf.readPackedDouble(obj.value);\n};\n\n// NumericPropKeyValue ========================================\n\nconst NumericPropKeyValue = {};\n\nNumericPropKeyValue.read = function (pbf, end) {\n  return pbf.readFields(NumericPropKeyValue._readField, {key: '', value: null}, end);\n};\nNumericPropKeyValue._readField = function (tag, obj, pbf) {\n  if (tag === 1) obj.key = pbf.readString();\n  else if (tag === 2) obj.value = NumericProp.read(pbf, pbf.readVarint() + pbf.pos);\n};\n\n// NumericProp._FieldEntry1 ========================================\n\nNumericProp._FieldEntry1 = {};\n\nNumericProp._FieldEntry1.read = function (pbf, end) {\n  return pbf.readFields(NumericProp._FieldEntry1._readField, {key: '', value: 0}, end);\n};\nNumericProp._FieldEntry1._readField = function (tag, obj, pbf) {\n  if (tag === 1) obj.key = pbf.readString();\n  else if (tag === 2) obj.value = pbf.readDouble();\n};\n\n// StringProp ========================================\n\nconst StringProp = {};\n\nStringProp.read = function (pbf, end) {\n  return pbf.readFields(StringProp._readField, {value: []}, end);\n};\nStringProp._readField = function (tag, obj, pbf) {\n  if (tag === 1) obj.value.push(pbf.readString());\n};\n\n// Points ========================================\n\nconst Points = {};\n\nPoints.read = function (pbf, end) {\n  return pbf.readFields(\n    Points._readField,\n    {positions: null, globalFeatureIds: null, featureIds: null, properties: [], numericProps: {}},\n    end\n  );\n};\nPoints._readField = function (tag, obj, pbf) {\n  if (tag === 1) obj.positions = Doubles.read(pbf, pbf.readVarint() + pbf.pos);\n  else if (tag === 2) obj.globalFeatureIds = Ints.read(pbf, pbf.readVarint() + pbf.pos);\n  else if (tag === 3) obj.featureIds = Ints.read(pbf, pbf.readVarint() + pbf.pos);\n  else if (tag === 4) obj.properties.push(Properties.read(pbf, pbf.readVarint() + pbf.pos));\n  else if (tag === 5) {\n    const entry = NumericPropKeyValue.read(pbf, pbf.readVarint() + pbf.pos);\n    obj.numericProps[entry.key] = entry.value;\n  }\n};\n\n// Lines ========================================\n\nconst Lines = {};\n\nLines.read = function (pbf, end) {\n  return pbf.readFields(\n    Lines._readField,\n    {\n      positions: null,\n      pathIndices: null,\n      globalFeatureIds: null,\n      featureIds: null,\n      properties: [],\n      numericProps: {}\n    },\n    end\n  );\n};\nLines._readField = function (tag, obj, pbf) {\n  if (tag === 1) obj.positions = Doubles.read(pbf, pbf.readVarint() + pbf.pos);\n  else if (tag === 2) obj.pathIndices = Ints.read(pbf, pbf.readVarint() + pbf.pos);\n  else if (tag === 3) obj.globalFeatureIds = Ints.read(pbf, pbf.readVarint() + pbf.pos);\n  else if (tag === 4) obj.featureIds = Ints.read(pbf, pbf.readVarint() + pbf.pos);\n  else if (tag === 5) obj.properties.push(Properties.read(pbf, pbf.readVarint() + pbf.pos));\n  else if (tag === 6) {\n    const entry = NumericPropKeyValue.read(pbf, pbf.readVarint() + pbf.pos);\n    obj.numericProps[entry.key] = entry.value;\n  }\n};\n\n// Polygons ========================================\n\nconst Polygons = {};\n\nPolygons.read = function (pbf, end) {\n  return pbf.readFields(\n    Polygons._readField,\n    {\n      positions: null,\n      polygonIndices: null,\n      globalFeatureIds: null,\n      featureIds: null,\n      primitivePolygonIndices: null,\n      triangles: null,\n      properties: [],\n      numericProps: {}\n    },\n    end\n  );\n};\nPolygons._readField = function (tag, obj, pbf) {\n  if (tag === 1) obj.positions = Doubles.read(pbf, pbf.readVarint() + pbf.pos);\n  else if (tag === 2) obj.polygonIndices = Ints.read(pbf, pbf.readVarint() + pbf.pos);\n  else if (tag === 3) obj.globalFeatureIds = Ints.read(pbf, pbf.readVarint() + pbf.pos);\n  else if (tag === 4) obj.featureIds = Ints.read(pbf, pbf.readVarint() + pbf.pos);\n  else if (tag === 5) obj.primitivePolygonIndices = Ints.read(pbf, pbf.readVarint() + pbf.pos);\n  else if (tag === 6) obj.triangles = Ints.read(pbf, pbf.readVarint() + pbf.pos);\n  else if (tag === 7) obj.properties.push(Properties.read(pbf, pbf.readVarint() + pbf.pos));\n  else if (tag === 8) {\n    const entry = NumericPropKeyValue.read(pbf, pbf.readVarint() + pbf.pos);\n    obj.numericProps[entry.key] = entry.value;\n  }\n};\n\n// Tile ========================================\n\nexport const Tile = {};\n\nTile.read = function (pbf, end) {\n  return pbf.readFields(Tile._readField, {points: null, lines: null, polygons: null}, end);\n};\nTile._readField = function (tag, obj, pbf) {\n  if (tag === 1) obj.points = Points.read(pbf, pbf.readVarint() + pbf.pos);\n  else if (tag === 2) obj.lines = Lines.read(pbf, pbf.readVarint() + pbf.pos);\n  else if (tag === 3) obj.polygons = Polygons.read(pbf, pbf.readVarint() + pbf.pos);\n};\n"]},"metadata":{},"sourceType":"module"}