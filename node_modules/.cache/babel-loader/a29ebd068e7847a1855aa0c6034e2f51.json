{"ast":null,"code":"import _construct from \"/Users/tomasehrenfeld/projs/se-team/tomas/react-apps/custom_filter/node_modules/@babel/runtime/helpers/esm/construct.js\";\nimport _toConsumableArray from \"/Users/tomasehrenfeld/projs/se-team/tomas/react-apps/custom_filter/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport assert from './assert';\nvar RADIANS_TO_DEGREES = 1 / Math.PI * 180;\nvar DEGREES_TO_RADIANS = 1 / 180 * Math.PI;\nvar config = {};\nconfig.EPSILON = 1e-12;\nconfig.debug = false;\nconfig.precision = 4;\nconfig.printTypes = false;\nconfig.printDegrees = false;\nconfig.printRowMajor = true;\nexport { config };\nexport function configure() {\n  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  for (var key in options) {\n    assert(key in config);\n    config[key] = options[key];\n  }\n\n  return config;\n}\n\nfunction round(value) {\n  return Math.round(value / config.EPSILON) * config.EPSILON;\n}\n\nexport function formatValue(value) {\n  var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n      _ref$precision = _ref.precision,\n      precision = _ref$precision === void 0 ? config.precision || 4 : _ref$precision;\n\n  value = round(value);\n  return \"\".concat(parseFloat(value.toPrecision(precision)));\n}\nexport function isArray(value) {\n  return Array.isArray(value) || ArrayBuffer.isView(value) && !(value instanceof DataView);\n}\n\nfunction duplicateArray(array) {\n  return array.clone ? array.clone() : new Array(array.length);\n}\n\nexport function clone(array) {\n  return array.clone ? array.clone() : _construct(Array, _toConsumableArray(array));\n}\n\nfunction map(value, func, result) {\n  if (isArray(value)) {\n    result = result || duplicateArray(value);\n\n    for (var i = 0; i < result.length && i < value.length; ++i) {\n      result[i] = func(value[i], i, result);\n    }\n\n    return result;\n  }\n\n  return func(value);\n}\n\nexport function toRadians(degrees) {\n  return radians(degrees);\n}\nexport function toDegrees(radians) {\n  return degrees(radians);\n}\nexport function radians(degrees, result) {\n  return map(degrees, function (degrees) {\n    return degrees * DEGREES_TO_RADIANS;\n  }, result);\n}\nexport function degrees(radians, result) {\n  return map(radians, function (radians) {\n    return radians * RADIANS_TO_DEGREES;\n  }, result);\n}\nexport function sin(radians) {\n  return map(radians, function (angle) {\n    return Math.sin(angle);\n  });\n}\nexport function cos(radians) {\n  return map(radians, function (angle) {\n    return Math.cos(angle);\n  });\n}\nexport function tan(radians) {\n  return map(radians, function (angle) {\n    return Math.tan(angle);\n  });\n}\nexport function asin(radians) {\n  return map(radians, function (angle) {\n    return Math.asin(angle);\n  });\n}\nexport function acos(radians) {\n  return map(radians, function (angle) {\n    return Math.acos(angle);\n  });\n}\nexport function atan(radians) {\n  return map(radians, function (angle) {\n    return Math.atan(angle);\n  });\n}\nexport function clamp(value, min, max) {\n  return map(value, function (value) {\n    return Math.max(min, Math.min(max, value));\n  });\n}\nexport function lerp(a, b, t) {\n  if (isArray(a)) {\n    return a.map(function (ai, i) {\n      return lerp(ai, b[i], t);\n    });\n  }\n\n  return t * b + (1 - t) * a;\n}\nexport function equals(a, b, epsilon) {\n  var oldEpsilon = config.EPSILON;\n\n  if (epsilon) {\n    config.EPSILON = epsilon;\n  }\n\n  try {\n    if (a === b) {\n      return true;\n    }\n\n    if (isArray(a) && isArray(b)) {\n      if (a.length !== b.length) {\n        return false;\n      }\n\n      for (var i = 0; i < a.length; ++i) {\n        if (!equals(a[i], b[i])) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n\n    if (a && a.equals) {\n      return a.equals(b);\n    }\n\n    if (b && b.equals) {\n      return b.equals(a);\n    }\n\n    if (Number.isFinite(a) && Number.isFinite(b)) {\n      return Math.abs(a - b) <= config.EPSILON * Math.max(1.0, Math.abs(a), Math.abs(b));\n    }\n\n    return false;\n  } finally {\n    config.EPSILON = oldEpsilon;\n  }\n}\nexport function exactEquals(a, b) {\n  if (a === b) {\n    return true;\n  }\n\n  if (a && typeof a === 'object' && b && typeof b === 'object') {\n    if (a.constructor !== b.constructor) {\n      return false;\n    }\n\n    if (a.exactEquals) {\n      return a.exactEquals(b);\n    }\n  }\n\n  if (isArray(a) && isArray(b)) {\n    if (a.length !== b.length) {\n      return false;\n    }\n\n    for (var i = 0; i < a.length; ++i) {\n      if (!exactEquals(a[i], b[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  return false;\n}\nexport function withEpsilon(EPSILON, func) {\n  var oldPrecision = config.EPSILON;\n  config.EPSILON = EPSILON;\n  var value;\n\n  try {\n    value = func();\n  } finally {\n    config.EPSILON = oldPrecision;\n  }\n\n  return value;\n}","map":{"version":3,"mappings":"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","names":["assert","RADIANS_TO_DEGREES","Math","PI","DEGREES_TO_RADIANS","config","EPSILON","debug","precision","printTypes","printDegrees","printRowMajor","configure","options","key","round","value","formatValue","parseFloat","toPrecision","isArray","Array","ArrayBuffer","isView","DataView","duplicateArray","array","clone","length","map","func","result","i","toRadians","degrees","radians","toDegrees","sin","angle","cos","tan","asin","acos","atan","clamp","min","max","lerp","a","b","t","ai","equals","epsilon","oldEpsilon","Number","isFinite","abs","exactEquals","constructor","withEpsilon","oldPrecision"],"sources":["../../../src/lib/common.js"],"sourcesContent":["// Copyright (c) 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport assert from './assert';\n\nconst RADIANS_TO_DEGREES = (1 / Math.PI) * 180;\nconst DEGREES_TO_RADIANS = (1 / 180) * Math.PI;\n\n// TODO - remove\n/* eslint-disable no-shadow */\nconst config = {};\nconfig.EPSILON = 1e-12;\nconfig.debug = false;\nconfig.precision = 4;\nconfig.printTypes = false;\nconfig.printDegrees = false;\nconfig.printRowMajor = true;\n\nexport {config};\n\nexport function configure(options = {}) {\n  // Only copy existing keys\n  for (const key in options) {\n    assert(key in config);\n    config[key] = options[key];\n  }\n  return config;\n}\n\nfunction round(value) {\n  return Math.round(value / config.EPSILON) * config.EPSILON;\n}\n\nexport function formatValue(value, {precision = config.precision || 4} = {}) {\n  value = round(value);\n  // get rid of trailing zeros\n  return `${parseFloat(value.toPrecision(precision))}`;\n}\n\n// Returns true if value is either an array or a typed array\n// Note: does not return true for ArrayBuffers and DataViews\nexport function isArray(value) {\n  return Array.isArray(value) || (ArrayBuffer.isView(value) && !(value instanceof DataView));\n}\n\n// If the array has a clone function, calls it, otherwise returns a copy\nfunction duplicateArray(array) {\n  return array.clone ? array.clone() : new Array(array.length);\n}\n\nexport function clone(array) {\n  return array.clone ? array.clone() : new Array(...array);\n}\n\n// If the argument value is an array, applies the func element wise,\n// otherwise applies func to the argument value\nfunction map(value, func, result) {\n  if (isArray(value)) {\n    result = result || duplicateArray(value);\n    for (let i = 0; i < result.length && i < value.length; ++i) {\n      result[i] = func(value[i], i, result);\n    }\n    return result;\n  }\n  return func(value);\n}\n\nexport function toRadians(degrees) {\n  return radians(degrees);\n}\n\nexport function toDegrees(radians) {\n  return degrees(radians);\n}\n\n//\n// GLSL math function equivalents\n// Works on both single values and vectors\n//\n\nexport function radians(degrees, result) {\n  return map(degrees, (degrees) => degrees * DEGREES_TO_RADIANS, result);\n}\n\nexport function degrees(radians, result) {\n  return map(radians, (radians) => radians * RADIANS_TO_DEGREES, result);\n}\n\n// GLSL equivalent: Works on single values and vectors\nexport function sin(radians) {\n  return map(radians, (angle) => Math.sin(angle));\n}\n\n// GLSL equivalent: Works on single values and vectors\nexport function cos(radians) {\n  return map(radians, (angle) => Math.cos(angle));\n}\n\n// GLSL equivalent: Works on single values and vectors\nexport function tan(radians) {\n  return map(radians, (angle) => Math.tan(angle));\n}\n\n// GLSL equivalent: Works on single values and vectors\nexport function asin(radians) {\n  return map(radians, (angle) => Math.asin(angle));\n}\n\n// GLSL equivalent: Works on single values and vectors\nexport function acos(radians) {\n  return map(radians, (angle) => Math.acos(angle));\n}\n\n// GLSL equivalent: Works on single values and vectors\nexport function atan(radians) {\n  return map(radians, (angle) => Math.atan(angle));\n}\n\nexport function clamp(value, min, max) {\n  return map(value, (value) => Math.max(min, Math.min(max, value)));\n}\n\n// Interpolate between two numbers or two arrays\nexport function lerp(a, b, t) {\n  if (isArray(a)) {\n    return a.map((ai, i) => lerp(ai, b[i], t));\n  }\n  return t * b + (1 - t) * a;\n}\n\n// eslint-disable-next-line complexity\nexport function equals(a, b, epsilon) {\n  const oldEpsilon = config.EPSILON;\n  if (epsilon) {\n    config.EPSILON = epsilon;\n  }\n  try {\n    if (a === b) {\n      return true;\n    }\n    if (isArray(a) && isArray(b)) {\n      if (a.length !== b.length) {\n        return false;\n      }\n      for (let i = 0; i < a.length; ++i) {\n        // eslint-disable-next-line max-depth\n        if (!equals(a[i], b[i])) {\n          return false;\n        }\n      }\n      return true;\n    }\n    if (a && a.equals) {\n      return a.equals(b);\n    }\n    if (b && b.equals) {\n      return b.equals(a);\n    }\n    if (Number.isFinite(a) && Number.isFinite(b)) {\n      return Math.abs(a - b) <= config.EPSILON * Math.max(1.0, Math.abs(a), Math.abs(b));\n    }\n    return false;\n  } finally {\n    config.EPSILON = oldEpsilon;\n  }\n}\n\n// eslint-disable-next-line complexity\nexport function exactEquals(a, b) {\n  if (a === b) {\n    return true;\n  }\n  if (a && typeof a === 'object' && b && typeof b === 'object') {\n    if (a.constructor !== b.constructor) {\n      return false;\n    }\n    if (a.exactEquals) {\n      return a.exactEquals(b);\n    }\n  }\n  if (isArray(a) && isArray(b)) {\n    if (a.length !== b.length) {\n      return false;\n    }\n    for (let i = 0; i < a.length; ++i) {\n      if (!exactEquals(a[i], b[i])) {\n        return false;\n      }\n    }\n    return true;\n  }\n  return false;\n}\n\nexport function withEpsilon(EPSILON, func) {\n  const oldPrecision = config.EPSILON;\n  config.EPSILON = EPSILON;\n  let value;\n  try {\n    value = func();\n  } finally {\n    config.EPSILON = oldPrecision;\n  }\n  return value;\n}\n"]},"metadata":{},"sourceType":"module"}