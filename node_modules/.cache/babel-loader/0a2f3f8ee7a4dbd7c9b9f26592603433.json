{"ast":null,"code":"import { ConsoleLog } from './loggers';\nexport const DEFAULT_LOADER_OPTIONS = {\n  fetch: null,\n  mimeType: undefined,\n  nothrow: false,\n  log: new ConsoleLog(),\n  CDN: 'https://unpkg.com/@loaders.gl',\n  worker: true,\n  maxConcurrency: 3,\n  maxMobileConcurrency: 1,\n  reuseWorkers: true,\n  _workerType: '',\n  limit: 0,\n  _limitMB: 0,\n  batchSize: 'auto',\n  batchDebounceMs: 0,\n  metadata: false,\n  transforms: []\n};\nexport const REMOVED_LOADER_OPTIONS = {\n  throws: 'nothrow',\n  dataType: '(no longer used)',\n  uri: 'baseUri',\n  method: 'fetch.method',\n  headers: 'fetch.headers',\n  body: 'fetch.body',\n  mode: 'fetch.mode',\n  credentials: 'fetch.credentials',\n  cache: 'fetch.cache',\n  redirect: 'fetch.redirect',\n  referrer: 'fetch.referrer',\n  referrerPolicy: 'fetch.referrerPolicy',\n  integrity: 'fetch.integrity',\n  keepalive: 'fetch.keepalive',\n  signal: 'fetch.signal'\n};","map":{"version":3,"mappings":"AACA,SAAQA,UAAR,QAAyB,WAAzB;AAEA,OAAO,MAAMC,sBAAqC,GAAG;EAEnDC,KAAK,EAAE,IAF4C;EAGnDC,QAAQ,EAAEC,SAHyC;EAInDC,OAAO,EAAE,KAJ0C;EAKnDC,GAAG,EAAE,IAAIN,UAAJ,EAL8C;EAOnDO,GAAG,EAAE,+BAP8C;EAQnDC,MAAM,EAAE,IAR2C;EASnDC,cAAc,EAAE,CATmC;EAUnDC,oBAAoB,EAAE,CAV6B;EAWnDC,YAAY,EAAE,IAXqC;EAYnDC,WAAW,EAAE,EAZsC;EAcnDC,KAAK,EAAE,CAd4C;EAenDC,QAAQ,EAAE,CAfyC;EAgBnDC,SAAS,EAAE,MAhBwC;EAiBnDC,eAAe,EAAE,CAjBkC;EAkBnDC,QAAQ,EAAE,KAlByC;EAmBnDC,UAAU,EAAE;AAnBuC,CAA9C;AAsBP,OAAO,MAAMC,sBAAsB,GAAG;EACpCC,MAAM,EAAE,SAD4B;EAEpCC,QAAQ,EAAE,kBAF0B;EAGpCC,GAAG,EAAE,SAH+B;EAKpCC,MAAM,EAAE,cAL4B;EAMpCC,OAAO,EAAE,eAN2B;EAOpCC,IAAI,EAAE,YAP8B;EAQpCC,IAAI,EAAE,YAR8B;EASpCC,WAAW,EAAE,mBATuB;EAUpCC,KAAK,EAAE,aAV6B;EAWpCC,QAAQ,EAAE,gBAX0B;EAYpCC,QAAQ,EAAE,gBAZ0B;EAapCC,cAAc,EAAE,sBAboB;EAcpCC,SAAS,EAAE,iBAdyB;EAepCC,SAAS,EAAE,iBAfyB;EAgBpCC,MAAM,EAAE;AAhB4B,CAA/B","names":["ConsoleLog","DEFAULT_LOADER_OPTIONS","fetch","mimeType","undefined","nothrow","log","CDN","worker","maxConcurrency","maxMobileConcurrency","reuseWorkers","_workerType","limit","_limitMB","batchSize","batchDebounceMs","metadata","transforms","REMOVED_LOADER_OPTIONS","throws","dataType","uri","method","headers","body","mode","credentials","cache","redirect","referrer","referrerPolicy","integrity","keepalive","signal"],"sources":["../../../../src/lib/loader-utils/option-defaults.ts"],"sourcesContent":["import type {LoaderOptions} from '@loaders.gl/loader-utils';\nimport {ConsoleLog} from './loggers';\n\nexport const DEFAULT_LOADER_OPTIONS: LoaderOptions = {\n  // baseUri\n  fetch: null,\n  mimeType: undefined,\n  nothrow: false,\n  log: new ConsoleLog(), // A probe.gl compatible (`log.log()()` syntax) that just logs to console\n\n  CDN: 'https://unpkg.com/@loaders.gl',\n  worker: true, // By default, use worker if provided by loader.\n  maxConcurrency: 3, // How many worker instances should be created for each loader.\n  maxMobileConcurrency: 1, // How many worker instances should be created for each loader on mobile devices.\n  reuseWorkers: true, // By default reuse workers,\n  _workerType: '', // 'test' to use locally generated workers\n\n  limit: 0,\n  _limitMB: 0,\n  batchSize: 'auto',\n  batchDebounceMs: 0,\n  metadata: false, // TODO - currently only implemented for parseInBatches, adds initial metadata batch,\n  transforms: []\n};\n\nexport const REMOVED_LOADER_OPTIONS = {\n  throws: 'nothrow',\n  dataType: '(no longer used)',\n  uri: 'baseUri',\n  // Warn if fetch options are used on top-level\n  method: 'fetch.method',\n  headers: 'fetch.headers',\n  body: 'fetch.body',\n  mode: 'fetch.mode',\n  credentials: 'fetch.credentials',\n  cache: 'fetch.cache',\n  redirect: 'fetch.redirect',\n  referrer: 'fetch.referrer',\n  referrerPolicy: 'fetch.referrerPolicy',\n  integrity: 'fetch.integrity',\n  keepalive: 'fetch.keepalive',\n  signal: 'fetch.signal'\n};\n"]},"metadata":{},"sourceType":"module"}