{"ast":null,"code":"import _classCallCheck from \"/Users/tomasehrenfeld/projs/se-team/tomas/react-apps/custom_filter/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/tomasehrenfeld/projs/se-team/tomas/react-apps/custom_filter/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _assertThisInitialized from \"/Users/tomasehrenfeld/projs/se-team/tomas/react-apps/custom_filter/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _inherits from \"/Users/tomasehrenfeld/projs/se-team/tomas/react-apps/custom_filter/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/tomasehrenfeld/projs/se-team/tomas/react-apps/custom_filter/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { ClipSpace, setParameters, withParameters, clear } from '@luma.gl/core';\nimport Pass from './pass';\n\nvar ScreenPass = /*#__PURE__*/function (_Pass) {\n  _inherits(ScreenPass, _Pass);\n\n  var _super = _createSuper(ScreenPass);\n\n  function ScreenPass(gl, props) {\n    var _this;\n\n    _classCallCheck(this, ScreenPass);\n\n    _this = _super.call(this, gl, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"model\", void 0);\n\n    var module = props.module,\n        fs = props.fs,\n        id = props.id;\n    _this.model = new ClipSpace(gl, {\n      id: id,\n      fs: fs,\n      modules: [module]\n    });\n    return _this;\n  }\n\n  _createClass(ScreenPass, [{\n    key: \"render\",\n    value: function render(params) {\n      var _this2 = this;\n\n      var gl = this.gl;\n      setParameters(gl, {\n        viewport: [0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight]\n      });\n      withParameters(gl, {\n        framebuffer: params.outputBuffer,\n        clearColor: [0, 0, 0, 0]\n      }, function () {\n        return _this2._renderPass(gl, params);\n      });\n    }\n  }, {\n    key: \"delete\",\n    value: function _delete() {\n      this.model.delete();\n      this.model = null;\n    }\n  }, {\n    key: \"_renderPass\",\n    value: function _renderPass(gl, options) {\n      var inputBuffer = options.inputBuffer;\n      clear(gl, {\n        color: true\n      });\n      this.model.draw({\n        moduleSettings: this.props.moduleSettings,\n        uniforms: {\n          texture: inputBuffer,\n          texSize: [inputBuffer.width, inputBuffer.height]\n        },\n        parameters: {\n          depthWrite: false,\n          depthTest: false\n        }\n      });\n    }\n  }]);\n\n  return ScreenPass;\n}(Pass);\n\nexport { ScreenPass as default };","map":{"version":3,"mappings":";;;;;;AAOA,SAAQA,SAAR,EAAmBC,aAAnB,EAAkCC,cAAlC,EAAkDC,KAAlD,QAA8D,eAA9D;AACA,OAAOC,IAAP,MAAiB,QAAjB;;IAaqBC,U;;;;;EAGnBC,oBAAYC,EAAZD,EAAuCE,KAAvCF,EAA+D;IAAA;;IAAA;;IAC7D,0BAAMC,EAAN,EAAUC,KAAV;;IAD6DC;;IAE7D,IAAOC,MAAP,GAAyBF,KAAzB,CAAOE,MAAP;IAAA,IAAeC,EAAf,GAAyBH,KAAzB,CAAeG,EAAf;IAAA,IAAmBC,EAAnB,GAAyBJ,KAAzB,CAAmBI,EAAnB;IACA,MAAKC,KAAL,GAAa,IAAIb,SAAJ,CAAcO,EAAd,EAAkB;MAACK,EAAD,EAACA,EAAD;MAAKD,EAAL,EAAKA,EAAL;MAASG,OAAO,EAAE,CAACJ,MAAD;IAAlB,CAAlB,CAAb;IAH6D;EAI9D;;;;WAEDK,gBAAOC,MAAPD,EAA8C;MAAA;;MAC5C,IAAMR,EAAE,GAAG,KAAKA,EAAhB;MAEAN,aAAa,CAACM,EAAD,EAAK;QAACU,QAAQ,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAOV,EAAE,CAACW,kBAAV,EAA8BX,EAAE,CAACY,mBAAjC;MAAX,CAAL,CAAblB;MAEAC,cAAc,CAACK,EAAD,EAAK;QAACa,WAAW,EAAEJ,MAAM,CAACK,YAArB;QAAmCC,UAAU,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV;MAA/C,CAAL,EAAmE;QAAA,OAC/E,OAAKC,WAAL,CAAiBhB,EAAjB,EAAqBS,MAArB,CAD+E;MAAA,CAAnE,CAAdd;IAGD;;;WAEDsB,mBAAS;MACP,KAAKX,KAAL,CAAWW,MAAX;MACA,KAAKX,KAAL,GAAa,IAAb;IACD;;;WAUSU,qBAAYhB,EAAZgB,EAAuCE,OAAvCF,EAAyE;MACjF,IAAOG,WAAP,GAAsBD,OAAtB,CAAOC,WAAP;MACAvB,KAAK,CAACI,EAAD,EAAK;QAACoB,KAAK,EAAE;MAAR,CAAL,CAALxB;MACA,KAAKU,KAAL,CAAWe,IAAX,CAAgB;QACdC,cAAc,EAAE,KAAKrB,KAAL,CAAWqB,cADb;QAEdC,QAAQ,EAAE;UACRC,OAAO,EAAEL,WADD;UAERM,OAAO,EAAE,CAACN,WAAW,CAACO,KAAb,EAAoBP,WAAW,CAACQ,MAAhC;QAFD,CAFI;QAMdC,UAAU,EAAE;UACVC,UAAU,EAAE,KADF;UAEVC,SAAS,EAAE;QAFD;MANE,CAAhB;IAWD;;;;EA9CqCjC,I;;SAAnBC,U","names":["ClipSpace","setParameters","withParameters","clear","Pass","ScreenPass","constructor","gl","props","_defineProperty","module","fs","id","model","modules","render","params","viewport","drawingBufferWidth","drawingBufferHeight","framebuffer","outputBuffer","clearColor","_renderPass","delete","options","inputBuffer","color","draw","moduleSettings","uniforms","texture","texSize","width","height","parameters","depthWrite","depthTest"],"sources":["../../../src/passes/screen-pass.ts"],"sourcesContent":["//\n// A base render pass.\n//\n// Attribution: This class and the multipass system were inspired by\n// the THREE.js EffectComposer and *Pass classes\n\nimport type {Framebuffer} from '@luma.gl/core';\nimport {ClipSpace, setParameters, withParameters, clear} from '@luma.gl/core';\nimport Pass from './pass';\n\ntype ScreenPassProps = {\n  module;\n  fs;\n  id;\n};\n\ntype ScreenPassRenderOptions = {\n  inputBuffer: Framebuffer;\n  outputBuffer: Framebuffer;\n};\n\nexport default class ScreenPass extends Pass {\n  model: ClipSpace;\n\n  constructor(gl: WebGLRenderingContext, props: ScreenPassProps) {\n    super(gl, props);\n    const {module, fs, id} = props;\n    this.model = new ClipSpace(gl, {id, fs, modules: [module]});\n  }\n\n  render(params: ScreenPassRenderOptions): void {\n    const gl = this.gl;\n\n    setParameters(gl, {viewport: [0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight]});\n\n    withParameters(gl, {framebuffer: params.outputBuffer, clearColor: [0, 0, 0, 0]}, () =>\n      this._renderPass(gl, params)\n    );\n  }\n\n  delete() {\n    this.model.delete();\n    this.model = null;\n  }\n\n  // Private methods\n\n  /**\n   * Renders the pass.\n   * This is an abstract method that should be overridden.\n   * @param inputBuffer - Frame buffer that contains the result of the previous pass\n   * @param outputBuffer - Frame buffer that serves as the output render target\n   */\n  protected _renderPass(gl: WebGLRenderingContext, options: ScreenPassRenderOptions) {\n    const {inputBuffer} = options;\n    clear(gl, {color: true});\n    this.model.draw({\n      moduleSettings: this.props.moduleSettings,\n      uniforms: {\n        texture: inputBuffer,\n        texSize: [inputBuffer.width, inputBuffer.height]\n      },\n      parameters: {\n        depthWrite: false,\n        depthTest: false\n      }\n    });\n  }\n}\n"]},"metadata":{},"sourceType":"module"}