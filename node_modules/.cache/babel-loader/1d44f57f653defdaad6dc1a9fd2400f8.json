{"ast":null,"code":"import _slicedToArray from \"/Users/tomasehrenfeld/projs/se-team/tomas/react-apps/custom_filter/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _asyncToGenerator from \"/Users/tomasehrenfeld/projs/se-team/tomas/react-apps/custom_filter/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _regeneratorRuntime from \"/Users/tomasehrenfeld/projs/se-team/tomas/react-apps/custom_filter/node_modules/@babel/runtime/regenerator/index.js\";\nvar VERSION = typeof \"3.1.8\" !== 'undefined' ? \"3.1.8\" : 'latest';\nimport { loadLibrary } from '@loaders.gl/worker-utils';\nvar BASIS_CDN_ENCODER_WASM = \"https://unpkg.com/@loaders.gl/textures@\".concat(VERSION, \"/dist/libs/basis_encoder.wasm\");\nvar BASIS_CDN_ENCODER_JS = \"https://unpkg.com/@loaders.gl/textures@\".concat(VERSION, \"/dist/libs/basis_encoder.js\");\nvar loadBasisTranscoderPromise;\nexport function loadBasisTrascoderModule(_x) {\n  return _loadBasisTrascoderModule.apply(this, arguments);\n}\n\nfunction _loadBasisTrascoderModule() {\n  _loadBasisTrascoderModule = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(options) {\n    var modules;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            modules = options.modules || {};\n\n            if (!modules.basis) {\n              _context.next = 3;\n              break;\n            }\n\n            return _context.abrupt(\"return\", modules.basis);\n\n          case 3:\n            loadBasisTranscoderPromise = loadBasisTranscoderPromise || loadBasisTrascoder(options);\n            _context.next = 6;\n            return loadBasisTranscoderPromise;\n\n          case 6:\n            return _context.abrupt(\"return\", _context.sent);\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _loadBasisTrascoderModule.apply(this, arguments);\n}\n\nfunction loadBasisTrascoder(_x2) {\n  return _loadBasisTrascoder.apply(this, arguments);\n}\n\nfunction _loadBasisTrascoder() {\n  _loadBasisTrascoder = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(options) {\n    var BASIS, wasmBinary, _yield$Promise$all, _yield$Promise$all2;\n\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            BASIS = null;\n            wasmBinary = null;\n            _context2.t0 = Promise;\n            _context2.next = 5;\n            return loadLibrary('basis_transcoder.js', 'textures', options);\n\n          case 5:\n            _context2.t1 = _context2.sent;\n            _context2.next = 8;\n            return loadLibrary('basis_transcoder.wasm', 'textures', options);\n\n          case 8:\n            _context2.t2 = _context2.sent;\n            _context2.t3 = [_context2.t1, _context2.t2];\n            _context2.next = 12;\n            return _context2.t0.all.call(_context2.t0, _context2.t3);\n\n          case 12:\n            _yield$Promise$all = _context2.sent;\n            _yield$Promise$all2 = _slicedToArray(_yield$Promise$all, 2);\n            BASIS = _yield$Promise$all2[0];\n            wasmBinary = _yield$Promise$all2[1];\n            BASIS = BASIS || globalThis.BASIS;\n            _context2.next = 19;\n            return initializeBasisTrascoderModule(BASIS, wasmBinary);\n\n          case 19:\n            return _context2.abrupt(\"return\", _context2.sent);\n\n          case 20:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return _loadBasisTrascoder.apply(this, arguments);\n}\n\nfunction initializeBasisTrascoderModule(BasisModule, wasmBinary) {\n  var options = {};\n\n  if (wasmBinary) {\n    options.wasmBinary = wasmBinary;\n  }\n\n  return new Promise(function (resolve) {\n    BasisModule(options).then(function (module) {\n      var BasisFile = module.BasisFile,\n          initializeBasis = module.initializeBasis;\n      initializeBasis();\n      resolve({\n        BasisFile: BasisFile\n      });\n    });\n  });\n}\n\nvar loadBasisEncoderPromise;\nexport function loadBasisEncoderModule(_x3) {\n  return _loadBasisEncoderModule.apply(this, arguments);\n}\n\nfunction _loadBasisEncoderModule() {\n  _loadBasisEncoderModule = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(options) {\n    var modules;\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            modules = options.modules || {};\n\n            if (!modules.basisEncoder) {\n              _context3.next = 3;\n              break;\n            }\n\n            return _context3.abrupt(\"return\", modules.basisEncoder);\n\n          case 3:\n            loadBasisEncoderPromise = loadBasisEncoderPromise || loadBasisEncoder(options);\n            _context3.next = 6;\n            return loadBasisEncoderPromise;\n\n          case 6:\n            return _context3.abrupt(\"return\", _context3.sent);\n\n          case 7:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n  return _loadBasisEncoderModule.apply(this, arguments);\n}\n\nfunction loadBasisEncoder(_x4) {\n  return _loadBasisEncoder.apply(this, arguments);\n}\n\nfunction _loadBasisEncoder() {\n  _loadBasisEncoder = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(options) {\n    var BASIS_ENCODER, wasmBinary, _yield$Promise$all3, _yield$Promise$all4;\n\n    return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            BASIS_ENCODER = null;\n            wasmBinary = null;\n            _context4.t0 = Promise;\n            _context4.next = 5;\n            return loadLibrary(BASIS_CDN_ENCODER_JS, 'textures', options);\n\n          case 5:\n            _context4.t1 = _context4.sent;\n            _context4.next = 8;\n            return loadLibrary(BASIS_CDN_ENCODER_WASM, 'textures', options);\n\n          case 8:\n            _context4.t2 = _context4.sent;\n            _context4.t3 = [_context4.t1, _context4.t2];\n            _context4.next = 12;\n            return _context4.t0.all.call(_context4.t0, _context4.t3);\n\n          case 12:\n            _yield$Promise$all3 = _context4.sent;\n            _yield$Promise$all4 = _slicedToArray(_yield$Promise$all3, 2);\n            BASIS_ENCODER = _yield$Promise$all4[0];\n            wasmBinary = _yield$Promise$all4[1];\n            BASIS_ENCODER = BASIS_ENCODER || globalThis.BASIS;\n            _context4.next = 19;\n            return initializeBasisEncoderModule(BASIS_ENCODER, wasmBinary);\n\n          case 19:\n            return _context4.abrupt(\"return\", _context4.sent);\n\n          case 20:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4);\n  }));\n  return _loadBasisEncoder.apply(this, arguments);\n}\n\nfunction initializeBasisEncoderModule(BasisEncoderModule, wasmBinary) {\n  var options = {};\n\n  if (wasmBinary) {\n    options.wasmBinary = wasmBinary;\n  }\n\n  return new Promise(function (resolve) {\n    BasisEncoderModule(options).then(function (module) {\n      var BasisFile = module.BasisFile,\n          KTX2File = module.KTX2File,\n          initializeBasis = module.initializeBasis,\n          BasisEncoder = module.BasisEncoder;\n      initializeBasis();\n      resolve({\n        BasisFile: BasisFile,\n        KTX2File: KTX2File,\n        BasisEncoder: BasisEncoder\n      });\n    });\n  });\n}","map":{"version":3,"mappings":"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","names":["VERSION","loadLibrary","BASIS_CDN_ENCODER_WASM","BASIS_CDN_ENCODER_JS","loadBasisTranscoderPromise","loadBasisTrascoderModule","options","modules","basis","loadBasisTrascoder","BASIS","wasmBinary","Promise","all","globalThis","initializeBasisTrascoderModule","BasisModule","resolve","then","module","BasisFile","initializeBasis","loadBasisEncoderPromise","loadBasisEncoderModule","basisEncoder","loadBasisEncoder","BASIS_ENCODER","initializeBasisEncoderModule","BasisEncoderModule","KTX2File","BasisEncoder"],"sources":["../../../../src/lib/parsers/basis-module-loader.ts"],"sourcesContent":["// __VERSION__ is injected by babel-plugin-version-inline\n// @ts-ignore TS2304: Cannot find name '__VERSION__'.\nconst VERSION = typeof __VERSION__ !== 'undefined' ? __VERSION__ : 'latest';\n\n// @ts-nocheck\nimport {loadLibrary} from '@loaders.gl/worker-utils';\n\nconst BASIS_CDN_ENCODER_WASM = `https://unpkg.com/@loaders.gl/textures@${VERSION}/dist/libs/basis_encoder.wasm`;\nconst BASIS_CDN_ENCODER_JS = `https://unpkg.com/@loaders.gl/textures@${VERSION}/dist/libs/basis_encoder.js`;\n\nlet loadBasisTranscoderPromise;\n\n/**\n * Loads wasm transcoder module\n * @param options\n * @returns {BasisFile} promise\n */\nexport async function loadBasisTrascoderModule(options) {\n  const modules = options.modules || {};\n  if (modules.basis) {\n    return modules.basis;\n  }\n\n  loadBasisTranscoderPromise = loadBasisTranscoderPromise || loadBasisTrascoder(options);\n  return await loadBasisTranscoderPromise;\n}\n\n/**\n * Loads wasm transcoder module\n * @param options\n * @returns {BasisFile} promise\n */\nasync function loadBasisTrascoder(options) {\n  let BASIS = null;\n  let wasmBinary = null;\n\n  [BASIS, wasmBinary] = await Promise.all([\n    await loadLibrary('basis_transcoder.js', 'textures', options),\n    await loadLibrary('basis_transcoder.wasm', 'textures', options)\n  ]);\n\n  // Depends on how import happened...\n  // @ts-ignore TS2339: Property does not exist on type\n  BASIS = BASIS || globalThis.BASIS;\n  return await initializeBasisTrascoderModule(BASIS, wasmBinary);\n}\n\n/**\n * Initialize wasm transcoder module\n * @param BasisModule - js part of the module\n * @param wasmBinary - wasm part of the module\n * @returns {BasisFile} promise\n */\nfunction initializeBasisTrascoderModule(BasisModule, wasmBinary) {\n  const options: {wasmBinary?} = {};\n\n  if (wasmBinary) {\n    options.wasmBinary = wasmBinary;\n  }\n\n  return new Promise((resolve) => {\n    // if you try to return BasisModule the browser crashes!\n    BasisModule(options).then((module) => {\n      const {BasisFile, initializeBasis} = module;\n      initializeBasis();\n      resolve({BasisFile});\n    });\n  });\n}\n\nlet loadBasisEncoderPromise;\n\n/**\n * Loads wasm encoder module\n * @param options\n * @returns {BasisFile, KTX2File} promise\n */\nexport async function loadBasisEncoderModule(options) {\n  const modules = options.modules || {};\n  if (modules.basisEncoder) {\n    return modules.basisEncoder;\n  }\n\n  loadBasisEncoderPromise = loadBasisEncoderPromise || loadBasisEncoder(options);\n  return await loadBasisEncoderPromise;\n}\n\n/**\n * Loads wasm encoder module\n * @param options\n * @returns {BasisFile, KTX2File} promise\n */\nasync function loadBasisEncoder(options) {\n  let BASIS_ENCODER = null;\n  let wasmBinary = null;\n\n  [BASIS_ENCODER, wasmBinary] = await Promise.all([\n    await loadLibrary(BASIS_CDN_ENCODER_JS, 'textures', options),\n    await loadLibrary(BASIS_CDN_ENCODER_WASM, 'textures', options)\n  ]);\n\n  // Depends on how import happened...\n  // @ts-ignore TS2339: Property does not exist on type\n  BASIS_ENCODER = BASIS_ENCODER || globalThis.BASIS;\n  return await initializeBasisEncoderModule(BASIS_ENCODER, wasmBinary);\n}\n\n/**\n * Initialize wasm transcoder module\n * @param BasisEncoderModule - js part of the module\n * @param wasmBinary - wasm part of the module\n * @returns {BasisFile, KTX2File} promise\n */\nfunction initializeBasisEncoderModule(BasisEncoderModule, wasmBinary) {\n  const options: {wasmBinary?} = {};\n\n  if (wasmBinary) {\n    options.wasmBinary = wasmBinary;\n  }\n\n  return new Promise((resolve) => {\n    // if you try to return BasisModule the browser crashes!\n    BasisEncoderModule(options).then((module) => {\n      const {BasisFile, KTX2File, initializeBasis, BasisEncoder} = module;\n      initializeBasis();\n      resolve({BasisFile, KTX2File, BasisEncoder});\n    });\n  });\n}\n"]},"metadata":{},"sourceType":"module"}