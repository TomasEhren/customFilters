{"ast":null,"code":"const ALLOWED_ATTR_TYPES = Object.freeze(['function', 'string']);\nexport function getAttrValue(attr, d) {\n  assert(typeof d === 'object', 'Expected \"data\" to be an object');\n  assert(ALLOWED_ATTR_TYPES.includes(typeof attr), 'Expected \"attr\" to be a function or string');\n\n  if (typeof attr === 'function') {\n    return attr(d);\n  }\n\n  return d.properties[attr];\n}\nexport function assert(condition) {\n  let message = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n\n  if (!condition) {\n    throw new Error(\"CARTO style error: \".concat(message));\n  }\n}","map":{"version":3,"mappings":"AAAA,MAAMA,kBAAkB,GAAGC,MAAM,CAACC,MAAPD,CAAc,CAAC,UAAD,EAAa,QAAb,CAAdA,CAA3B;AAKA,OAAO,SAASE,YAAT,CAAsBC,IAAtB,EAA+CC,CAA/C,EAAgE;EACrEC,MAAM,CAAC,OAAOD,CAAP,KAAa,QAAd,EAAwB,iCAAxB,CAANC;EACAA,MAAM,CAACN,kBAAkB,CAACO,QAAnBP,CAA4B,OAAOI,IAAnCJ,CAAD,EAA2C,4CAA3C,CAANM;;EAGA,IAAI,OAAOF,IAAP,KAAgB,UAApB,EAAgC;IAC9B,OAAOA,IAAI,CAACC,CAAD,CAAX;EACD;;EACD,OAAOA,CAAC,CAACG,UAAFH,CAAaD,IAAbC,CAAP;AACD;AAED,OAAO,SAASC,MAAT,CAAgBG,SAAhB,EAA4D;EAAA,IAAjCC,OAAiC,uEAAvB,EAAuB;;EACjE,IAAI,CAACD,SAAL,EAAgB;IACd,MAAM,IAAIE,KAAJ,8BAAgCD,OAAhC,EAAN;EACD;AACF","names":["ALLOWED_ATTR_TYPES","Object","freeze","getAttrValue","attr","d","assert","includes","properties","condition","message","Error"],"sources":["../../../src/style/utils.ts"],"sourcesContent":["const ALLOWED_ATTR_TYPES = Object.freeze(['function', 'string']);\n\ntype Row = {properties: Record<string, unknown>};\nexport type AttributeSelector = string | ((d: Row) => unknown);\n\nexport function getAttrValue(attr: AttributeSelector, d: Row): unknown {\n  assert(typeof d === 'object', 'Expected \"data\" to be an object');\n  assert(ALLOWED_ATTR_TYPES.includes(typeof attr), 'Expected \"attr\" to be a function or string');\n\n  // Is function\n  if (typeof attr === 'function') {\n    return attr(d);\n  }\n  return d.properties[attr];\n}\n\nexport function assert(condition, message = ''): asserts condition {\n  if (!condition) {\n    throw new Error(`CARTO style error: ${message}`);\n  }\n}\n"]},"metadata":{},"sourceType":"module"}