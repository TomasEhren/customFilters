{"ast":null,"code":"import { resolvePath } from '@loaders.gl/loader-utils';\nexport function generateUrl(getUrl, options, urlOptions) {\n  let url = typeof getUrl === 'function' ? getUrl({ ...options,\n    ...urlOptions\n  }) : getUrl;\n  const baseUrl = options.baseUrl;\n\n  if (baseUrl) {\n    url = baseUrl[baseUrl.length - 1] === '/' ? \"\".concat(baseUrl).concat(url) : \"\".concat(baseUrl, \"/\").concat(url);\n  }\n\n  return resolvePath(url);\n}","map":{"version":3,"mappings":"AACA,SAAQA,WAAR,QAA0B,0BAA1B;AAIA,OAAO,SAASC,WAAT,CACLC,MADK,EAELC,OAFK,EAGLC,UAHK,EAIG;EAER,IAAIC,GAAG,GAAG,OAAOH,MAAP,KAAkB,UAAlB,GAA+BA,MAAM,CAAC,EAAC,GAAGC,OAAJ;IAAa,GAAGC;EAAhB,CAAD,CAArC,GAAqEF,MAA/E;EAGA,MAAMI,OAAO,GAAGH,OAAO,CAACG,OAAxB;;EACA,IAAIA,OAAJ,EAAa;IACXD,GAAG,GAAGC,OAAO,CAACA,OAAO,CAACC,MAARD,GAAiB,CAAlB,CAAPA,KAAgC,GAAhCA,aAAyCA,OAAzC,SAAmDD,GAAnD,cAA8DC,OAA9D,cAAyED,GAAzE,CAANA;EACD;;EAED,OAAOL,WAAW,CAACK,GAAD,CAAlB;AACD","names":["resolvePath","generateUrl","getUrl","options","urlOptions","url","baseUrl","length"],"sources":["../../../../src/lib/texture-api/generate-url.ts"],"sourcesContent":["// loaders.gl, MIT license\nimport {resolvePath} from '@loaders.gl/loader-utils';\nimport type {GetUrl, UrlOptions} from './texture-api-types';\n\n// Generate a url by calling getUrl with mix of options, applying options.baseUrl\nexport function generateUrl(\n  getUrl: string | GetUrl,\n  options: UrlOptions,\n  urlOptions: Record<string, any>\n): string {\n  // Get url\n  let url = typeof getUrl === 'function' ? getUrl({...options, ...urlOptions}) : getUrl;\n\n  // Apply options.baseUrl\n  const baseUrl = options.baseUrl;\n  if (baseUrl) {\n    url = baseUrl[baseUrl.length - 1] === '/' ? `${baseUrl}${url}` : `${baseUrl}/${url}`;\n  }\n\n  return resolvePath(url);\n}\n"]},"metadata":{},"sourceType":"module"}