{"ast":null,"code":"function isJSON(text) {\n  const firstChar = text[0];\n  const lastChar = text[text.length - 1];\n  return firstChar === '{' && lastChar === '}' || firstChar === '[' && lastChar === ']';\n}\n\nexport default {\n  name: 'JSON',\n  extensions: ['json', 'geojson'],\n  mimeTypes: ['application/json', 'application/geo+json'],\n  testText: isJSON,\n  parseTextSync: JSON.parse\n};","map":{"version":3,"mappings":"AAAA,SAASA,MAAT,CAAgBC,IAAhB,EAAuC;EACrC,MAAMC,SAAS,GAAGD,IAAI,CAAC,CAAD,CAAtB;EACA,MAAME,QAAQ,GAAGF,IAAI,CAACA,IAAI,CAACG,MAALH,GAAc,CAAf,CAArB;EACA,OAAQC,SAAS,KAAK,GAAdA,IAAqBC,QAAQ,KAAK,GAAlCD,IAA2CA,SAAS,KAAK,GAAdA,IAAqBC,QAAQ,KAAK,GAArF;AACD;;AAGD,eAAe;EACbE,IAAI,EAAE,MADO;EAGbC,UAAU,EAAE,CAAC,MAAD,EAAS,SAAT,CAHC;EAIbC,SAAS,EAAE,CAAC,kBAAD,EAAqB,sBAArB,CAJE;EAKbC,QAAQ,EAAER,MALG;EAMbS,aAAa,EAAEC,IAAI,CAACC;AANP,CAAf","names":["isJSON","text","firstChar","lastChar","length","name","extensions","mimeTypes","testText","parseTextSync","JSON","parse"],"sources":["../../../src/utils/json-loader.ts"],"sourcesContent":["function isJSON(text: string): boolean {\n  const firstChar = text[0];\n  const lastChar = text[text.length - 1];\n  return (firstChar === '{' && lastChar === '}') || (firstChar === '[' && lastChar === ']');\n}\n\n// TODO - replace with the version in loaders.gl\nexport default {\n  name: 'JSON',\n  // TODO - can we stream process geojson?\n  extensions: ['json', 'geojson'],\n  mimeTypes: ['application/json', 'application/geo+json'],\n  testText: isJSON,\n  parseTextSync: JSON.parse\n};\n"]},"metadata":{},"sourceType":"module"}