{"ast":null,"code":"import _objectSpread from \"/Users/tomasehrenfeld/projs/se-team/tomas/react-apps/custom_filter/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _classCallCheck from \"/Users/tomasehrenfeld/projs/se-team/tomas/react-apps/custom_filter/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/tomasehrenfeld/projs/se-team/tomas/react-apps/custom_filter/node_modules/@babel/runtime/helpers/esm/createClass.js\";\n\nvar ShaderAttribute = /*#__PURE__*/function () {\n  function ShaderAttribute(dataColumn, opts) {\n    _classCallCheck(this, ShaderAttribute);\n\n    this.opts = opts;\n    this.source = dataColumn;\n  }\n\n  _createClass(ShaderAttribute, [{\n    key: \"value\",\n    get: function get() {\n      return this.source.value;\n    }\n  }, {\n    key: \"getValue\",\n    value: function getValue() {\n      var buffer = this.source.getBuffer();\n      var accessor = this.getAccessor();\n\n      if (buffer) {\n        return [buffer, accessor];\n      }\n\n      var value = this.source.value;\n      var size = accessor.size;\n      var constantValue = value;\n\n      if (value && value.length !== size) {\n        constantValue = new Float32Array(size);\n        var index = accessor.elementOffset || 0;\n\n        for (var i = 0; i < size; ++i) {\n          constantValue[i] = value[index + i];\n        }\n      }\n\n      return constantValue;\n    }\n  }, {\n    key: \"getAccessor\",\n    value: function getAccessor() {\n      return _objectSpread(_objectSpread({}, this.source.getAccessor()), this.opts);\n    }\n  }]);\n\n  return ShaderAttribute;\n}();\n\nexport { ShaderAttribute as default };","map":{"version":3,"mappings":";;;;IAGqBA,e;EACnBC,yBAAYC,UAAZD,EAAwBE,IAAxBF,EAA8B;IAAA;;IAE5B,KAAKE,IAAL,GAAYA,IAAZ;IACA,KAAKC,MAAL,GAAcF,UAAd;EACD;;;;SAEQ,eAAG;MACV,OAAO,KAAKE,MAAL,CAAYC,KAAnB;IACD;;;WAEDC,oBAAW;MACT,IAAMC,MAAM,GAAG,KAAKH,MAAL,CAAYI,SAAZ,EAAf;MACA,IAAMC,QAAQ,GAAG,KAAKC,WAAL,EAAjB;;MACA,IAAIH,MAAJ,EAAY;QACV,OAAO,CAACA,MAAD,EAASE,QAAT,CAAP;MACD;;MAED,IAAOJ,KAAP,GAAgB,KAAKD,MAArB,CAAOC,KAAP;MACA,IAAOM,IAAP,GAAeF,QAAf,CAAOE,IAAP;MACA,IAAIC,aAAa,GAAGP,KAApB;;MAEA,IAAIA,KAAK,IAAIA,KAAK,CAACQ,MAANR,KAAiBM,IAA9B,EAAoC;QAClCC,aAAa,GAAG,IAAIE,YAAJ,CAAiBH,IAAjB,CAAhBC;QAEA,IAAMG,KAAK,GAAGN,QAAQ,CAACO,aAATP,IAA0B,CAAxC;;QACA,KAAK,IAAIQ,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGN,IAApB,EAA0B,EAAEM,CAA5B,EAA+B;UAC7BL,aAAa,CAACK,CAAD,CAAbL,GAAmBP,KAAK,CAACU,KAAK,GAAGE,CAAT,CAAxBL;QACD;MACF;;MAED,OAAOA,aAAP;IACD;;;WAEDF,uBAAc;MACZ,uCAEK,KAAKN,MAAL,CAAYM,WAAZ,EAFL,GAIK,KAAKP,IAJV;IAMD;;;;;;SAzCkBH,e","names":["ShaderAttribute","constructor","dataColumn","opts","source","value","getValue","buffer","getBuffer","accessor","getAccessor","size","constantValue","length","Float32Array","index","elementOffset","i"],"sources":["../../../../src/lib/attribute/shader-attribute.js"],"sourcesContent":["/* eslint-disable complexity */\n\n/* This class creates a luma.gl-compatible \"view\" on top of a DataColumn instance */\nexport default class ShaderAttribute {\n  constructor(dataColumn, opts) {\n    // Options that cannot be changed later\n    this.opts = opts;\n    this.source = dataColumn;\n  }\n\n  get value() {\n    return this.source.value;\n  }\n\n  getValue() {\n    const buffer = this.source.getBuffer();\n    const accessor = this.getAccessor();\n    if (buffer) {\n      return [buffer, accessor];\n    }\n\n    const {value} = this.source;\n    const {size} = accessor;\n    let constantValue = value;\n\n    if (value && value.length !== size) {\n      constantValue = new Float32Array(size);\n      // initiate offset values\n      const index = accessor.elementOffset || 0; // element offset\n      for (let i = 0; i < size; ++i) {\n        constantValue[i] = value[index + i];\n      }\n    }\n\n    return constantValue;\n  }\n\n  getAccessor() {\n    return {\n      // source data accessor\n      ...this.source.getAccessor(),\n      // shader attribute overrides\n      ...this.opts\n    };\n  }\n}\n"]},"metadata":{},"sourceType":"module"}