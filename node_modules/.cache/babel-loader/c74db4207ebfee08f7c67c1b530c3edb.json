{"ast":null,"code":"import _asyncToGenerator from \"/Users/tomasehrenfeld/projs/se-team/tomas/react-apps/custom_filter/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _regeneratorRuntime from \"/Users/tomasehrenfeld/projs/se-team/tomas/react-apps/custom_filter/node_modules/@babel/runtime/regenerator/index.js\";\nimport { GLTFLoader } from '@loaders.gl/gltf';\nexport function parseGltf3DTile(_x, _x2, _x3, _x4) {\n  return _parseGltf3DTile.apply(this, arguments);\n}\n\nfunction _parseGltf3DTile() {\n  _parseGltf3DTile = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(tile, arrayBuffer, options, context) {\n    var parse;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            tile.rotateYtoZ = true;\n            tile.gltfUpAxis = options['3d-tiles'] && options['3d-tiles'].assetGltfUpAxis ? options['3d-tiles'].assetGltfUpAxis : 'Y';\n            parse = context.parse;\n            _context.next = 5;\n            return parse(arrayBuffer, GLTFLoader, options, context);\n\n          case 5:\n            tile.gltf = _context.sent;\n\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _parseGltf3DTile.apply(this, arguments);\n}","map":{"version":3,"mappings":";;AAAA,SAAQA,UAAR,QAAyB,kBAAzB;AAEA,gBAAsBC,eAAtB;EAAA;AAAA;;;8EAAO,iBAA+BC,IAA/B,EAAqCC,WAArC,EAAkDC,OAAlD,EAA2DC,OAA3D;IAAA;IAAA;MAAA;QAAA;UAAA;YAILH,IAAI,CAACI,UAALJ,GAAkB,IAAlBA;YAEAA,IAAI,CAACK,UAALL,GACEE,OAAO,CAAC,UAAD,CAAPA,IAAuBA,OAAO,CAAC,UAAD,CAAPA,CAAoBI,eAA3CJ,GACIA,OAAO,CAAC,UAAD,CAAPA,CAAoBI,eADxBJ,GAEI,GAHNF;YAKOO,KAXF,GAWWJ,OAXX,CAWEI,KAXF;YAAA;YAAA,OAYaA,KAAK,CAACN,WAAD,EAAcH,UAAd,EAA0BI,OAA1B,EAAmCC,OAAnC,CAZlB;;UAAA;YAYLH,IAAI,CAACQ,IAZA;;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,C","names":["GLTFLoader","parseGltf3DTile","tile","arrayBuffer","options","context","rotateYtoZ","gltfUpAxis","assetGltfUpAxis","parse","gltf"],"sources":["../../../../src/lib/parsers/parse-3d-tile-gltf.js"],"sourcesContent":["import {GLTFLoader} from '@loaders.gl/gltf';\n\nexport async function parseGltf3DTile(tile, arrayBuffer, options, context) {\n  // Set flags\n  // glTF models need to be rotated from Y to Z up\n  // https://github.com/AnalyticalGraphicsInc/3d-tiles/tree/master/specification#y-up-to-z-up\n  tile.rotateYtoZ = true;\n  // Save gltf up axis\n  tile.gltfUpAxis =\n    options['3d-tiles'] && options['3d-tiles'].assetGltfUpAxis\n      ? options['3d-tiles'].assetGltfUpAxis\n      : 'Y';\n\n  const {parse} = context;\n  tile.gltf = await parse(arrayBuffer, GLTFLoader, options, context);\n}\n"]},"metadata":{},"sourceType":"module"}