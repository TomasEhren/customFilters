{"ast":null,"code":"import _objectSpread from\"/Users/tomasehrenfeld/projs/se-team/tomas/react-apps/custom_filter/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import{useSelector}from'react-redux';import{CartoLayer}from'@deck.gl/carto';import{selectSourceById}from'@carto/react-redux';import{useCartoLayerProps}from'@carto/react-api';import htmlForFeature from'utils/htmlForFeature';export var COUNTIES_LAYER_ID='countiesLayer';export default function CountiesLayer(){var _useSelector=useSelector(function(state){return state.carto.layers;}),countiesLayer=_useSelector.countiesLayer;var source=useSelector(function(state){return selectSourceById(state,countiesLayer===null||countiesLayer===void 0?void 0:countiesLayer.source);});var cartoLayerProps=useCartoLayerProps({source:source});if(countiesLayer&&source){return new CartoLayer(_objectSpread(_objectSpread({},cartoLayerProps),{},{id:COUNTIES_LAYER_ID,getFillColor:[195,199,198,0],pointRadiusMinPixels:1,getLineColor:[195,199,198],lineWidthMinPixels:0.3,pickable:true,onHover:function onHover(info){if(info!==null&&info!==void 0&&info.object){info.object={html:htmlForFeature({feature:info.object}),style:{}};}}}));}}","map":{"version":3,"names":["useSelector","CartoLayer","selectSourceById","useCartoLayerProps","htmlForFeature","COUNTIES_LAYER_ID","CountiesLayer","state","carto","layers","countiesLayer","source","cartoLayerProps","id","getFillColor","pointRadiusMinPixels","getLineColor","lineWidthMinPixels","pickable","onHover","info","object","html","feature","style"],"sources":["/Users/tomasehrenfeld/projs/se-team/tomas/react-apps/custom_filter/src/components/layers/CountiesLayer.js"],"sourcesContent":["import { useSelector } from 'react-redux';\nimport { CartoLayer } from '@deck.gl/carto';\nimport { selectSourceById } from '@carto/react-redux';\nimport { useCartoLayerProps } from '@carto/react-api';\nimport htmlForFeature from 'utils/htmlForFeature';\n\nexport const COUNTIES_LAYER_ID = 'countiesLayer';\n\nexport default function CountiesLayer() {\n  const { countiesLayer } = useSelector((state) => state.carto.layers);\n  const source = useSelector((state) => selectSourceById(state, countiesLayer?.source));\n  const cartoLayerProps = useCartoLayerProps({ source });\n\n  if (countiesLayer && source) {\n    return new CartoLayer({\n      ...cartoLayerProps,\n      id: COUNTIES_LAYER_ID,\n      getFillColor: [195, 199, 198, 0],\n      pointRadiusMinPixels: 1,\n      getLineColor: [195, 199, 198],\n      lineWidthMinPixels: 0.3,\n      pickable: true,\n      onHover: (info) => {\n        if (info?.object) {\n          info.object = {\n            html: htmlForFeature({ feature: info.object }),\n            style: {},\n          };\n        }\n      },\n    });\n  }\n}\n"],"mappings":"uJAAA,OAASA,WAAT,KAA4B,aAA5B,CACA,OAASC,UAAT,KAA2B,gBAA3B,CACA,OAASC,gBAAT,KAAiC,oBAAjC,CACA,OAASC,kBAAT,KAAmC,kBAAnC,CACA,MAAOC,CAAAA,cAAP,KAA2B,sBAA3B,CAEA,MAAO,IAAMC,CAAAA,iBAAiB,CAAG,eAA1B,CAEP,cAAe,SAASC,CAAAA,aAAT,EAAyB,CACtC,iBAA0BN,WAAW,CAAC,SAACO,KAAD,QAAWA,CAAAA,KAAK,CAACC,KAAN,CAAYC,MAAvB,EAAD,CAArC,CAAQC,aAAR,cAAQA,aAAR,CACA,GAAMC,CAAAA,MAAM,CAAGX,WAAW,CAAC,SAACO,KAAD,QAAWL,CAAAA,gBAAgB,CAACK,KAAD,CAAQG,aAAR,SAAQA,aAAR,iBAAQA,aAAa,CAAEC,MAAvB,CAA3B,EAAD,CAA1B,CACA,GAAMC,CAAAA,eAAe,CAAGT,kBAAkB,CAAC,CAAEQ,MAAM,CAANA,MAAF,CAAD,CAA1C,CAEA,GAAID,aAAa,EAAIC,MAArB,CAA6B,CAC3B,MAAO,IAAIV,CAAAA,UAAJ,gCACFW,eADE,MAELC,EAAE,CAAER,iBAFC,CAGLS,YAAY,CAAE,CAAC,GAAD,CAAM,GAAN,CAAW,GAAX,CAAgB,CAAhB,CAHT,CAILC,oBAAoB,CAAE,CAJjB,CAKLC,YAAY,CAAE,CAAC,GAAD,CAAM,GAAN,CAAW,GAAX,CALT,CAMLC,kBAAkB,CAAE,GANf,CAOLC,QAAQ,CAAE,IAPL,CAQLC,OAAO,CAAE,iBAACC,IAAD,CAAU,CACjB,GAAIA,IAAJ,SAAIA,IAAJ,WAAIA,IAAI,CAAEC,MAAV,CAAkB,CAChBD,IAAI,CAACC,MAAL,CAAc,CACZC,IAAI,CAAElB,cAAc,CAAC,CAAEmB,OAAO,CAAEH,IAAI,CAACC,MAAhB,CAAD,CADR,CAEZG,KAAK,CAAE,EAFK,CAAd,CAID,CACF,CAfI,GAAP,CAiBD,CACF"},"metadata":{},"sourceType":"module"}