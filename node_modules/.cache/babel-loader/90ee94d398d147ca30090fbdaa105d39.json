{"ast":null,"code":"import Vector from './base/vector';\nimport { config, isArray } from '../lib/common';\nimport { checkNumber } from '../lib/validators';\nimport * as vec4 from 'gl-matrix/vec3';\nimport { vec4_transformMat2, vec4_transformMat3 } from '../lib/gl-matrix-extras';\nconst constants = {};\nexport default class Vector4 extends Vector {\n  static get ZERO() {\n    return constants.ZERO = constants.ZERO || Object.freeze(new Vector4(0, 0, 0, 0));\n  }\n\n  constructor() {\n    let x = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    let y = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    let z = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n    let w = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n    super(-0, -0, -0, -0);\n\n    if (isArray(x) && arguments.length === 1) {\n      this.copy(x);\n    } else {\n      if (config.debug) {\n        checkNumber(x);\n        checkNumber(y);\n        checkNumber(z);\n        checkNumber(w);\n      }\n\n      this[0] = x;\n      this[1] = y;\n      this[2] = z;\n      this[3] = w;\n    }\n  }\n\n  set(x, y, z, w) {\n    this[0] = x;\n    this[1] = y;\n    this[2] = z;\n    this[3] = w;\n    return this.check();\n  }\n\n  copy(array) {\n    this[0] = array[0];\n    this[1] = array[1];\n    this[2] = array[2];\n    this[3] = array[3];\n    return this.check();\n  }\n\n  fromObject(object) {\n    if (config.debug) {\n      checkNumber(object.x);\n      checkNumber(object.y);\n      checkNumber(object.z);\n      checkNumber(object.w);\n    }\n\n    this[0] = object.x;\n    this[1] = object.y;\n    this[2] = object.z;\n    this[3] = object.w;\n    return this;\n  }\n\n  toObject(object) {\n    object.x = this[0];\n    object.y = this[1];\n    object.z = this[2];\n    object.w = this[3];\n    return object;\n  }\n\n  get ELEMENTS() {\n    return 4;\n  }\n\n  get z() {\n    return this[2];\n  }\n\n  set z(value) {\n    this[2] = checkNumber(value);\n  }\n\n  get w() {\n    return this[3];\n  }\n\n  set w(value) {\n    this[3] = checkNumber(value);\n  }\n\n  transform(matrix4) {\n    vec4.transformMat4(this, this, matrix4);\n    return this.check();\n  }\n\n  transformByMatrix3(matrix3) {\n    vec4_transformMat3(this, this, matrix3);\n    return this.check();\n  }\n\n  transformByMatrix2(matrix2) {\n    vec4_transformMat2(this, this, matrix2);\n    return this.check();\n  }\n\n  transformByQuaternion(quaternion) {\n    vec4.transformQuat(this, this, quaternion);\n    return this.check();\n  }\n\n  applyMatrix4(m) {\n    m.transform(this, this);\n    return this;\n  }\n\n}","map":{"version":3,"mappings":"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","names":["Vector","config","isArray","checkNumber","vec4","vec4_transformMat2","vec4_transformMat3","constants","Vector4","ZERO","Object","freeze","constructor","x","y","z","w","arguments","length","copy","debug","set","check","array","fromObject","object","toObject","ELEMENTS","value","transform","matrix4","transformMat4","transformByMatrix3","matrix3","transformByMatrix2","matrix2","transformByQuaternion","quaternion","transformQuat","applyMatrix4","m"],"sources":["../../../src/classes/vector4.js"],"sourcesContent":["// Copyright (c) 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport Vector from './base/vector';\nimport {config, isArray} from '../lib/common';\nimport {checkNumber} from '../lib/validators';\n\n// @ts-ignore: error TS2307: Cannot find module 'gl-matrix/...'.\nimport * as vec4 from 'gl-matrix/vec3';\n// eslint-disable-next-line camelcase\nimport {vec4_transformMat2, vec4_transformMat3} from '../lib/gl-matrix-extras';\n\nconst constants = {};\n\nexport default class Vector4 extends Vector {\n  static get ZERO() {\n    return (constants.ZERO = constants.ZERO || Object.freeze(new Vector4(0, 0, 0, 0)));\n  }\n\n  constructor(x = 0, y = 0, z = 0, w = 0) {\n    // PERF NOTE: initialize elements as double precision numbers\n    super(-0, -0, -0, -0);\n    if (isArray(x) && arguments.length === 1) {\n      this.copy(x);\n    } else {\n      // this.set(x, y, z, w);\n      if (config.debug) {\n        checkNumber(x);\n        checkNumber(y);\n        checkNumber(z);\n        checkNumber(w);\n      }\n      this[0] = x;\n      this[1] = y;\n      this[2] = z;\n      this[3] = w;\n    }\n  }\n\n  set(x, y, z, w) {\n    this[0] = x;\n    this[1] = y;\n    this[2] = z;\n    this[3] = w;\n    return this.check();\n  }\n\n  copy(array) {\n    this[0] = array[0];\n    this[1] = array[1];\n    this[2] = array[2];\n    this[3] = array[3];\n    return this.check();\n  }\n\n  fromObject(object) {\n    if (config.debug) {\n      checkNumber(object.x);\n      checkNumber(object.y);\n      checkNumber(object.z);\n      checkNumber(object.w);\n    }\n    this[0] = object.x;\n    this[1] = object.y;\n    this[2] = object.z;\n    this[3] = object.w;\n    return this;\n  }\n\n  toObject(object) {\n    object.x = this[0];\n    object.y = this[1];\n    object.z = this[2];\n    object.w = this[3];\n    return object;\n  }\n\n  // Getters/setters\n  /* eslint-disable no-multi-spaces, brace-style, no-return-assign */\n  get ELEMENTS() {\n    return 4;\n  }\n\n  // x,y inherited from Vector\n\n  get z() {\n    return this[2];\n  }\n\n  set z(value) {\n    this[2] = checkNumber(value);\n  }\n\n  get w() {\n    return this[3];\n  }\n\n  set w(value) {\n    this[3] = checkNumber(value);\n  }\n  /* eslint-enable no-multi-spaces, brace-style, no-return-assign */\n\n  transform(matrix4) {\n    vec4.transformMat4(this, this, matrix4);\n    return this.check();\n  }\n\n  transformByMatrix3(matrix3) {\n    vec4_transformMat3(this, this, matrix3);\n    return this.check();\n  }\n\n  transformByMatrix2(matrix2) {\n    vec4_transformMat2(this, this, matrix2);\n    return this.check();\n  }\n\n  transformByQuaternion(quaternion) {\n    vec4.transformQuat(this, this, quaternion);\n    return this.check();\n  }\n\n  // three.js compatibility\n  applyMatrix4(m) {\n    m.transform(this, this);\n    return this;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}