{"ast":null,"code":"import{selectSourceById}from'@carto/react-redux/';import{useSelector}from'react-redux';import{useMemo}from'react';/**\n * Obtain widget's filter values.\n *\n * @param  {object} props\n * @param  {string} props.dataSource - ID of the source to get the filters from.\n * @param  {string} props.id - ID of the widget that applied the filter.\n * @param  {string} props.column - name of column of this widget.\n * @param  {string} props.type - type of filter\n */export function useWidgetFilterValues(_ref){var dataSource=_ref.dataSource,id=_ref.id,column=_ref.column,type=_ref.type;var _useSelector=useSelector(function(state){return selectSourceById(state,dataSource)||{};}),filters=_useSelector.filters;return useMemo(function(){var _filters$column;var filter=filters===null||filters===void 0?void 0:(_filters$column=filters[column])===null||_filters$column===void 0?void 0:_filters$column[type];if(!filter||filter.owner!==id){return null;}return filter.values;},[filters,column,type,id]);}","map":{"version":3,"names":["selectSourceById","useSelector","useMemo","useWidgetFilterValues","dataSource","id","column","type","state","filters","filter","owner","values"],"sources":["/Users/tomasehrenfeld/projs/se-team/tomas/react-apps/custom_filter/src/components/widgets/useWidgetFilterValues.js"],"sourcesContent":["import { selectSourceById } from '@carto/react-redux/';\nimport { useSelector } from 'react-redux';\nimport { useMemo } from 'react';\n\n/**\n * Obtain widget's filter values.\n *\n * @param  {object} props\n * @param  {string} props.dataSource - ID of the source to get the filters from.\n * @param  {string} props.id - ID of the widget that applied the filter.\n * @param  {string} props.column - name of column of this widget.\n * @param  {string} props.type - type of filter\n */\nexport function useWidgetFilterValues({ dataSource, id, column, type }) {\n  const { filters } = useSelector((state) => selectSourceById(state, dataSource) || {});\n\n  return useMemo(() => {\n    const filter = filters?.[column]?.[type];\n    if (!filter || filter.owner !== id) {\n      return null;\n    }\n    return filter.values;\n  }, [filters, column, type, id]);\n}\n"],"mappings":"AAAA,OAASA,gBAAT,KAAiC,qBAAjC,CACA,OAASC,WAAT,KAA4B,aAA5B,CACA,OAASC,OAAT,KAAwB,OAAxB,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GACA,MAAO,SAASC,CAAAA,qBAAT,MAAiE,IAAhCC,CAAAA,UAAgC,MAAhCA,UAAgC,CAApBC,EAAoB,MAApBA,EAAoB,CAAhBC,MAAgB,MAAhBA,MAAgB,CAARC,IAAQ,MAARA,IAAQ,CACtE,iBAAoBN,WAAW,CAAC,SAACO,KAAD,QAAWR,CAAAA,gBAAgB,CAACQ,KAAD,CAAQJ,UAAR,CAAhB,EAAuC,EAAlD,EAAD,CAA/B,CAAQK,OAAR,cAAQA,OAAR,CAEA,MAAOP,CAAAA,OAAO,CAAC,UAAM,qBACnB,GAAMQ,CAAAA,MAAM,CAAGD,OAAH,SAAGA,OAAH,kCAAGA,OAAO,CAAGH,MAAH,CAAV,0CAAG,gBAAoBC,IAApB,CAAf,CACA,GAAI,CAACG,MAAD,EAAWA,MAAM,CAACC,KAAP,GAAiBN,EAAhC,CAAoC,CAClC,MAAO,KAAP,CACD,CACD,MAAOK,CAAAA,MAAM,CAACE,MAAd,CACD,CANa,CAMX,CAACH,OAAD,CAAUH,MAAV,CAAkBC,IAAlB,CAAwBF,EAAxB,CANW,CAAd,CAOD"},"metadata":{},"sourceType":"module"}