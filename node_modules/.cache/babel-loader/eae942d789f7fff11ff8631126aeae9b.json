{"ast":null,"code":"import _toConsumableArray from \"/Users/tomasehrenfeld/projs/se-team/tomas/react-apps/custom_filter/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _createForOfIteratorHelper from \"/Users/tomasehrenfeld/projs/se-team/tomas/react-apps/custom_filter/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport { createElement } from 'react';\nimport { View } from '@deck.gl/core';\nimport { inheritsFrom } from './inherits-from';\nimport evaluateChildren from './evaluate-children';\nexport default function positionChildrenUnderViews(_ref) {\n  var children = _ref.children,\n      deck = _ref.deck,\n      ContextProvider = _ref.ContextProvider;\n\n  var _ref2 = deck || {},\n      viewManager = _ref2.viewManager;\n\n  if (!viewManager || !viewManager.views.length) {\n    return [];\n  }\n\n  var views = {};\n  var defaultViewId = viewManager.views[0].id;\n\n  var _iterator = _createForOfIteratorHelper(children),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var child = _step.value;\n      var viewId = defaultViewId;\n      var viewChildren = child;\n\n      if (inheritsFrom(child.type, View)) {\n        viewId = child.props.id || defaultViewId;\n        viewChildren = child.props.children;\n      }\n\n      var viewport = viewManager.getViewport(viewId);\n      var viewState = viewManager.getViewState(viewId);\n\n      if (viewport) {\n        var x = viewport.x,\n            y = viewport.y,\n            width = viewport.width,\n            height = viewport.height;\n        viewChildren = evaluateChildren(viewChildren, {\n          x: x,\n          y: y,\n          width: width,\n          height: height,\n          viewport: viewport,\n          viewState: viewState\n        });\n\n        if (!views[viewId]) {\n          views[viewId] = {\n            viewport: viewport,\n            children: []\n          };\n        }\n\n        views[viewId].children.push(viewChildren);\n      }\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n\n  return Object.keys(views).map(function (viewId) {\n    var _views$viewId = views[viewId],\n        viewport = _views$viewId.viewport,\n        viewChildren = _views$viewId.children;\n    var x = viewport.x,\n        y = viewport.y,\n        width = viewport.width,\n        height = viewport.height;\n    var style = {\n      position: 'absolute',\n      left: x,\n      top: y,\n      width: width,\n      height: height\n    };\n    var key = \"view-\".concat(viewId);\n    var viewElement = createElement.apply(void 0, ['div', {\n      key: key,\n      id: key,\n      style: style\n    }].concat(_toConsumableArray(viewChildren)));\n\n    if (ContextProvider) {\n      var contextValue = {\n        viewport: viewport,\n        container: deck.canvas.offsetParent,\n        eventManager: deck.eventManager,\n        onViewStateChange: function onViewStateChange(params) {\n          params.viewId = viewId;\n\n          deck._onViewStateChange(params);\n        }\n      };\n      return createElement(ContextProvider, {\n        key: key,\n        value: contextValue\n      }, viewElement);\n    }\n\n    return viewElement;\n  });\n}","map":{"version":3,"mappings":";;AAAA,SAAQA,aAAR,QAA4B,OAA5B;AACA,SAAQC,IAAR,QAAmB,eAAnB;AACA,SAAQC,YAAR,QAA2B,iBAA3B;AACA,OAAOC,gBAAP,MAA6B,qBAA7B;AAIA,eAAe,SAASC,0BAAT,OAAuE;EAAA,IAAlCC,QAAkC,QAAlCA,QAAkC;EAAA,IAAxBC,IAAwB,QAAxBA,IAAwB;EAAA,IAAlBC,eAAkB,QAAlBA,eAAkB;;EACpF,YAAsBD,IAAI,IAAI,EAA9B;EAAA,IAAOE,WAAP,SAAOA,WAAP;;EAEA,IAAI,CAACA,WAAD,IAAgB,CAACA,WAAW,CAACC,KAAZD,CAAkBE,MAAvC,EAA+C;IAC7C,OAAO,EAAP;EACD;;EAED,IAAMD,KAAK,GAAG,EAAd;EACA,IAAME,aAAa,GAAGH,WAAW,CAACC,KAAZD,CAAkB,CAAlBA,EAAqBI,EAA3C;;EARoF,2CAWhEP,QAXgE;EAAA;;EAAA;IAWpF,oDAA8B;MAAA,IAAnBQ,KAAmB;MAE5B,IAAIC,MAAM,GAAGH,aAAb;MACA,IAAII,YAAY,GAAGF,KAAnB;;MAEA,IAAIX,YAAY,CAACW,KAAK,CAACG,IAAP,EAAaf,IAAb,CAAhB,EAAoC;QAClCa,MAAM,GAAGD,KAAK,CAACI,KAANJ,CAAYD,EAAZC,IAAkBF,aAA3BG;QACAC,YAAY,GAAGF,KAAK,CAACI,KAANJ,CAAYR,QAA3BU;MACD;;MAED,IAAMG,QAAQ,GAAGV,WAAW,CAACW,WAAZX,CAAwBM,MAAxBN,CAAjB;MACA,IAAMY,SAAS,GAAGZ,WAAW,CAACa,YAAZb,CAAyBM,MAAzBN,CAAlB;;MAGA,IAAIU,QAAJ,EAAc;QACZ,IAAOI,CAAP,GAA8BJ,QAA9B,CAAOI,CAAP;QAAA,IAAUC,CAAV,GAA8BL,QAA9B,CAAUK,CAAV;QAAA,IAAaC,KAAb,GAA8BN,QAA9B,CAAaM,KAAb;QAAA,IAAoBC,MAApB,GAA8BP,QAA9B,CAAoBO,MAApB;QAEAV,YAAY,GAAGZ,gBAAgB,CAACY,YAAD,EAAe;UAC5CO,CAD4C,EAC5CA,CAD4C;UAE5CC,CAF4C,EAE5CA,CAF4C;UAG5CC,KAH4C,EAG5CA,KAH4C;UAI5CC,MAJ4C,EAI5CA,MAJ4C;UAK5CP,QAL4C,EAK5CA,QAL4C;UAM5CE;QAN4C,CAAf,CAA/BL;;QASA,IAAI,CAACN,KAAK,CAACK,MAAD,CAAV,EAAoB;UAClBL,KAAK,CAACK,MAAD,CAALL,GAAgB;YACdS,QADc,EACdA,QADc;YAEdb,QAAQ,EAAE;UAFI,CAAhBI;QAID;;QACDA,KAAK,CAACK,MAAD,CAALL,CAAcJ,QAAdI,CAAuBiB,IAAvBjB,CAA4BM,YAA5BN;MACD;IACF;EA7CmF;IAAA;EAAA;IAAA;EAAA;;EAgDpF,OAAOkB,MAAM,CAACC,IAAPD,CAAYlB,KAAZkB,EAAmBE,GAAnBF,CAAuBb,gBAAM,EAAI;IACtC,oBAA2CL,KAAK,CAACK,MAAD,CAAhD;IAAA,IAAOI,QAAP,iBAAOA,QAAP;IAAA,IAA2BH,YAA3B,iBAAiBV,QAAjB;IACA,IAAOiB,CAAP,GAA8BJ,QAA9B,CAAOI,CAAP;IAAA,IAAUC,CAAV,GAA8BL,QAA9B,CAAUK,CAAV;IAAA,IAAaC,KAAb,GAA8BN,QAA9B,CAAaM,KAAb;IAAA,IAAoBC,MAApB,GAA8BP,QAA9B,CAAoBO,MAApB;IACA,IAAMK,KAAK,GAAG;MACZC,QAAQ,EAAE,UADE;MAEZC,IAAI,EAAEV,CAFM;MAGZW,GAAG,EAAEV,CAHO;MAIZC,KAJY,EAIZA,KAJY;MAKZC;IALY,CAAd;IAQA,IAAMS,GAAG,kBAAWpB,MAAX,CAAT;IAGA,IAAMqB,WAAW,GAAGnC,aAAa,MAAbA,UAAc,KAAdA,EAAqB;MAACkC,GAAD,EAACA,GAAD;MAAMtB,EAAE,EAAEsB,GAAV;MAAeJ;IAAf,CAArB9B,4BAA+Ce,YAA/Cf,GAApB;;IAEA,IAAIO,eAAJ,EAAqB;MACnB,IAAM6B,YAAY,GAAG;QACnBlB,QADmB,EACnBA,QADmB;QAEnBmB,SAAS,EAAE/B,IAAI,CAACgC,MAALhC,CAAYiC,YAFJ;QAGnBC,YAAY,EAAElC,IAAI,CAACkC,YAHA;QAInBC,iBAAiB,EAAEC,iCAAM,EAAI;UAC3BA,MAAM,CAAC5B,MAAP4B,GAAgB5B,MAAhB4B;;UACApC,IAAI,CAACqC,kBAALrC,CAAwBoC,MAAxBpC;QACD;MAPkB,CAArB;MASA,OAAON,aAAa,CAACO,eAAD,EAAkB;QAAC2B,GAAD,EAACA,GAAD;QAAMU,KAAK,EAAER;MAAb,CAAlB,EAA8CD,WAA9C,CAApB;IACD;;IAED,OAAOA,WAAP;EA7BK,EAAP;AA+BD","names":["createElement","View","inheritsFrom","evaluateChildren","positionChildrenUnderViews","children","deck","ContextProvider","viewManager","views","length","defaultViewId","id","child","viewId","viewChildren","type","props","viewport","getViewport","viewState","getViewState","x","y","width","height","push","Object","keys","map","style","position","left","top","key","viewElement","contextValue","container","canvas","offsetParent","eventManager","onViewStateChange","params","_onViewStateChange","value"],"sources":["../../../src/utils/position-children-under-views.js"],"sourcesContent":["import {createElement} from 'react';\nimport {View} from '@deck.gl/core';\nimport {inheritsFrom} from './inherits-from';\nimport evaluateChildren from './evaluate-children';\n\n// Iterate over views and reposition children associated with views\n// TODO - Can we supply a similar function for the non-React case?\nexport default function positionChildrenUnderViews({children, deck, ContextProvider}) {\n  const {viewManager} = deck || {};\n\n  if (!viewManager || !viewManager.views.length) {\n    return [];\n  }\n\n  const views = {};\n  const defaultViewId = viewManager.views[0].id;\n\n  // Sort children by view id\n  for (const child of children) {\n    // Unless child is a View, position / render as part of the default view\n    let viewId = defaultViewId;\n    let viewChildren = child;\n\n    if (inheritsFrom(child.type, View)) {\n      viewId = child.props.id || defaultViewId;\n      viewChildren = child.props.children;\n    }\n\n    const viewport = viewManager.getViewport(viewId);\n    const viewState = viewManager.getViewState(viewId);\n\n    // Drop (auto-hide) elements with viewId that are not matched by any current view\n    if (viewport) {\n      const {x, y, width, height} = viewport;\n      // Resolve potentially relative dimensions using the deck.gl container size\n      viewChildren = evaluateChildren(viewChildren, {\n        x,\n        y,\n        width,\n        height,\n        viewport,\n        viewState\n      });\n\n      if (!views[viewId]) {\n        views[viewId] = {\n          viewport,\n          children: []\n        };\n      }\n      views[viewId].children.push(viewChildren);\n    }\n  }\n\n  // Render views\n  return Object.keys(views).map(viewId => {\n    const {viewport, children: viewChildren} = views[viewId];\n    const {x, y, width, height} = viewport;\n    const style = {\n      position: 'absolute',\n      left: x,\n      top: y,\n      width,\n      height\n    };\n\n    const key = `view-${viewId}`;\n    // If children is passed as an array, React will throw the \"each element in a list needs\n    // a key\" warning. Sending each child as separate arguments removes this requirement.\n    const viewElement = createElement('div', {key, id: key, style}, ...viewChildren);\n\n    if (ContextProvider) {\n      const contextValue = {\n        viewport,\n        container: deck.canvas.offsetParent,\n        eventManager: deck.eventManager,\n        onViewStateChange: params => {\n          params.viewId = viewId;\n          deck._onViewStateChange(params);\n        }\n      };\n      return createElement(ContextProvider, {key, value: contextValue}, viewElement);\n    }\n\n    return viewElement;\n  });\n}\n"]},"metadata":{},"sourceType":"module"}