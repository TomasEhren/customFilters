{"ast":null,"code":"var _jsxFileName = \"/Users/tomasehrenfeld/projs/se-team/tomas/react-apps/custom_filter/src/components/common/map/GoogleMapsComponent.js\";\nimport { useSelector } from 'react-redux';\nimport 'mapbox-gl/dist/mapbox-gl.css';\nimport { BASEMAPS, GoogleMap } from '@carto/react-basemaps';\nimport { useMapHooks } from './useMapHooks';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function GoogleMapsComponent(_ref) {\n  let {\n    layers\n  } = _ref;\n  const viewState = useSelector(state => state.carto.viewState);\n  const basemap = useSelector(state => BASEMAPS[state.carto.basemap]);\n  const googleApiKey = useSelector(state => state.carto.googleApiKey);\n  const googleMapId = useSelector(state => state.carto.googleMapId);\n  const {\n    handleSizeChange,\n    handleTooltip,\n    handleViewStateChange\n  } = useMapHooks();\n  return /*#__PURE__*/_jsxDEV(GoogleMap, {\n    basemap: basemap,\n    apiKey: googleApiKey,\n    mapId: googleMapId,\n    viewState: { ...viewState\n    },\n    layers: layers,\n    onViewStateChange: handleViewStateChange,\n    onResize: handleSizeChange,\n    getTooltip: handleTooltip\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"names":["useSelector","BASEMAPS","GoogleMap","useMapHooks","GoogleMapsComponent","layers","viewState","state","carto","basemap","googleApiKey","googleMapId","handleSizeChange","handleTooltip","handleViewStateChange"],"sources":["/Users/tomasehrenfeld/projs/se-team/tomas/react-apps/custom_filter/src/components/common/map/GoogleMapsComponent.js"],"sourcesContent":["import { useSelector } from 'react-redux';\nimport 'mapbox-gl/dist/mapbox-gl.css';\nimport { BASEMAPS, GoogleMap } from '@carto/react-basemaps';\nimport { useMapHooks } from './useMapHooks';\n\nexport default function GoogleMapsComponent({ layers }) {\n  const viewState = useSelector((state) => state.carto.viewState);\n  const basemap = useSelector((state) => BASEMAPS[state.carto.basemap]);\n  const googleApiKey = useSelector((state) => state.carto.googleApiKey);\n  const googleMapId = useSelector((state) => state.carto.googleMapId);\n  const { handleSizeChange, handleTooltip, handleViewStateChange } = useMapHooks();\n\n  return (\n    <GoogleMap\n      basemap={basemap}\n      apiKey={googleApiKey}\n      mapId={googleMapId}\n      viewState={{ ...viewState }}\n      layers={layers}\n      onViewStateChange={handleViewStateChange}\n      onResize={handleSizeChange}\n      getTooltip={handleTooltip}\n    />\n  );\n}\n"],"mappings":";AAAA,SAASA,WAAT,QAA4B,aAA5B;AACA,OAAO,8BAAP;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,uBAApC;AACA,SAASC,WAAT,QAA4B,eAA5B;;AAEA,eAAe,SAASC,mBAAT,OAAyC;EAAA,IAAZ;IAAEC;EAAF,CAAY;EACtD,MAAMC,SAAS,GAAGN,WAAW,CAAEO,KAAD,IAAWA,KAAK,CAACC,KAAN,CAAYF,SAAxB,CAA7B;EACA,MAAMG,OAAO,GAAGT,WAAW,CAAEO,KAAD,IAAWN,QAAQ,CAACM,KAAK,CAACC,KAAN,CAAYC,OAAb,CAApB,CAA3B;EACA,MAAMC,YAAY,GAAGV,WAAW,CAAEO,KAAD,IAAWA,KAAK,CAACC,KAAN,CAAYE,YAAxB,CAAhC;EACA,MAAMC,WAAW,GAAGX,WAAW,CAAEO,KAAD,IAAWA,KAAK,CAACC,KAAN,CAAYG,WAAxB,CAA/B;EACA,MAAM;IAAEC,gBAAF;IAAoBC,aAApB;IAAmCC;EAAnC,IAA6DX,WAAW,EAA9E;EAEA,oBACE,QAAC,SAAD;IACE,OAAO,EAAEM,OADX;IAEE,MAAM,EAAEC,YAFV;IAGE,KAAK,EAAEC,WAHT;IAIE,SAAS,EAAE,EAAE,GAAGL;IAAL,CAJb;IAKE,MAAM,EAAED,MALV;IAME,iBAAiB,EAAES,qBANrB;IAOE,QAAQ,EAAEF,gBAPZ;IAQE,UAAU,EAAEC;EARd;IAAA;IAAA;IAAA;EAAA,QADF;AAYD"},"metadata":{},"sourceType":"module"}