{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nconst STATUS = {\n  REQUESTED: 'REQUESTED',\n  COMPLETED: 'COMPLETED',\n  ERROR: 'ERROR'\n};\nexport default class I3STileManager {\n  constructor() {\n    _defineProperty(this, \"_statusMap\", void 0);\n\n    this._statusMap = {};\n  }\n\n  add(request, key, callback, frameState) {\n    if (!this._statusMap[key]) {\n      this._statusMap[key] = {\n        request,\n        callback,\n        key,\n        frameState,\n        status: STATUS.REQUESTED\n      };\n      request().then(data => {\n        this._statusMap[key].status = STATUS.COMPLETED;\n\n        this._statusMap[key].callback(data, frameState);\n      }).catch(error => {\n        this._statusMap[key].status = STATUS.ERROR;\n        callback(error);\n      });\n    }\n  }\n\n  update(key, frameState) {\n    if (this._statusMap[key]) {\n      this._statusMap[key].frameState = frameState;\n    }\n  }\n\n  find(key) {\n    return this._statusMap[key];\n  }\n\n}","map":{"version":3,"mappings":";AAAA,MAAMA,MAAM,GAAG;EACbC,SAAS,EAAE,WADE;EAEbC,SAAS,EAAE,WAFE;EAGbC,KAAK,EAAE;AAHM,CAAf;AAOA,eAAe,MAAMC,cAAN,CAAqB;EAGlCC,WAAW,GAAG;IAAAC;;IACZ,KAAKC,UAAL,GAAkB,EAAlB;EACD;;EAEDC,GAAG,CAACC,OAAD,EAAUC,GAAV,EAAeC,QAAf,EAAyBC,UAAzB,EAAqC;IACtC,IAAI,CAAC,KAAKL,UAAL,CAAgBG,GAAhB,CAAL,EAA2B;MACzB,KAAKH,UAAL,CAAgBG,GAAhB,IAAuB;QAACD,OAAD;QAAUE,QAAV;QAAoBD,GAApB;QAAyBE,UAAzB;QAAqCC,MAAM,EAAEb,MAAM,CAACC;MAApD,CAAvB;MACAQ,OAAO,GACJK,IADHL,CACSM,IAAD,IAAU;QACd,KAAKR,UAAL,CAAgBG,GAAhB,EAAqBG,MAArB,GAA8Bb,MAAM,CAACE,SAArC;;QACA,KAAKK,UAAL,CAAgBG,GAAhB,EAAqBC,QAArB,CAA8BI,IAA9B,EAAoCH,UAApC;MAHJ,GAKGI,KALHP,CAKUQ,KAAD,IAAW;QAChB,KAAKV,UAAL,CAAgBG,GAAhB,EAAqBG,MAArB,GAA8Bb,MAAM,CAACG,KAArC;QACAQ,QAAQ,CAACM,KAAD,CAARN;MAPJ;IASD;EACF;;EAEDO,MAAM,CAACR,GAAD,EAAME,UAAN,EAAkB;IACtB,IAAI,KAAKL,UAAL,CAAgBG,GAAhB,CAAJ,EAA0B;MACxB,KAAKH,UAAL,CAAgBG,GAAhB,EAAqBE,UAArB,GAAkCA,UAAlC;IACD;EACF;;EAEDO,IAAI,CAACT,GAAD,EAAM;IACR,OAAO,KAAKH,UAAL,CAAgBG,GAAhB,CAAP;EACD;;AA9BiC","names":["STATUS","REQUESTED","COMPLETED","ERROR","I3STileManager","constructor","_defineProperty","_statusMap","add","request","key","callback","frameState","status","then","data","catch","error","update","find"],"sources":["../../../../src/tileset/traversers/i3s-tile-manager.ts"],"sourcesContent":["const STATUS = {\n  REQUESTED: 'REQUESTED',\n  COMPLETED: 'COMPLETED',\n  ERROR: 'ERROR'\n};\n\n// A helper class to manage tile metadata fetching\nexport default class I3STileManager {\n  private _statusMap: object;\n\n  constructor() {\n    this._statusMap = {};\n  }\n\n  add(request, key, callback, frameState) {\n    if (!this._statusMap[key]) {\n      this._statusMap[key] = {request, callback, key, frameState, status: STATUS.REQUESTED};\n      request()\n        .then((data) => {\n          this._statusMap[key].status = STATUS.COMPLETED;\n          this._statusMap[key].callback(data, frameState);\n        })\n        .catch((error) => {\n          this._statusMap[key].status = STATUS.ERROR;\n          callback(error);\n        });\n    }\n  }\n\n  update(key, frameState) {\n    if (this._statusMap[key]) {\n      this._statusMap[key].frameState = frameState;\n    }\n  }\n\n  find(key) {\n    return this._statusMap[key];\n  }\n}\n"]},"metadata":{},"sourceType":"module"}