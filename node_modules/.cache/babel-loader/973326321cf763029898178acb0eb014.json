{"ast":null,"code":"import { currencyFormatter, numberFormatter } from 'utils/formatter';\nconst FORMATTER_TYPES = Object.freeze({\n  CURRENCY: 'currency',\n  NUMBER: 'number'\n});\nconst formatterFunctions = {\n  [FORMATTER_TYPES.CURRENCY](value) {\n    const formatted = currencyFormatter(value);\n    return `${formatted.prefix}${formatted.value}`;\n  },\n\n  [FORMATTER_TYPES.NUMBER](value) {\n    return numberFormatter(value);\n  }\n\n};\nconst DEFAULT_FORMATTER = {\n  type: '',\n  columns: []\n};\nexport default function htmlForFeature(_ref) {\n  let {\n    title,\n    feature,\n    formatter = DEFAULT_FORMATTER,\n    includeColumns = '*',\n    showColumnName = true\n  } = _ref;\n\n  if (!feature) {\n    throw new Error(`htmlForFeature needs \"info.object\" information`);\n  }\n\n  const propertyNames = Object.keys(feature.properties);\n\n  if (formatter !== null && formatter !== void 0 && formatter.type && formatter !== null && formatter !== void 0 && formatter.columns && !isFormatterValid(propertyNames, formatter)) {\n    return;\n  }\n\n  if (!includedColumnsAreValid(propertyNames, includeColumns)) {\n    return;\n  }\n\n  let html = '';\n\n  if (title) {\n    html = `<h3 style=\"margin: 0\"><strong>${title}</strong></h3>`;\n  }\n\n  for (const name of propertyNames) {\n    if (name !== 'layerName' && (includeColumns.includes(name) || includeColumns === '*')) {\n      if (formatter !== null && formatter !== void 0 && formatter.columns.includes(name)) {\n        const formatterFunction = formatterFunctions[formatter.type];\n        html = generateHtml(feature, name, showColumnName, html, formatterFunction);\n      } else {\n        html = generateHtml(feature, name, showColumnName, html);\n      }\n    }\n  }\n\n  return html;\n}\n\nfunction generateHtml(feature, propertyName, showColumnName, html) {\n  let formatterFunction = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : v => v;\n  return html.concat(`${showColumnName ? `<strong>${propertyName}</strong>: ` : ''}${formatterFunction(feature.properties[propertyName])}<br/>`);\n}\n\nfunction isFormatterValid(properties, formatter) {\n  const supportedTypes = Object.values(FORMATTER_TYPES);\n\n  if (!supportedTypes.includes(formatter.type)) {\n    throw new Error(`\"${formatter.type}\" is not supported as formatter, use one of \"${supportedTypes}\"`);\n  }\n\n  if (!formatter.columns || formatter.columns.length === 0) return true;\n\n  if (!isArrayOfStrings(formatter.columns)) {\n    throw new Error(`\"formatter.columns\" property needs to be an array of strings`);\n  }\n\n  for (const column of formatter.columns) {\n    if (!properties.includes(column)) {\n      const available = properties.join(', ');\n      throw new Error(`\"formatted.columns\" includes '${column}' but it was not found!. Available cols are [${available}]`);\n    }\n  }\n\n  return true;\n}\n\nfunction includedColumnsAreValid(properties, includeColumns) {\n  if (includeColumns === '*') {\n    return true;\n  }\n\n  if (!isArrayOfStrings(includeColumns)) {\n    throw new Error(`\"includeColumns\" property needs to be an array of existing feature columns or \"*\"`);\n  }\n\n  if (isArrayOfStrings(includeColumns)) {\n    for (const column of includeColumns) {\n      if (!properties.includes(column)) {\n        throw new Error('colums set in \"includeColumns\" should exist in picked feature');\n      }\n    }\n  }\n\n  return true;\n}\n\nfunction isArrayOfStrings(value) {\n  return Array.isArray(value) && value.length && value.every(String);\n}","map":{"version":3,"names":["currencyFormatter","numberFormatter","FORMATTER_TYPES","Object","freeze","CURRENCY","NUMBER","formatterFunctions","value","formatted","prefix","DEFAULT_FORMATTER","type","columns","htmlForFeature","title","feature","formatter","includeColumns","showColumnName","Error","propertyNames","keys","properties","isFormatterValid","includedColumnsAreValid","html","name","includes","formatterFunction","generateHtml","propertyName","v","concat","supportedTypes","values","length","isArrayOfStrings","column","available","join","Array","isArray","every","String"],"sources":["/Users/tomasehrenfeld/projs/se-team/tomas/react-apps/custom_filter/src/utils/htmlForFeature.js"],"sourcesContent":["import { currencyFormatter, numberFormatter } from 'utils/formatter';\n\nconst FORMATTER_TYPES = Object.freeze({\n  CURRENCY: 'currency',\n  NUMBER: 'number',\n});\n\nconst formatterFunctions = {\n  [FORMATTER_TYPES.CURRENCY](value) {\n    const formatted = currencyFormatter(value);\n    return `${formatted.prefix}${formatted.value}`;\n  },\n  [FORMATTER_TYPES.NUMBER](value) {\n    return numberFormatter(value);\n  },\n};\n\nconst DEFAULT_FORMATTER = {\n  type: '',\n  columns: [],\n};\n\nexport default function htmlForFeature({\n  title,\n  feature,\n  formatter = DEFAULT_FORMATTER,\n  includeColumns = '*',\n  showColumnName = true,\n}) {\n  if (!feature) {\n    throw new Error(`htmlForFeature needs \"info.object\" information`);\n  }\n\n  const propertyNames = Object.keys(feature.properties);\n\n  if (\n    formatter?.type &&\n    formatter?.columns &&\n    !isFormatterValid(propertyNames, formatter)\n  ) {\n    return;\n  }\n\n  if (!includedColumnsAreValid(propertyNames, includeColumns)) {\n    return;\n  }\n\n  let html = '';\n\n  if (title) {\n    html = `<h3 style=\"margin: 0\"><strong>${title}</strong></h3>`;\n  }\n\n  for (const name of propertyNames) {\n    if (\n      name !== 'layerName' &&\n      (includeColumns.includes(name) || includeColumns === '*')\n    ) {\n      if (formatter?.columns.includes(name)) {\n        const formatterFunction = formatterFunctions[formatter.type];\n        html = generateHtml(feature, name, showColumnName, html, formatterFunction);\n      } else {\n        html = generateHtml(feature, name, showColumnName, html);\n      }\n    }\n  }\n\n  return html;\n}\n\nfunction generateHtml(\n  feature,\n  propertyName,\n  showColumnName,\n  html,\n  formatterFunction = (v) => v\n) {\n  return html.concat(\n    `${showColumnName ? `<strong>${propertyName}</strong>: ` : ''}${formatterFunction(\n      feature.properties[propertyName]\n    )}<br/>`\n  );\n}\n\nfunction isFormatterValid(properties, formatter) {\n  const supportedTypes = Object.values(FORMATTER_TYPES);\n\n  if (!supportedTypes.includes(formatter.type)) {\n    throw new Error(\n      `\"${formatter.type}\" is not supported as formatter, use one of \"${supportedTypes}\"`\n    );\n  }\n\n  if (!formatter.columns || formatter.columns.length === 0) return true;\n\n  if (!isArrayOfStrings(formatter.columns)) {\n    throw new Error(`\"formatter.columns\" property needs to be an array of strings`);\n  }\n\n  for (const column of formatter.columns) {\n    if (!properties.includes(column)) {\n      const available = properties.join(', ');\n      throw new Error(\n        `\"formatted.columns\" includes '${column}' but it was not found!. Available cols are [${available}]`\n      );\n    }\n  }\n\n  return true;\n}\n\nfunction includedColumnsAreValid(properties, includeColumns) {\n  if (includeColumns === '*') {\n    return true;\n  }\n\n  if (!isArrayOfStrings(includeColumns)) {\n    throw new Error(\n      `\"includeColumns\" property needs to be an array of existing feature columns or \"*\"`\n    );\n  }\n\n  if (isArrayOfStrings(includeColumns)) {\n    for (const column of includeColumns) {\n      if (!properties.includes(column)) {\n        throw new Error('colums set in \"includeColumns\" should exist in picked feature');\n      }\n    }\n  }\n\n  return true;\n}\n\nfunction isArrayOfStrings(value) {\n  return Array.isArray(value) && value.length && value.every(String);\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}