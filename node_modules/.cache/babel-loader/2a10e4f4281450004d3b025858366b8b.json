{"ast":null,"code":"import _objectSpread from \"/Users/tomasehrenfeld/projs/se-team/tomas/react-apps/custom_filter/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _slicedToArray from \"/Users/tomasehrenfeld/projs/se-team/tomas/react-apps/custom_filter/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport { lerp } from '@math.gl/core';\nvar availableTransformations = {\n  Point: Point,\n  MultiPoint: MultiPoint,\n  LineString: LineString,\n  MultiLineString: MultiLineString,\n  Polygon: Polygon,\n  MultiPolygon: MultiPolygon\n};\n\nfunction Point(_ref, _ref2, viewport) {\n  var _ref3 = _slicedToArray(_ref, 2),\n      pointX = _ref3[0],\n      pointY = _ref3[1];\n\n  var _ref4 = _slicedToArray(_ref2, 2),\n      nw = _ref4[0],\n      se = _ref4[1];\n\n  var x = lerp(nw[0], se[0], pointX);\n  var y = lerp(nw[1], se[1], pointY);\n  return viewport.unprojectFlat([x, y]);\n}\n\nfunction getPoints(geometry, bbox, viewport) {\n  return geometry.map(function (g) {\n    return Point(g, bbox, viewport);\n  });\n}\n\nfunction MultiPoint(multiPoint, bbox, viewport) {\n  return getPoints(multiPoint, bbox, viewport);\n}\n\nfunction LineString(line, bbox, viewport) {\n  return getPoints(line, bbox, viewport);\n}\n\nfunction MultiLineString(multiLineString, bbox, viewport) {\n  return multiLineString.map(function (lineString) {\n    return LineString(lineString, bbox, viewport);\n  });\n}\n\nfunction Polygon(polygon, bbox, viewport) {\n  return polygon.map(function (polygonRing) {\n    return getPoints(polygonRing, bbox, viewport);\n  });\n}\n\nfunction MultiPolygon(multiPolygon, bbox, viewport) {\n  return multiPolygon.map(function (polygon) {\n    return Polygon(polygon, bbox, viewport);\n  });\n}\n\nexport function transform(geometry, bbox, viewport) {\n  var nw = viewport.projectFlat([bbox.west, bbox.north]);\n  var se = viewport.projectFlat([bbox.east, bbox.south]);\n  var projectedBbox = [nw, se];\n  return _objectSpread(_objectSpread({}, geometry), {}, {\n    coordinates: availableTransformations[geometry.type](geometry.coordinates, projectedBbox, viewport)\n  });\n}","map":{"version":3,"mappings":"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","names":["lerp","availableTransformations","Point","MultiPoint","LineString","MultiLineString","Polygon","MultiPolygon","viewport","pointX","pointY","nw","se","x","y","unprojectFlat","getPoints","geometry","bbox","map","g","multiPoint","line","multiLineString","lineString","polygon","polygonRing","multiPolygon","transform","projectFlat","west","north","east","south","projectedBbox","coordinates","type"],"sources":["../../../src/mvt-layer/coordinate-transform.js"],"sourcesContent":["import {lerp} from '@math.gl/core';\n\nconst availableTransformations = {\n  Point,\n  MultiPoint,\n  LineString,\n  MultiLineString,\n  Polygon,\n  MultiPolygon\n};\n\nfunction Point([pointX, pointY], [nw, se], viewport) {\n  const x = lerp(nw[0], se[0], pointX);\n  const y = lerp(nw[1], se[1], pointY);\n\n  return viewport.unprojectFlat([x, y]);\n}\n\nfunction getPoints(geometry, bbox, viewport) {\n  return geometry.map(g => Point(g, bbox, viewport));\n}\n\nfunction MultiPoint(multiPoint, bbox, viewport) {\n  return getPoints(multiPoint, bbox, viewport);\n}\n\nfunction LineString(line, bbox, viewport) {\n  return getPoints(line, bbox, viewport);\n}\n\nfunction MultiLineString(multiLineString, bbox, viewport) {\n  return multiLineString.map(lineString => LineString(lineString, bbox, viewport));\n}\n\nfunction Polygon(polygon, bbox, viewport) {\n  return polygon.map(polygonRing => getPoints(polygonRing, bbox, viewport));\n}\n\nfunction MultiPolygon(multiPolygon, bbox, viewport) {\n  return multiPolygon.map(polygon => Polygon(polygon, bbox, viewport));\n}\n\nexport function transform(geometry, bbox, viewport) {\n  const nw = viewport.projectFlat([bbox.west, bbox.north]);\n  const se = viewport.projectFlat([bbox.east, bbox.south]);\n  const projectedBbox = [nw, se];\n\n  return {\n    ...geometry,\n    coordinates: availableTransformations[geometry.type](\n      geometry.coordinates,\n      projectedBbox,\n      viewport\n    )\n  };\n}\n"]},"metadata":{},"sourceType":"module"}