{"ast":null,"code":"import _objectSpread from\"/Users/tomasehrenfeld/projs/se-team/tomas/react-apps/custom_filter/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import{useSelector}from'react-redux';import'mapbox-gl/dist/mapbox-gl.css';import{BASEMAPS,GoogleMap}from'@carto/react-basemaps';import{useMapHooks}from'./useMapHooks';import{jsx as _jsx}from\"react/jsx-runtime\";export default function GoogleMapsComponent(_ref){var layers=_ref.layers;var viewState=useSelector(function(state){return state.carto.viewState;});var basemap=useSelector(function(state){return BASEMAPS[state.carto.basemap];});var googleApiKey=useSelector(function(state){return state.carto.googleApiKey;});var googleMapId=useSelector(function(state){return state.carto.googleMapId;});var _useMapHooks=useMapHooks(),handleSizeChange=_useMapHooks.handleSizeChange,handleTooltip=_useMapHooks.handleTooltip,handleViewStateChange=_useMapHooks.handleViewStateChange;return/*#__PURE__*/_jsx(GoogleMap,{basemap:basemap,apiKey:googleApiKey,mapId:googleMapId,viewState:_objectSpread({},viewState),layers:layers,onViewStateChange:handleViewStateChange,onResize:handleSizeChange,getTooltip:handleTooltip});}","map":{"version":3,"names":["useSelector","BASEMAPS","GoogleMap","useMapHooks","GoogleMapsComponent","layers","viewState","state","carto","basemap","googleApiKey","googleMapId","handleSizeChange","handleTooltip","handleViewStateChange"],"sources":["/Users/tomasehrenfeld/projs/se-team/tomas/react-apps/custom_filter/src/components/common/map/GoogleMapsComponent.js"],"sourcesContent":["import { useSelector } from 'react-redux';\nimport 'mapbox-gl/dist/mapbox-gl.css';\nimport { BASEMAPS, GoogleMap } from '@carto/react-basemaps';\nimport { useMapHooks } from './useMapHooks';\n\nexport default function GoogleMapsComponent({ layers }) {\n  const viewState = useSelector((state) => state.carto.viewState);\n  const basemap = useSelector((state) => BASEMAPS[state.carto.basemap]);\n  const googleApiKey = useSelector((state) => state.carto.googleApiKey);\n  const googleMapId = useSelector((state) => state.carto.googleMapId);\n  const { handleSizeChange, handleTooltip, handleViewStateChange } = useMapHooks();\n\n  return (\n    <GoogleMap\n      basemap={basemap}\n      apiKey={googleApiKey}\n      mapId={googleMapId}\n      viewState={{ ...viewState }}\n      layers={layers}\n      onViewStateChange={handleViewStateChange}\n      onResize={handleSizeChange}\n      getTooltip={handleTooltip}\n    />\n  );\n}\n"],"mappings":"uJAAA,OAASA,WAAT,KAA4B,aAA5B,CACA,MAAO,8BAAP,CACA,OAASC,QAAT,CAAmBC,SAAnB,KAAoC,uBAApC,CACA,OAASC,WAAT,KAA4B,eAA5B,C,2CAEA,cAAe,SAASC,CAAAA,mBAAT,MAAyC,IAAVC,CAAAA,MAAU,MAAVA,MAAU,CACtD,GAAMC,CAAAA,SAAS,CAAGN,WAAW,CAAC,SAACO,KAAD,QAAWA,CAAAA,KAAK,CAACC,KAAN,CAAYF,SAAvB,EAAD,CAA7B,CACA,GAAMG,CAAAA,OAAO,CAAGT,WAAW,CAAC,SAACO,KAAD,QAAWN,CAAAA,QAAQ,CAACM,KAAK,CAACC,KAAN,CAAYC,OAAb,CAAnB,EAAD,CAA3B,CACA,GAAMC,CAAAA,YAAY,CAAGV,WAAW,CAAC,SAACO,KAAD,QAAWA,CAAAA,KAAK,CAACC,KAAN,CAAYE,YAAvB,EAAD,CAAhC,CACA,GAAMC,CAAAA,WAAW,CAAGX,WAAW,CAAC,SAACO,KAAD,QAAWA,CAAAA,KAAK,CAACC,KAAN,CAAYG,WAAvB,EAAD,CAA/B,CACA,iBAAmER,WAAW,EAA9E,CAAQS,gBAAR,cAAQA,gBAAR,CAA0BC,aAA1B,cAA0BA,aAA1B,CAAyCC,qBAAzC,cAAyCA,qBAAzC,CAEA,mBACE,KAAC,SAAD,EACE,OAAO,CAAEL,OADX,CAEE,MAAM,CAAEC,YAFV,CAGE,KAAK,CAAEC,WAHT,CAIE,SAAS,kBAAOL,SAAP,CAJX,CAKE,MAAM,CAAED,MALV,CAME,iBAAiB,CAAES,qBANrB,CAOE,QAAQ,CAAEF,gBAPZ,CAQE,UAAU,CAAEC,aARd,EADF,CAYD"},"metadata":{},"sourceType":"module"}