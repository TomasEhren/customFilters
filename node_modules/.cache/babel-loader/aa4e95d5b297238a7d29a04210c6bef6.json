{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.TranslateMode = void 0;\n\nvar _bearing = _interopRequireDefault(require(\"@turf/bearing\"));\n\nvar _distance = _interopRequireDefault(require(\"@turf/distance\"));\n\nvar _transformTranslate = _interopRequireDefault(require(\"@turf/transform-translate\"));\n\nvar _helpers = require(\"@turf/helpers\");\n\nvar _viewportMercatorProject = _interopRequireDefault(require(\"viewport-mercator-project\"));\n\nvar _utils = require(\"../utils\");\n\nvar _geojsonEditMode = require(\"./geojson-edit-mode\");\n\nvar _immutableFeatureCollection = require(\"./immutable-feature-collection\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _createSuper(Derived) {\n  return function () {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (_isNativeReflectConstruct()) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nvar TranslateMode = /*#__PURE__*/function (_GeoJsonEditMode) {\n  _inherits(TranslateMode, _GeoJsonEditMode);\n\n  var _super = _createSuper(TranslateMode);\n\n  function TranslateMode() {\n    var _this;\n\n    _classCallCheck(this, TranslateMode);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"_geometryBeforeTranslate\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_isTranslatable\", void 0);\n\n    return _this;\n  }\n\n  _createClass(TranslateMode, [{\n    key: \"handleDragging\",\n    value: function handleDragging(event, props) {\n      if (!this._isTranslatable) {\n        // Nothing to do\n        return;\n      }\n\n      if (this._geometryBeforeTranslate) {\n        // Translate the geometry\n        var editAction = this.getTranslateAction(event.pointerDownMapCoords, event.mapCoords, 'translating', props);\n\n        if (editAction) {\n          props.onEdit(editAction);\n        }\n      } // cancel map panning\n\n\n      event.cancelPan();\n    }\n  }, {\n    key: \"handlePointerMove\",\n    value: function handlePointerMove(event, props) {\n      this._isTranslatable = this.isSelectionPicked(event.pointerDownPicks || event.picks, props);\n      this.updateCursor(props);\n    }\n  }, {\n    key: \"handleStartDragging\",\n    value: function handleStartDragging(event, props) {\n      if (!this._isTranslatable) {\n        return;\n      }\n\n      this._geometryBeforeTranslate = this.getSelectedFeaturesAsFeatureCollection(props);\n    }\n  }, {\n    key: \"handleStopDragging\",\n    value: function handleStopDragging(event, props) {\n      if (this._geometryBeforeTranslate) {\n        // Translate the geometry\n        var editAction = this.getTranslateAction(event.pointerDownMapCoords, event.mapCoords, 'translated', props);\n\n        if (editAction) {\n          props.onEdit(editAction);\n        }\n\n        this._geometryBeforeTranslate = null;\n      }\n    }\n  }, {\n    key: \"updateCursor\",\n    value: function updateCursor(props) {\n      if (this._isTranslatable) {\n        props.onUpdateCursor('move');\n      } else {\n        props.onUpdateCursor(null);\n      }\n    }\n  }, {\n    key: \"getTranslateAction\",\n    value: function getTranslateAction(startDragPoint, currentPoint, editType, props) {\n      var _this2 = this;\n\n      if (!this._geometryBeforeTranslate) {\n        return null;\n      }\n\n      var updatedData = new _immutableFeatureCollection.ImmutableFeatureCollection(props.data);\n      var selectedIndexes = props.selectedIndexes;\n\n      var _ref = props.modeConfig || {},\n          viewportDesc = _ref.viewport,\n          screenSpace = _ref.screenSpace;\n\n      if (viewportDesc && screenSpace) {\n        (function () {\n          var viewport = viewportDesc.project ? viewportDesc : new _viewportMercatorProject[\"default\"](viewportDesc);\n          var from = viewport.project(startDragPoint);\n          var to = viewport.project(currentPoint);\n          var dx = to[0] - from[0];\n          var dy = to[1] - from[1];\n\n          for (var i = 0; i < selectedIndexes.length; i++) {\n            var selectedIndex = selectedIndexes[i];\n            var feature = _this2._geometryBeforeTranslate.features[i];\n            var coordinates = feature.geometry.coordinates;\n\n            if (coordinates) {\n              coordinates = (0, _utils.mapCoords)(coordinates, function (coord) {\n                var pixels = viewport.project(coord);\n\n                if (pixels) {\n                  pixels[0] += dx;\n                  pixels[1] += dy;\n                  return viewport.unproject(pixels);\n                }\n\n                return null;\n              }); // @ts-ignore\n\n              updatedData = updatedData.replaceGeometry(selectedIndex, {\n                type: feature.geometry.type,\n                coordinates: coordinates\n              });\n            }\n          }\n        })();\n      } else {\n        var p1 = (0, _helpers.point)(startDragPoint);\n        var p2 = (0, _helpers.point)(currentPoint);\n        var distanceMoved = (0, _distance[\"default\"])(p1, p2);\n        var direction = (0, _bearing[\"default\"])(p1, p2);\n        var movedFeatures = (0, _transformTranslate[\"default\"])( // @ts-ignore\n        this._geometryBeforeTranslate, distanceMoved, direction);\n\n        for (var i = 0; i < selectedIndexes.length; i++) {\n          var selectedIndex = selectedIndexes[i];\n          var movedFeature = movedFeatures.features[i];\n          updatedData = updatedData.replaceGeometry(selectedIndex, movedFeature.geometry);\n        }\n      }\n\n      return {\n        updatedData: updatedData.getObject(),\n        editType: editType,\n        editContext: {\n          featureIndexes: selectedIndexes\n        }\n      };\n    }\n  }]);\n\n  return TranslateMode;\n}(_geojsonEditMode.GeoJsonEditMode);\n\nexports.TranslateMode = TranslateMode;","map":{"version":3,"mappings":"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","names":["TranslateMode","event","props","_isTranslatable","_geometryBeforeTranslate","editAction","getTranslateAction","pointerDownMapCoords","mapCoords","onEdit","cancelPan","isSelectionPicked","pointerDownPicks","picks","updateCursor","getSelectedFeaturesAsFeatureCollection","onUpdateCursor","startDragPoint","currentPoint","editType","updatedData","ImmutableFeatureCollection","data","selectedIndexes","modeConfig","viewportDesc","viewport","screenSpace","project","WebMercatorViewport","from","to","dx","dy","i","length","selectedIndex","feature","_this2","features","coordinates","geometry","coord","pixels","unproject","replaceGeometry","type","p1","p2","distanceMoved","direction","movedFeatures","movedFeature","getObject","editContext","featureIndexes","GeoJsonEditMode"],"sources":["../../src/lib/translate-mode.ts"],"sourcesContent":["import turfBearing from '@turf/bearing';\nimport turfDistance from '@turf/distance';\nimport turfTransformTranslate from '@turf/transform-translate';\nimport { point } from '@turf/helpers';\nimport WebMercatorViewport from 'viewport-mercator-project';\nimport { FeatureCollection, Position } from '../geojson-types';\nimport {\n  PointerMoveEvent,\n  StartDraggingEvent,\n  StopDraggingEvent,\n  DraggingEvent,\n  ModeProps,\n} from '../types';\nimport { mapCoords } from '../utils';\nimport { GeoJsonEditMode, GeoJsonEditAction } from './geojson-edit-mode';\nimport { ImmutableFeatureCollection } from './immutable-feature-collection';\n\nexport class TranslateMode extends GeoJsonEditMode {\n  _geometryBeforeTranslate: FeatureCollection | null | undefined;\n  _isTranslatable: boolean;\n\n  handleDragging(event: DraggingEvent, props: ModeProps<FeatureCollection>) {\n    if (!this._isTranslatable) {\n      // Nothing to do\n      return;\n    }\n\n    if (this._geometryBeforeTranslate) {\n      // Translate the geometry\n      const editAction = this.getTranslateAction(\n        event.pointerDownMapCoords,\n        event.mapCoords,\n        'translating',\n        props\n      );\n\n      if (editAction) {\n        props.onEdit(editAction);\n      }\n    }\n\n    // cancel map panning\n    event.cancelPan();\n  }\n\n  handlePointerMove(event: PointerMoveEvent, props: ModeProps<FeatureCollection>) {\n    this._isTranslatable = this.isSelectionPicked(event.pointerDownPicks || event.picks, props);\n\n    this.updateCursor(props);\n  }\n\n  handleStartDragging(event: StartDraggingEvent, props: ModeProps<FeatureCollection>) {\n    if (!this._isTranslatable) {\n      return;\n    }\n\n    this._geometryBeforeTranslate = this.getSelectedFeaturesAsFeatureCollection(props);\n  }\n\n  handleStopDragging(event: StopDraggingEvent, props: ModeProps<FeatureCollection>) {\n    if (this._geometryBeforeTranslate) {\n      // Translate the geometry\n      const editAction = this.getTranslateAction(\n        event.pointerDownMapCoords,\n        event.mapCoords,\n        'translated',\n        props\n      );\n\n      if (editAction) {\n        props.onEdit(editAction);\n      }\n\n      this._geometryBeforeTranslate = null;\n    }\n  }\n\n  updateCursor(props: ModeProps<FeatureCollection>) {\n    if (this._isTranslatable) {\n      props.onUpdateCursor('move');\n    } else {\n      props.onUpdateCursor(null);\n    }\n  }\n\n  getTranslateAction(\n    startDragPoint: Position,\n    currentPoint: Position,\n    editType: string,\n    props: ModeProps<FeatureCollection>\n  ): GeoJsonEditAction | null | undefined {\n    if (!this._geometryBeforeTranslate) {\n      return null;\n    }\n\n    let updatedData = new ImmutableFeatureCollection(props.data);\n    const selectedIndexes = props.selectedIndexes;\n\n    const { viewport: viewportDesc, screenSpace } = props.modeConfig || {};\n\n    if (viewportDesc && screenSpace) {\n      const viewport = viewportDesc.project ? viewportDesc : new WebMercatorViewport(viewportDesc);\n\n      const from = viewport.project(startDragPoint);\n      const to = viewport.project(currentPoint);\n      const dx = to[0] - from[0];\n      const dy = to[1] - from[1];\n\n      for (let i = 0; i < selectedIndexes.length; i++) {\n        const selectedIndex = selectedIndexes[i];\n        const feature = this._geometryBeforeTranslate.features[i];\n\n        let coordinates = feature.geometry.coordinates;\n        if (coordinates) {\n          coordinates = mapCoords(coordinates, (coord) => {\n            const pixels = viewport.project(coord);\n            if (pixels) {\n              pixels[0] += dx;\n              pixels[1] += dy;\n              return viewport.unproject(pixels);\n            }\n            return null;\n          });\n\n          // @ts-ignore\n          updatedData = updatedData.replaceGeometry(selectedIndex, {\n            type: feature.geometry.type,\n            coordinates,\n          });\n        }\n      }\n    } else {\n      const p1 = point(startDragPoint);\n      const p2 = point(currentPoint);\n\n      const distanceMoved = turfDistance(p1, p2);\n      const direction = turfBearing(p1, p2);\n\n      const movedFeatures = turfTransformTranslate(\n        // @ts-ignore\n        this._geometryBeforeTranslate,\n        distanceMoved,\n        direction\n      );\n\n      for (let i = 0; i < selectedIndexes.length; i++) {\n        const selectedIndex = selectedIndexes[i];\n        const movedFeature = movedFeatures.features[i];\n        updatedData = updatedData.replaceGeometry(selectedIndex, movedFeature.geometry);\n      }\n    }\n\n    return {\n      updatedData: updatedData.getObject(),\n      editType,\n      editContext: {\n        featureIndexes: selectedIndexes,\n      },\n    };\n  }\n}\n"]},"metadata":{},"sourceType":"script"}