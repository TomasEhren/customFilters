{"ast":null,"code":"import _objectSpread from \"/Users/tomasehrenfeld/projs/se-team/tomas/react-apps/custom_filter/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _defineProperty from \"/Users/tomasehrenfeld/projs/se-team/tomas/react-apps/custom_filter/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\n\nvar _DEFAULT_TEXTURE_PARA;\n\nimport { Texture2D } from '@luma.gl/core';\nvar DEFAULT_TEXTURE_PARAMETERS = (_DEFAULT_TEXTURE_PARA = {}, _defineProperty(_DEFAULT_TEXTURE_PARA, 10241, 9987), _defineProperty(_DEFAULT_TEXTURE_PARA, 10240, 9729), _defineProperty(_DEFAULT_TEXTURE_PARA, 10242, 33071), _defineProperty(_DEFAULT_TEXTURE_PARA, 10243, 33071), _DEFAULT_TEXTURE_PARA);\nvar internalTextures = {};\nexport function createTexture(layer, image) {\n  var gl = layer.context && layer.context.gl;\n\n  if (!gl || !image) {\n    return null;\n  }\n\n  if (image instanceof Texture2D) {\n    return image;\n  } else if (image.constructor && image.constructor.name !== 'Object') {\n    image = {\n      data: image\n    };\n  }\n\n  var specialTextureParameters = null;\n\n  if (image.compressed) {\n    specialTextureParameters = _defineProperty({}, 10241, image.data.length > 1 ? 9985 : 9729);\n  }\n\n  var texture = new Texture2D(gl, _objectSpread(_objectSpread({}, image), {}, {\n    parameters: _objectSpread(_objectSpread(_objectSpread({}, DEFAULT_TEXTURE_PARAMETERS), specialTextureParameters), layer.props.textureParameters)\n  }));\n  internalTextures[texture.id] = true;\n  return texture;\n}\nexport function destroyTexture(texture) {\n  if (!texture || !(texture instanceof Texture2D)) {\n    return;\n  }\n\n  if (internalTextures[texture.id]) {\n    texture.delete();\n    delete internalTextures[texture.id];\n  }\n}","map":{"version":3,"mappings":";;;;;AAAA,SAAQA,SAAR,QAAwB,eAAxB;AAGA,IAAMC,0BAA0B,uEAC9B,KAD8B,EAC9B,IAD8B,0CAE9B,KAF8B,EAE9B,IAF8B,0CAG9B,KAH8B,EAG9B,KAH8B,0CAI9B,KAJ8B,EAI9B,KAJ8B,yBAAhC;AAQA,IAAMC,gBAAgB,GAAG,EAAzB;AAEA,OAAO,SAASC,aAAT,CAAuBC,KAAvB,EAA8BC,KAA9B,EAAqC;EAC1C,IAAMC,EAAE,GAAGF,KAAK,CAACG,OAANH,IAAiBA,KAAK,CAACG,OAANH,CAAcE,EAA1C;;EACA,IAAI,CAACA,EAAD,IAAO,CAACD,KAAZ,EAAmB;IACjB,OAAO,IAAP;EACD;;EAMD,IAAIA,KAAK,YAAYL,SAArB,EAAgC;IAC9B,OAAOK,KAAP;EADF,OAEO,IAAIA,KAAK,CAACG,WAANH,IAAqBA,KAAK,CAACG,WAANH,CAAkBI,IAAlBJ,KAA2B,QAApD,EAA8D;IAEnEA,KAAK,GAAG;MAACK,IAAI,EAAEL;IAAP,CAARA;EACD;;EAED,IAAIM,wBAAoD,GAAG,IAA3D;;EACA,IAAIN,KAAK,CAACO,UAAV,EAAsB;IACpBD,wBAAwB,uBACtB,KADsB,EACGN,KAAK,CAACK,IAANL,CAAWQ,MAAXR,GAAoB,CAApBA,cADH,CAAxBM;EAGD;;EAED,IAAMG,OAAO,GAAG,IAAId,SAAJ,CAAcM,EAAd,kCACXD,KADW;IAEdU,UAAU,gDACLd,0BADK,GAELU,wBAFK,GAGLP,KAAK,CAACY,KAANZ,CAAYa,iBAHP;EAFI,GAAhB;EASAf,gBAAgB,CAACY,OAAO,CAACI,EAAT,CAAhBhB,GAA+B,IAA/BA;EACA,OAAOY,OAAP;AACD;AAED,OAAO,SAASK,cAAT,CAAwBL,OAAxB,EAAiC;EACtC,IAAI,CAACA,OAAD,IAAY,EAAEA,OAAO,YAAYd,SAArB,CAAhB,EAAiD;IAC/C;EACD;;EACD,IAAIE,gBAAgB,CAACY,OAAO,CAACI,EAAT,CAApB,EAAkC;IAChCJ,OAAO,CAACM,MAARN;IACA,OAAOZ,gBAAgB,CAACY,OAAO,CAACI,EAAT,CAAvB;EACD;AACF","names":["Texture2D","DEFAULT_TEXTURE_PARAMETERS","internalTextures","createTexture","layer","image","gl","context","constructor","name","data","specialTextureParameters","compressed","length","texture","parameters","props","textureParameters","id","destroyTexture","delete"],"sources":["../../../src/utils/texture.ts"],"sourcesContent":["import {Texture2D} from '@luma.gl/core';\nimport GL from '@luma.gl/constants';\n\nconst DEFAULT_TEXTURE_PARAMETERS = {\n  [GL.TEXTURE_MIN_FILTER]: GL.LINEAR_MIPMAP_LINEAR,\n  [GL.TEXTURE_MAG_FILTER]: GL.LINEAR,\n  [GL.TEXTURE_WRAP_S]: GL.CLAMP_TO_EDGE,\n  [GL.TEXTURE_WRAP_T]: GL.CLAMP_TO_EDGE\n};\n\n// Track the textures that are created by us. They need to be released when they are no longer used.\nconst internalTextures = {};\n\nexport function createTexture(layer, image) {\n  const gl = layer.context && layer.context.gl;\n  if (!gl || !image) {\n    return null;\n  }\n\n  // image could be one of:\n  //  - Texture2D\n  //  - Browser object: Image, ImageData, ImageData, HTMLCanvasElement, HTMLVideoElement, ImageBitmap\n  //  - Plain object: {width: <number>, height: <number>, data: <Uint8Array>}\n  if (image instanceof Texture2D) {\n    return image;\n  } else if (image.constructor && image.constructor.name !== 'Object') {\n    // Browser object\n    image = {data: image};\n  }\n\n  let specialTextureParameters: Record<string, any> | null = null;\n  if (image.compressed) {\n    specialTextureParameters = {\n      [GL.TEXTURE_MIN_FILTER]: image.data.length > 1 ? GL.LINEAR_MIPMAP_NEAREST : GL.LINEAR\n    };\n  }\n\n  const texture = new Texture2D(gl, {\n    ...image,\n    parameters: {\n      ...DEFAULT_TEXTURE_PARAMETERS,\n      ...specialTextureParameters,\n      ...layer.props.textureParameters\n    }\n  });\n  // Track this texture\n  internalTextures[texture.id] = true;\n  return texture;\n}\n\nexport function destroyTexture(texture) {\n  if (!texture || !(texture instanceof Texture2D)) {\n    return;\n  }\n  if (internalTextures[texture.id]) {\n    texture.delete();\n    delete internalTextures[texture.id];\n  }\n}\n"]},"metadata":{},"sourceType":"module"}