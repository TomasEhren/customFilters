{"ast":null,"code":"import _asyncToGenerator from \"/Users/tomasehrenfeld/projs/se-team/tomas/react-apps/custom_filter/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _regeneratorRuntime from \"/Users/tomasehrenfeld/projs/se-team/tomas/react-apps/custom_filter/node_modules/@babel/runtime/regenerator/index.js\";\nimport { ChildProcessProxy } from '@loaders.gl/worker-utils';\nexport function encodeImageURLToCompressedTextureURL(_x, _x2, _x3) {\n  return _encodeImageURLToCompressedTextureURL.apply(this, arguments);\n}\n\nfunction _encodeImageURLToCompressedTextureURL() {\n  _encodeImageURLToCompressedTextureURL = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(inputUrl, outputUrl, options) {\n    var args, childProcess;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            args = ['texture-compressor', '--type', 's3tc', '--compression', 'DXT1', '--quality', 'normal', '--input', inputUrl, '--output', outputUrl];\n            childProcess = new ChildProcessProxy();\n            _context.next = 4;\n            return childProcess.start({\n              command: 'npx',\n              arguments: args,\n              spawn: options\n            });\n\n          case 4:\n            return _context.abrupt(\"return\", outputUrl);\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _encodeImageURLToCompressedTextureURL.apply(this, arguments);\n}","map":{"version":3,"mappings":";;AAAA,SAAQA,iBAAR,QAAgC,0BAAhC;AAKA,gBAAsBC,oCAAtB;EAAA;AAAA;;;mGAAO,iBACLC,QADK,EAELC,SAFK,EAGLC,OAHK;IAAA;IAAA;MAAA;QAAA;UAAA;YAMCC,IAND,GAMQ,CAEX,oBAFW,EAGX,QAHW,EAGD,MAHC,EAIX,eAJW,EAIM,MAJN,EAKX,WALW,EAKE,QALF,EAMX,SANW,EAMAH,QANA,EAOX,UAPW,EAOCC,SAPD,CANR;YAeCG,YAfD,GAegB,IAAIN,iBAAJ,EAfhB;YAAA;YAAA,OAgBCM,YAAY,CAACC,KAAbD,CAAmB;cACvBE,OAAO,EAAE,KADc;cAEvBC,SAAS,EAAEJ,IAFY;cAGvBK,KAAK,EAAEN;YAHgB,CAAnBE,CAhBD;;UAAA;YAAA,iCAqBEH,SArBF;;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,C","names":["ChildProcessProxy","encodeImageURLToCompressedTextureURL","inputUrl","outputUrl","options","args","childProcess","start","command","arguments","spawn"],"sources":["../../../../src/lib/encoders/encode-texture.ts"],"sourcesContent":["import {ChildProcessProxy} from '@loaders.gl/worker-utils';\n\n/*\n * @see https://github.com/TimvanScherpenzeel/texture-compressor\n */\nexport async function encodeImageURLToCompressedTextureURL(\n  inputUrl: string,\n  outputUrl: string,\n  options?: {cwd?: string}\n): Promise<string> {\n  // prettier-ignore\n  const args = [\n    // Note: our actual executable is `npx`, so `texture-compressor` is an argument\n    'texture-compressor',\n    '--type', 's3tc',\n    '--compression', 'DXT1',\n    '--quality', 'normal',\n    '--input', inputUrl,\n    '--output', outputUrl\n  ];\n  const childProcess = new ChildProcessProxy();\n  await childProcess.start({\n    command: 'npx',\n    arguments: args,\n    spawn: options\n  });\n  return outputUrl;\n}\n"]},"metadata":{},"sourceType":"module"}