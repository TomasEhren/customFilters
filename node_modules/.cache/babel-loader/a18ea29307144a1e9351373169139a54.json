{"ast":null,"code":"import Vector from './base/vector';\nimport { config, isArray } from '../lib/common';\nimport { checkNumber } from '../lib/validators';\nimport * as vec3 from 'gl-matrix/vec3';\nimport { vec3_transformMat2, vec3_transformMat4AsVector } from '../lib/gl-matrix-extras';\nconst ORIGIN = [0, 0, 0];\nconst constants = {};\nexport default class Vector3 extends Vector {\n  static get ZERO() {\n    return constants.ZERO = constants.ZERO || Object.freeze(new Vector3(0, 0, 0, 0));\n  }\n\n  constructor() {\n    let x = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    let y = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    let z = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n    super(-0, -0, -0);\n\n    if (arguments.length === 1 && isArray(x)) {\n      this.copy(x);\n    } else {\n      if (config.debug) {\n        checkNumber(x);\n        checkNumber(y);\n        checkNumber(z);\n      }\n\n      this[0] = x;\n      this[1] = y;\n      this[2] = z;\n    }\n  }\n\n  set(x, y, z) {\n    this[0] = x;\n    this[1] = y;\n    this[2] = z;\n    return this.check();\n  }\n\n  copy(array) {\n    this[0] = array[0];\n    this[1] = array[1];\n    this[2] = array[2];\n    return this.check();\n  }\n\n  fromObject(object) {\n    if (config.debug) {\n      checkNumber(object.x);\n      checkNumber(object.y);\n      checkNumber(object.z);\n    }\n\n    this[0] = object.x;\n    this[1] = object.y;\n    this[2] = object.z;\n    return this.check();\n  }\n\n  toObject(object) {\n    object.x = this[0];\n    object.y = this[1];\n    object.z = this[2];\n    return object;\n  }\n\n  get ELEMENTS() {\n    return 3;\n  }\n\n  get z() {\n    return this[2];\n  }\n\n  set z(value) {\n    this[2] = checkNumber(value);\n  }\n\n  angle(vector) {\n    return vec3.angle(this, vector);\n  }\n\n  cross(vector) {\n    vec3.cross(this, this, vector);\n    return this.check();\n  }\n\n  rotateX(_ref) {\n    let {\n      radians,\n      origin = ORIGIN\n    } = _ref;\n    vec3.rotateX(this, this, origin, radians);\n    return this.check();\n  }\n\n  rotateY(_ref2) {\n    let {\n      radians,\n      origin = ORIGIN\n    } = _ref2;\n    vec3.rotateY(this, this, origin, radians);\n    return this.check();\n  }\n\n  rotateZ(_ref3) {\n    let {\n      radians,\n      origin = ORIGIN\n    } = _ref3;\n    vec3.rotateZ(this, this, origin, radians);\n    return this.check();\n  }\n\n  transform(matrix4) {\n    return this.transformAsPoint(matrix4);\n  }\n\n  transformAsPoint(matrix4) {\n    vec3.transformMat4(this, this, matrix4);\n    return this.check();\n  }\n\n  transformAsVector(matrix4) {\n    vec3_transformMat4AsVector(this, this, matrix4);\n    return this.check();\n  }\n\n  transformByMatrix3(matrix3) {\n    vec3.transformMat3(this, this, matrix3);\n    return this.check();\n  }\n\n  transformByMatrix2(matrix2) {\n    vec3_transformMat2(this, this, matrix2);\n    return this.check();\n  }\n\n  transformByQuaternion(quaternion) {\n    vec3.transformQuat(this, this, quaternion);\n    return this.check();\n  }\n\n}","map":{"version":3,"mappings":"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","names":["Vector","config","isArray","checkNumber","vec3","vec3_transformMat2","vec3_transformMat4AsVector","ORIGIN","constants","Vector3","ZERO","Object","freeze","constructor","x","y","z","arguments","length","copy","debug","set","check","array","fromObject","object","toObject","ELEMENTS","value","angle","vector","cross","rotateX","radians","origin","rotateY","rotateZ","transform","matrix4","transformAsPoint","transformMat4","transformAsVector","transformByMatrix3","matrix3","transformMat3","transformByMatrix2","matrix2","transformByQuaternion","quaternion","transformQuat"],"sources":["../../../src/classes/vector3.js"],"sourcesContent":["// Copyright (c) 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport Vector from './base/vector';\nimport {config, isArray} from '../lib/common';\nimport {checkNumber} from '../lib/validators';\n\n// @ts-ignore: error TS2307: Cannot find module 'gl-matrix/...'.\nimport * as vec3 from 'gl-matrix/vec3';\n// eslint-disable-next-line camelcase\nimport {vec3_transformMat2, vec3_transformMat4AsVector} from '../lib/gl-matrix-extras';\n\nconst ORIGIN = [0, 0, 0];\nconst constants = {};\n\nexport default class Vector3 extends Vector {\n  static get ZERO() {\n    return (constants.ZERO = constants.ZERO || Object.freeze(new Vector3(0, 0, 0, 0)));\n  }\n\n  /**\n   * @class\n   * @param {Number | [Number, Number, Number]} x\n   * @param {Number} y - rotation around X (latitude)\n   * @param {Number} z - rotation around X (latitude)\n   */\n  constructor(x = 0, y = 0, z = 0) {\n    // PERF NOTE: initialize elements as double precision numbers\n    super(-0, -0, -0);\n    if (arguments.length === 1 && isArray(x)) {\n      this.copy(x);\n    } else {\n      // this.set(x, y, z);\n      if (config.debug) {\n        checkNumber(x);\n        checkNumber(y);\n        checkNumber(z);\n      }\n      // @ts-ignore TS2412: Property '0' of type 'number | [number, number, number]' is not assignable to numeric index type 'number'\n      this[0] = x;\n      this[1] = y;\n      this[2] = z;\n    }\n  }\n\n  set(x, y, z) {\n    this[0] = x;\n    this[1] = y;\n    this[2] = z;\n    return this.check();\n  }\n\n  copy(array) {\n    this[0] = array[0];\n    this[1] = array[1];\n    this[2] = array[2];\n    return this.check();\n  }\n\n  fromObject(object) {\n    if (config.debug) {\n      checkNumber(object.x);\n      checkNumber(object.y);\n      checkNumber(object.z);\n    }\n    this[0] = object.x;\n    this[1] = object.y;\n    this[2] = object.z;\n    return this.check();\n  }\n\n  toObject(object) {\n    object.x = this[0];\n    object.y = this[1];\n    object.z = this[2];\n    return object;\n  }\n\n  // Getters/setters\n  /* eslint-disable no-multi-spaces, brace-style, no-return-assign */\n  get ELEMENTS() {\n    return 3;\n  }\n\n  // x,y inherited from Vector\n\n  get z() {\n    return this[2];\n  }\n  set z(value) {\n    this[2] = checkNumber(value);\n  }\n  /* eslint-enable no-multi-spaces, brace-style, no-return-assign */\n\n  angle(vector) {\n    return vec3.angle(this, vector);\n  }\n\n  // MODIFIERS\n\n  cross(vector) {\n    vec3.cross(this, this, vector);\n    return this.check();\n  }\n\n  rotateX({radians, origin = ORIGIN}) {\n    vec3.rotateX(this, this, origin, radians);\n    return this.check();\n  }\n\n  rotateY({radians, origin = ORIGIN}) {\n    vec3.rotateY(this, this, origin, radians);\n    return this.check();\n  }\n\n  rotateZ({radians, origin = ORIGIN}) {\n    vec3.rotateZ(this, this, origin, radians);\n    return this.check();\n  }\n\n  // Transforms\n\n  // transforms as point (4th component is implicitly 1)\n  transform(matrix4) {\n    return this.transformAsPoint(matrix4);\n  }\n\n  // transforms as point (4th component is implicitly 1)\n  transformAsPoint(matrix4) {\n    vec3.transformMat4(this, this, matrix4);\n    return this.check();\n  }\n\n  // transforms as vector  (4th component is implicitly 0, ignores translation. slightly faster)\n  transformAsVector(matrix4) {\n    vec3_transformMat4AsVector(this, this, matrix4);\n    return this.check();\n  }\n\n  transformByMatrix3(matrix3) {\n    vec3.transformMat3(this, this, matrix3);\n    return this.check();\n  }\n\n  transformByMatrix2(matrix2) {\n    vec3_transformMat2(this, this, matrix2);\n    return this.check();\n  }\n\n  transformByQuaternion(quaternion) {\n    vec3.transformQuat(this, this, quaternion);\n    return this.check();\n  }\n}\n"]},"metadata":{},"sourceType":"module"}