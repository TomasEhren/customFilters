{"ast":null,"code":"import _objectSpread from \"/Users/tomasehrenfeld/projs/se-team/tomas/react-apps/custom_filter/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _createClass from \"/Users/tomasehrenfeld/projs/se-team/tomas/react-apps/custom_filter/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _classCallCheck from \"/Users/tomasehrenfeld/projs/se-team/tomas/react-apps/custom_filter/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _inherits from \"/Users/tomasehrenfeld/projs/se-team/tomas/react-apps/custom_filter/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/tomasehrenfeld/projs/se-team/tomas/react-apps/custom_filter/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport Geometry from '../geometry/geometry';\nimport { uid } from '@luma.gl/webgl';\n\nvar SphereGeometry = /*#__PURE__*/function (_Geometry) {\n  _inherits(SphereGeometry, _Geometry);\n\n  var _super = _createSuper(SphereGeometry);\n\n  function SphereGeometry() {\n    var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, SphereGeometry);\n\n    var _props$id = props.id,\n        id = _props$id === void 0 ? uid('sphere-geometry') : _props$id;\n\n    var _tesselateSphere = tesselateSphere(props),\n        indices = _tesselateSphere.indices,\n        attributes = _tesselateSphere.attributes;\n\n    return _super.call(this, _objectSpread(_objectSpread({}, props), {}, {\n      id: id,\n      indices: indices,\n      attributes: _objectSpread(_objectSpread({}, attributes), props.attributes)\n    }));\n  }\n\n  return _createClass(SphereGeometry);\n}(Geometry);\n\nexport { SphereGeometry as default };\n\nfunction tesselateSphere(props) {\n  var _props$nlat = props.nlat,\n      nlat = _props$nlat === void 0 ? 10 : _props$nlat,\n      _props$nlong = props.nlong,\n      nlong = _props$nlong === void 0 ? 10 : _props$nlong;\n  var _props$radius = props.radius,\n      radius = _props$radius === void 0 ? 1 : _props$radius;\n  var startLat = 0;\n  var endLat = Math.PI;\n  var latRange = endLat - startLat;\n  var startLong = 0;\n  var endLong = 2 * Math.PI;\n  var longRange = endLong - startLong;\n  var numVertices = (nlat + 1) * (nlong + 1);\n\n  if (typeof radius === 'number') {\n    var value = radius;\n\n    radius = function radius(n1, n2, n3, u, v) {\n      return value;\n    };\n  }\n\n  var positions = new Float32Array(numVertices * 3);\n  var normals = new Float32Array(numVertices * 3);\n  var texCoords = new Float32Array(numVertices * 2);\n  var IndexType = numVertices > 0xffff ? Uint32Array : Uint16Array;\n  var indices = new IndexType(nlat * nlong * 6);\n\n  for (var y = 0; y <= nlat; y++) {\n    for (var x = 0; x <= nlong; x++) {\n      var u = x / nlong;\n      var v = y / nlat;\n      var index = x + y * (nlong + 1);\n      var i2 = index * 2;\n      var i3 = index * 3;\n      var theta = longRange * u;\n      var phi = latRange * v;\n      var sinTheta = Math.sin(theta);\n      var cosTheta = Math.cos(theta);\n      var sinPhi = Math.sin(phi);\n      var cosPhi = Math.cos(phi);\n      var ux = cosTheta * sinPhi;\n      var uy = cosPhi;\n      var uz = sinTheta * sinPhi;\n      var r = radius(ux, uy, uz, u, v);\n      positions[i3 + 0] = r * ux;\n      positions[i3 + 1] = r * uy;\n      positions[i3 + 2] = r * uz;\n      normals[i3 + 0] = ux;\n      normals[i3 + 1] = uy;\n      normals[i3 + 2] = uz;\n      texCoords[i2 + 0] = u;\n      texCoords[i2 + 1] = 1 - v;\n    }\n  }\n\n  var numVertsAround = nlong + 1;\n\n  for (var _x = 0; _x < nlong; _x++) {\n    for (var _y = 0; _y < nlat; _y++) {\n      var _index = (_x * nlat + _y) * 6;\n\n      indices[_index + 0] = _y * numVertsAround + _x;\n      indices[_index + 1] = _y * numVertsAround + _x + 1;\n      indices[_index + 2] = (_y + 1) * numVertsAround + _x;\n      indices[_index + 3] = (_y + 1) * numVertsAround + _x;\n      indices[_index + 4] = _y * numVertsAround + _x + 1;\n      indices[_index + 5] = (_y + 1) * numVertsAround + _x + 1;\n    }\n  }\n\n  return {\n    indices: {\n      size: 1,\n      value: indices\n    },\n    attributes: {\n      POSITION: {\n        size: 3,\n        value: positions\n      },\n      NORMAL: {\n        size: 3,\n        value: normals\n      },\n      TEXCOORD_0: {\n        size: 2,\n        value: texCoords\n      }\n    }\n  };\n}","map":{"version":3,"mappings":"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","names":["Geometry","uid","SphereGeometry","constructor","props","id","tesselateSphere","indices","attributes","nlat","nlong","radius","startLat","endLat","Math","PI","latRange","startLong","endLong","longRange","numVertices","value","n1","n2","n3","u","v","positions","Float32Array","normals","texCoords","IndexType","Uint32Array","Uint16Array","y","x","index","i2","i3","theta","phi","sinTheta","sin","cosTheta","cos","sinPhi","cosPhi","ux","uy","uz","r","numVertsAround","size","POSITION","NORMAL","TEXCOORD_0"],"sources":["../../../src/geometries/sphere-geometry.js"],"sourcesContent":["import Geometry from '../geometry/geometry';\nimport {uid} from '@luma.gl/webgl';\n\nexport default class SphereGeometry extends Geometry {\n  constructor(props = {}) {\n    const {id = uid('sphere-geometry')} = props;\n    const {indices, attributes} = tesselateSphere(props);\n    super({\n      ...props,\n      id,\n      indices,\n      attributes: {...attributes, ...props.attributes}\n    });\n  }\n}\n\n// Primitives inspired by TDL http://code.google.com/p/webglsamples/,\n// copyright 2011 Google Inc. new BSD License\n// (http://www.opensource.org/licenses/bsd-license.php).\n/* eslint-disable max-statements, complexity */\nfunction tesselateSphere(props) {\n  const {nlat = 10, nlong = 10} = props;\n  let {radius = 1} = props;\n\n  const startLat = 0;\n  const endLat = Math.PI;\n  const latRange = endLat - startLat;\n  const startLong = 0;\n  const endLong = 2 * Math.PI;\n  const longRange = endLong - startLong;\n  const numVertices = (nlat + 1) * (nlong + 1);\n\n  if (typeof radius === 'number') {\n    const value = radius;\n    radius = (n1, n2, n3, u, v) => value;\n  }\n\n  const positions = new Float32Array(numVertices * 3);\n  const normals = new Float32Array(numVertices * 3);\n  const texCoords = new Float32Array(numVertices * 2);\n\n  const IndexType = numVertices > 0xffff ? Uint32Array : Uint16Array;\n  const indices = new IndexType(nlat * nlong * 6);\n\n  // Create positions, normals and texCoords\n  for (let y = 0; y <= nlat; y++) {\n    for (let x = 0; x <= nlong; x++) {\n      const u = x / nlong;\n      const v = y / nlat;\n\n      const index = x + y * (nlong + 1);\n      const i2 = index * 2;\n      const i3 = index * 3;\n\n      const theta = longRange * u;\n      const phi = latRange * v;\n      const sinTheta = Math.sin(theta);\n      const cosTheta = Math.cos(theta);\n      const sinPhi = Math.sin(phi);\n      const cosPhi = Math.cos(phi);\n      const ux = cosTheta * sinPhi;\n      const uy = cosPhi;\n      const uz = sinTheta * sinPhi;\n\n      const r = radius(ux, uy, uz, u, v);\n\n      positions[i3 + 0] = r * ux;\n      positions[i3 + 1] = r * uy;\n      positions[i3 + 2] = r * uz;\n\n      normals[i3 + 0] = ux;\n      normals[i3 + 1] = uy;\n      normals[i3 + 2] = uz;\n\n      texCoords[i2 + 0] = u;\n      texCoords[i2 + 1] = 1 - v;\n    }\n  }\n\n  // Create indices\n  const numVertsAround = nlong + 1;\n  for (let x = 0; x < nlong; x++) {\n    for (let y = 0; y < nlat; y++) {\n      const index = (x * nlat + y) * 6;\n\n      indices[index + 0] = y * numVertsAround + x;\n      indices[index + 1] = y * numVertsAround + x + 1;\n      indices[index + 2] = (y + 1) * numVertsAround + x;\n\n      indices[index + 3] = (y + 1) * numVertsAround + x;\n      indices[index + 4] = y * numVertsAround + x + 1;\n      indices[index + 5] = (y + 1) * numVertsAround + x + 1;\n    }\n  }\n\n  return {\n    indices: {size: 1, value: indices},\n    attributes: {\n      POSITION: {size: 3, value: positions},\n      NORMAL: {size: 3, value: normals},\n      TEXCOORD_0: {size: 2, value: texCoords}\n    }\n  };\n}\n"]},"metadata":{},"sourceType":"module"}