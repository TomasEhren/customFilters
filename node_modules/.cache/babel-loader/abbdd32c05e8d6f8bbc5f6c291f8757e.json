{"ast":null,"code":"import { h3SetToMultiPolygon } from 'h3-js';\nimport { createIterable } from '@deck.gl/core';\nimport GeoCellLayer from '../geo-cell-layer/GeoCellLayer';\nconst defaultProps = {\n  getHexagons: {\n    type: 'accessor',\n    value: d => d.hexagons\n  }\n};\nexport default class H3ClusterLayer extends GeoCellLayer {\n  updateState(_ref) {\n    let {\n      props,\n      oldProps,\n      changeFlags\n    } = _ref;\n\n    if (changeFlags.dataChanged || changeFlags.updateTriggers && changeFlags.updateTriggers.getHexagons) {\n      const {\n        data,\n        getHexagons\n      } = props;\n      const polygons = [];\n      const {\n        iterable,\n        objectInfo\n      } = createIterable(data);\n\n      for (const object of iterable) {\n        objectInfo.index++;\n        const hexagons = getHexagons(object, objectInfo);\n        const multiPolygon = h3SetToMultiPolygon(hexagons, true);\n\n        for (const polygon of multiPolygon) {\n          polygons.push(this.getSubLayerRow({\n            polygon\n          }, object, objectInfo.index));\n        }\n      }\n\n      this.setState({\n        polygons\n      });\n    }\n  }\n\n  indexToBounds() {\n    return {\n      data: this.state.polygons,\n      getPolygon: d => d.polygon\n    };\n  }\n\n}\nH3ClusterLayer.defaultProps = defaultProps;\nH3ClusterLayer.layerName = 'H3ClusterLayer';","map":{"version":3,"mappings":"AAAA,SAAQA,mBAAR,QAAkC,OAAlC;AAEA,SAAQC,cAAR,QAA6B,eAA7B;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AAEA,MAAMC,YAAY,GAAG;EACnBC,WAAW,EAAE;IAACC,IAAI,EAAE,UAAP;IAAmBC,KAAK,EAAEC,CAAC,IAAIA,CAAC,CAACC;EAAjC;AADM,CAArB;AAIA,eAAe,MAAMC,cAAN,SAA6BP,YAA7B,CAA0C;EACvDQ,WAAW,OAAiC;IAAA,IAAhC;MAACC,KAAD;MAAQC,QAAR;MAAkBC;IAAlB,CAAgC;;IAC1C,IACEA,WAAW,CAACC,WAAZD,IACCA,WAAW,CAACE,cAAZF,IAA8BA,WAAW,CAACE,cAAZF,CAA2BT,WAF5D,EAGE;MACA,MAAM;QAACY,IAAD;QAAOZ;MAAP,IAAsBO,KAA5B;MACA,MAAMM,QAAQ,GAAG,EAAjB;MAEA,MAAM;QAACC,QAAD;QAAWC;MAAX,IAAyBlB,cAAc,CAACe,IAAD,CAA7C;;MACA,KAAK,MAAMI,MAAX,IAAqBF,QAArB,EAA+B;QAC7BC,UAAU,CAACE,KAAXF;QACA,MAAMX,QAAQ,GAAGJ,WAAW,CAACgB,MAAD,EAASD,UAAT,CAA5B;QACA,MAAMG,YAAY,GAAGtB,mBAAmB,CAACQ,QAAD,EAAW,IAAX,CAAxC;;QAEA,KAAK,MAAMe,OAAX,IAAsBD,YAAtB,EAAoC;UAClCL,QAAQ,CAACO,IAATP,CAAc,KAAKQ,cAAL,CAAoB;YAACF;UAAD,CAApB,EAA+BH,MAA/B,EAAuCD,UAAU,CAACE,KAAlD,CAAdJ;QACD;MACF;;MAED,KAAKS,QAAL,CAAc;QAACT;MAAD,CAAd;IACD;EACF;;EAEDU,aAAa,GAAG;IACd,OAAO;MACLX,IAAI,EAAE,KAAKY,KAAL,CAAWX,QADZ;MAELY,UAAU,EAAEtB,CAAC,IAAIA,CAAC,CAACgB;IAFd,CAAP;EAID;;AA7BsD;AAgCzDd,cAAc,CAACN,YAAfM,GAA8BN,YAA9BM;AACAA,cAAc,CAACqB,SAAfrB,GAA2B,gBAA3BA","names":["h3SetToMultiPolygon","createIterable","GeoCellLayer","defaultProps","getHexagons","type","value","d","hexagons","H3ClusterLayer","updateState","props","oldProps","changeFlags","dataChanged","updateTriggers","data","polygons","iterable","objectInfo","object","index","multiPolygon","polygon","push","getSubLayerRow","setState","indexToBounds","state","getPolygon","layerName"],"sources":["../../../src/h3-layers/h3-cluster-layer.js"],"sourcesContent":["import {h3SetToMultiPolygon} from 'h3-js';\n\nimport {createIterable} from '@deck.gl/core';\nimport GeoCellLayer from '../geo-cell-layer/GeoCellLayer';\n\nconst defaultProps = {\n  getHexagons: {type: 'accessor', value: d => d.hexagons}\n};\n\nexport default class H3ClusterLayer extends GeoCellLayer {\n  updateState({props, oldProps, changeFlags}) {\n    if (\n      changeFlags.dataChanged ||\n      (changeFlags.updateTriggers && changeFlags.updateTriggers.getHexagons)\n    ) {\n      const {data, getHexagons} = props;\n      const polygons = [];\n\n      const {iterable, objectInfo} = createIterable(data);\n      for (const object of iterable) {\n        objectInfo.index++;\n        const hexagons = getHexagons(object, objectInfo);\n        const multiPolygon = h3SetToMultiPolygon(hexagons, true);\n\n        for (const polygon of multiPolygon) {\n          polygons.push(this.getSubLayerRow({polygon}, object, objectInfo.index));\n        }\n      }\n\n      this.setState({polygons});\n    }\n  }\n\n  indexToBounds() {\n    return {\n      data: this.state.polygons,\n      getPolygon: d => d.polygon\n    };\n  }\n}\n\nH3ClusterLayer.defaultProps = defaultProps;\nH3ClusterLayer.layerName = 'H3ClusterLayer';\n"]},"metadata":{},"sourceType":"module"}