{"ast":null,"code":"import _toConsumableArray from \"/Users/tomasehrenfeld/projs/se-team/tomas/react-apps/custom_filter/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _defineProperty2 from \"/Users/tomasehrenfeld/projs/se-team/tomas/react-apps/custom_filter/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _classCallCheck from \"/Users/tomasehrenfeld/projs/se-team/tomas/react-apps/custom_filter/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/tomasehrenfeld/projs/se-team/tomas/react-apps/custom_filter/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { VERSION, isBrowser } from '@probe.gl/env';\nimport LocalStorage from './utils/local-storage';\nimport { formatImage, formatTime, leftPad } from './utils/formatters';\nimport { addColor } from './utils/color';\nimport { autobind } from './utils/autobind';\nimport _assert from './utils/assert';\nimport { getHiResTimestamp } from './utils/hi-res-timestamp';\nvar originalConsole = {\n  debug: isBrowser ? console.debug || console.log : console.log,\n  log: console.log,\n  info: console.info,\n  warn: console.warn,\n  error: console.error\n};\nvar DEFAULT_SETTINGS = {\n  enabled: true,\n  level: 0\n};\n\nfunction noop() {}\n\nvar cache = {};\nvar ONCE = {\n  once: true\n};\n\nvar Log = /*#__PURE__*/function () {\n  function Log() {\n    _classCallCheck(this, Log);\n\n    var _ref4 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n      id: ''\n    },\n        id = _ref4.id;\n\n    _defineProperty(this, \"id\", void 0);\n\n    _defineProperty(this, \"VERSION\", VERSION);\n\n    _defineProperty(this, \"_startTs\", getHiResTimestamp());\n\n    _defineProperty(this, \"_deltaTs\", getHiResTimestamp());\n\n    _defineProperty(this, \"_storage\", void 0);\n\n    _defineProperty(this, \"userData\", {});\n\n    _defineProperty(this, \"LOG_THROTTLE_TIMEOUT\", 0);\n\n    this.id = id;\n    this._storage = new LocalStorage(\"__probe-\".concat(this.id, \"__\"), DEFAULT_SETTINGS);\n    this.userData = {};\n    this.timeStamp(\"\".concat(this.id, \" started\"));\n    autobind(this);\n    Object.seal(this);\n  }\n\n  _createClass(Log, [{\n    key: \"level\",\n    get: function get() {\n      return this.getLevel();\n    },\n    set: function set(newLevel) {\n      this.setLevel(newLevel);\n    }\n  }, {\n    key: \"isEnabled\",\n    value: function isEnabled() {\n      return this._storage.config.enabled;\n    }\n  }, {\n    key: \"getLevel\",\n    value: function getLevel() {\n      return this._storage.config.level;\n    }\n  }, {\n    key: \"getTotal\",\n    value: function getTotal() {\n      return Number((getHiResTimestamp() - this._startTs).toPrecision(10));\n    }\n  }, {\n    key: \"getDelta\",\n    value: function getDelta() {\n      return Number((getHiResTimestamp() - this._deltaTs).toPrecision(10));\n    }\n  }, {\n    key: \"priority\",\n    get: function get() {\n      return this.level;\n    },\n    set: function set(newPriority) {\n      this.level = newPriority;\n    }\n  }, {\n    key: \"getPriority\",\n    value: function getPriority() {\n      return this.level;\n    }\n  }, {\n    key: \"enable\",\n    value: function enable() {\n      var enabled = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n\n      this._storage.updateConfiguration({\n        enabled: enabled\n      });\n\n      return this;\n    }\n  }, {\n    key: \"setLevel\",\n    value: function setLevel(level) {\n      this._storage.updateConfiguration({\n        level: level\n      });\n\n      return this;\n    }\n  }, {\n    key: \"get\",\n    value: function get(setting) {\n      return this._storage.config[setting];\n    }\n  }, {\n    key: \"set\",\n    value: function set(setting, value) {\n      this._storage.updateConfiguration(_defineProperty2({}, setting, value));\n    }\n  }, {\n    key: \"settings\",\n    value: function settings() {\n      if (console.table) {\n        console.table(this._storage.config);\n      } else {\n        console.log(this._storage.config);\n      }\n    }\n  }, {\n    key: \"assert\",\n    value: function assert(condition, message) {\n      _assert(condition, message);\n    }\n  }, {\n    key: \"warn\",\n    value: function warn(message) {\n      return this._getLogFunction(0, message, originalConsole.warn, arguments, ONCE);\n    }\n  }, {\n    key: \"error\",\n    value: function error(message) {\n      return this._getLogFunction(0, message, originalConsole.error, arguments);\n    }\n  }, {\n    key: \"deprecated\",\n    value: function deprecated(oldUsage, newUsage) {\n      return this.warn(\"`\".concat(oldUsage, \"` is deprecated and will be removed in a later version. Use `\").concat(newUsage, \"` instead\"));\n    }\n  }, {\n    key: \"removed\",\n    value: function removed(oldUsage, newUsage) {\n      return this.error(\"`\".concat(oldUsage, \"` has been removed. Use `\").concat(newUsage, \"` instead\"));\n    }\n  }, {\n    key: \"probe\",\n    value: function probe(logLevel, message) {\n      return this._getLogFunction(logLevel, message, originalConsole.log, arguments, {\n        time: true,\n        once: true\n      });\n    }\n  }, {\n    key: \"log\",\n    value: function log(logLevel, message) {\n      return this._getLogFunction(logLevel, message, originalConsole.debug, arguments);\n    }\n  }, {\n    key: \"info\",\n    value: function info(logLevel, message) {\n      return this._getLogFunction(logLevel, message, console.info, arguments);\n    }\n  }, {\n    key: \"once\",\n    value: function once(logLevel, message) {\n      for (var _len = arguments.length, args = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n        args[_key - 2] = arguments[_key];\n      }\n\n      return this._getLogFunction(logLevel, message, originalConsole.debug || originalConsole.info, arguments, ONCE);\n    }\n  }, {\n    key: \"table\",\n    value: function table(logLevel, _table, columns) {\n      if (_table) {\n        return this._getLogFunction(logLevel, _table, console.table || noop, columns && [columns], {\n          tag: getTableHeader(_table)\n        });\n      }\n\n      return noop;\n    }\n  }, {\n    key: \"image\",\n    value: function image(_ref) {\n      var logLevel = _ref.logLevel,\n          priority = _ref.priority,\n          image = _ref.image,\n          _ref$message = _ref.message,\n          message = _ref$message === void 0 ? '' : _ref$message,\n          _ref$scale = _ref.scale,\n          scale = _ref$scale === void 0 ? 1 : _ref$scale;\n\n      if (!this._shouldLog(logLevel || priority)) {\n        return noop;\n      }\n\n      return isBrowser ? logImageInBrowser({\n        image: image,\n        message: message,\n        scale: scale\n      }) : logImageInNode({\n        image: image,\n        message: message,\n        scale: scale\n      });\n    }\n  }, {\n    key: \"time\",\n    value: function time(logLevel, message) {\n      return this._getLogFunction(logLevel, message, console.time ? console.time : console.info);\n    }\n  }, {\n    key: \"timeEnd\",\n    value: function timeEnd(logLevel, message) {\n      return this._getLogFunction(logLevel, message, console.timeEnd ? console.timeEnd : console.info);\n    }\n  }, {\n    key: \"timeStamp\",\n    value: function timeStamp(logLevel, message) {\n      return this._getLogFunction(logLevel, message, console.timeStamp || noop);\n    }\n  }, {\n    key: \"group\",\n    value: function group(logLevel, message) {\n      var opts = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {\n        collapsed: false\n      };\n      var options = normalizeArguments({\n        logLevel: logLevel,\n        message: message,\n        opts: opts\n      });\n      var collapsed = opts.collapsed;\n      options.method = (collapsed ? console.groupCollapsed : console.group) || console.info;\n      return this._getLogFunction(options);\n    }\n  }, {\n    key: \"groupCollapsed\",\n    value: function groupCollapsed(logLevel, message) {\n      var opts = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      return this.group(logLevel, message, Object.assign({}, opts, {\n        collapsed: true\n      }));\n    }\n  }, {\n    key: \"groupEnd\",\n    value: function groupEnd(logLevel) {\n      return this._getLogFunction(logLevel, '', console.groupEnd || noop);\n    }\n  }, {\n    key: \"withGroup\",\n    value: function withGroup(logLevel, message, func) {\n      this.group(logLevel, message)();\n\n      try {\n        func();\n      } finally {\n        this.groupEnd(logLevel)();\n      }\n    }\n  }, {\n    key: \"trace\",\n    value: function trace() {\n      if (console.trace) {\n        console.trace();\n      }\n    }\n  }, {\n    key: \"_shouldLog\",\n    value: function _shouldLog(logLevel) {\n      return this.isEnabled() && this.getLevel() >= normalizeLogLevel(logLevel);\n    }\n  }, {\n    key: \"_getLogFunction\",\n    value: function _getLogFunction(logLevel, message, method, args, opts) {\n      if (this._shouldLog(logLevel)) {\n        var _method;\n\n        opts = normalizeArguments({\n          logLevel: logLevel,\n          message: message,\n          args: args,\n          opts: opts\n        });\n        method = method || opts.method;\n\n        _assert(method);\n\n        opts.total = this.getTotal();\n        opts.delta = this.getDelta();\n        this._deltaTs = getHiResTimestamp();\n        var tag = opts.tag || opts.message;\n\n        if (opts.once) {\n          if (!cache[tag]) {\n            cache[tag] = getHiResTimestamp();\n          } else {\n            return noop;\n          }\n        }\n\n        message = decorateMessage(this.id, opts.message, opts);\n        return (_method = method).bind.apply(_method, [console, message].concat(_toConsumableArray(opts.args)));\n      }\n\n      return noop;\n    }\n  }]);\n\n  return Log;\n}();\n\nexport { Log as default };\n\n_defineProperty(Log, \"VERSION\", VERSION);\n\nfunction normalizeLogLevel(logLevel) {\n  if (!logLevel) {\n    return 0;\n  }\n\n  var resolvedLevel;\n\n  switch (typeof logLevel) {\n    case 'number':\n      resolvedLevel = logLevel;\n      break;\n\n    case 'object':\n      resolvedLevel = logLevel.logLevel || logLevel.priority || 0;\n      break;\n\n    default:\n      return 0;\n  }\n\n  _assert(Number.isFinite(resolvedLevel) && resolvedLevel >= 0);\n\n  return resolvedLevel;\n}\n\nexport function normalizeArguments(opts) {\n  var logLevel = opts.logLevel,\n      message = opts.message;\n  opts.logLevel = normalizeLogLevel(logLevel);\n  var args = opts.args ? Array.from(opts.args) : [];\n\n  while (args.length && args.shift() !== message) {}\n\n  switch (typeof logLevel) {\n    case 'string':\n    case 'function':\n      if (message !== undefined) {\n        args.unshift(message);\n      }\n\n      opts.message = logLevel;\n      break;\n\n    case 'object':\n      Object.assign(opts, logLevel);\n      break;\n\n    default:\n  }\n\n  if (typeof opts.message === 'function') {\n    opts.message = opts.message();\n  }\n\n  var messageType = typeof opts.message;\n\n  _assert(messageType === 'string' || messageType === 'object');\n\n  return Object.assign(opts, {\n    args: args\n  }, opts.opts);\n}\n\nfunction decorateMessage(id, message, opts) {\n  if (typeof message === 'string') {\n    var time = opts.time ? leftPad(formatTime(opts.total)) : '';\n    message = opts.time ? \"\".concat(id, \": \").concat(time, \"  \").concat(message) : \"\".concat(id, \": \").concat(message);\n    message = addColor(message, opts.color, opts.background);\n  }\n\n  return message;\n}\n\nfunction logImageInNode(_ref2) {\n  var image = _ref2.image,\n      _ref2$message = _ref2.message,\n      message = _ref2$message === void 0 ? '' : _ref2$message,\n      _ref2$scale = _ref2.scale,\n      scale = _ref2$scale === void 0 ? 1 : _ref2$scale;\n  var asciify = null;\n\n  try {\n    asciify = module.require('asciify-image');\n  } catch (error) {}\n\n  if (asciify) {\n    return function () {\n      return asciify(image, {\n        fit: 'box',\n        width: \"\".concat(Math.round(80 * scale), \"%\")\n      }).then(function (data) {\n        return console.log(data);\n      });\n    };\n  }\n\n  return noop;\n}\n\nfunction logImageInBrowser(_ref3) {\n  var image = _ref3.image,\n      _ref3$message = _ref3.message,\n      message = _ref3$message === void 0 ? '' : _ref3$message,\n      _ref3$scale = _ref3.scale,\n      scale = _ref3$scale === void 0 ? 1 : _ref3$scale;\n\n  if (typeof image === 'string') {\n    var img = new Image();\n\n    img.onload = function () {\n      var _console;\n\n      var args = formatImage(img, message, scale);\n\n      (_console = console).log.apply(_console, _toConsumableArray(args));\n    };\n\n    img.src = image;\n    return noop;\n  }\n\n  var element = image.nodeName || '';\n\n  if (element.toLowerCase() === 'img') {\n    var _console2;\n\n    (_console2 = console).log.apply(_console2, _toConsumableArray(formatImage(image, message, scale)));\n\n    return noop;\n  }\n\n  if (element.toLowerCase() === 'canvas') {\n    var _img = new Image();\n\n    _img.onload = function () {\n      var _console3;\n\n      return (_console3 = console).log.apply(_console3, _toConsumableArray(formatImage(_img, message, scale)));\n    };\n\n    _img.src = image.toDataURL();\n    return noop;\n  }\n\n  return noop;\n}\n\nfunction getTableHeader(table) {\n  for (var key in table) {\n    for (var title in table[key]) {\n      return title || 'untitled';\n    }\n  }\n\n  return 'empty';\n}","map":{"version":3,"mappings":"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","names":["VERSION","isBrowser","LocalStorage","formatImage","formatTime","leftPad","addColor","autobind","assert","getHiResTimestamp","originalConsole","debug","console","log","info","warn","error","DEFAULT_SETTINGS","enabled","level","noop","cache","ONCE","once","Log","constructor","id","_defineProperty","_storage","userData","timeStamp","Object","seal","getLevel","newLevel","setLevel","isEnabled","config","getTotal","Number","_startTs","toPrecision","getDelta","_deltaTs","newPriority","getPriority","enable","updateConfiguration","get","setting","set","value","settings","table","condition","message","_getLogFunction","arguments","deprecated","oldUsage","newUsage","removed","probe","logLevel","time","args","columns","tag","getTableHeader","image","_ref","priority","scale","_shouldLog","logImageInBrowser","logImageInNode","timeEnd","group","opts","collapsed","options","normalizeArguments","method","groupCollapsed","assign","groupEnd","withGroup","func","trace","normalizeLogLevel","total","delta","decorateMessage","bind","resolvedLevel","isFinite","Array","from","length","shift","undefined","unshift","messageType","color","background","asciify","module","require","fit","width","Math","round","then","data","img","Image","onload","src","element","nodeName","toLowerCase","toDataURL","key","title"],"sources":["../../src/log.ts"],"sourcesContent":["// probe.gl, MIT license\n\n/* eslint-disable no-console */\nimport {VERSION, isBrowser} from '@probe.gl/env';\nimport LocalStorage from './utils/local-storage';\nimport {formatImage, formatTime, leftPad} from './utils/formatters';\nimport {addColor} from './utils/color';\nimport {autobind} from './utils/autobind';\nimport assert from './utils/assert';\nimport {getHiResTimestamp} from './utils/hi-res-timestamp';\n\n// Instrumentation in other packages may override console methods, so preserve them here\nconst originalConsole = {\n  debug: isBrowser ? console.debug || console.log : console.log,\n  log: console.log,\n  info: console.info,\n  warn: console.warn,\n  error: console.error\n};\n\ntype Table = Record<string, any>;\n\ntype LogFunction = () => void;\n\ntype LogSettings = {\n  enabled?: boolean;\n  level?: number;\n  [key: string]: any;\n};\n\nconst DEFAULT_SETTINGS: Required<LogSettings> = {\n  enabled: true,\n  level: 0\n};\n\nfunction noop() {} // eslint-disable-line @typescript-eslint/no-empty-function\n\nconst cache = {};\nconst ONCE = {once: true};\n\n// A console wrapper\n\nexport default class Log {\n  static VERSION = VERSION;\n\n  id: string;\n  VERSION: string = VERSION;\n  _startTs: number = getHiResTimestamp();\n  _deltaTs: number = getHiResTimestamp();\n  _storage: LocalStorage;\n  userData = {};\n\n  // TODO - fix support from throttling groups\n  LOG_THROTTLE_TIMEOUT: number = 0; // Time before throttled messages are logged again\n\n  constructor({id} = {id: ''}) {\n    this.id = id;\n    this._storage = new LocalStorage(`__probe-${this.id}__`, DEFAULT_SETTINGS);\n    this.userData = {};\n\n    this.timeStamp(`${this.id} started`);\n\n    autobind(this);\n    Object.seal(this);\n  }\n\n  set level(newLevel: number) {\n    this.setLevel(newLevel);\n  }\n\n  get level(): number {\n    return this.getLevel();\n  }\n\n  isEnabled(): boolean {\n    return this._storage.config.enabled;\n  }\n\n  getLevel(): number {\n    return this._storage.config.level;\n  }\n\n  /** @return {Number} milliseconds, with fractions */\n  getTotal() {\n    return Number((getHiResTimestamp() - this._startTs).toPrecision(10));\n  }\n\n  /** @return {Number} milliseconds, with fractions */\n  getDelta() {\n    return Number((getHiResTimestamp() - this._deltaTs).toPrecision(10));\n  }\n\n  /** @deprecated use logLevel */\n  set priority(newPriority) {\n    this.level = newPriority;\n  }\n\n  /** @deprecated use logLevel */\n  get priority() {\n    return this.level;\n  }\n\n  /** @deprecated use logLevel */\n  getPriority() {\n    return this.level;\n  }\n\n  // Configure\n\n  enable(enabled: boolean = true): this {\n    this._storage.updateConfiguration({enabled});\n    return this;\n  }\n\n  setLevel(level: number): this {\n    this._storage.updateConfiguration({level});\n    return this;\n  }\n\n  /** return the current status of the setting */\n  get(setting: string): any {\n    return this._storage.config[setting];\n  }\n\n  // update the status of the setting\n  set(setting: string, value: any): void {\n    this._storage.updateConfiguration({[setting]: value});\n  }\n\n  /** Logs the current settings as a table */\n  settings(): void {\n    if (console.table) {\n      console.table(this._storage.config);\n    } else {\n      console.log(this._storage.config);\n    }\n  }\n\n  // Unconditional logging\n\n  assert(condition: unknown, message?: string): void {\n    assert(condition, message);\n  }\n\n  /** Warn, but only once, no console flooding */\n  warn(message: string, ...args): LogFunction;\n  warn(message: string): LogFunction {\n    return this._getLogFunction(0, message, originalConsole.warn, arguments, ONCE);\n  }\n\n  /** Print an error */\n  error(message: string, ...args): LogFunction;\n  error(message: string): LogFunction {\n    return this._getLogFunction(0, message, originalConsole.error, arguments);\n  }\n\n  /** Print a deprecation warning */\n  deprecated(oldUsage: string, newUsage: string): LogFunction {\n    return this.warn(`\\`${oldUsage}\\` is deprecated and will be removed \\\nin a later version. Use \\`${newUsage}\\` instead`);\n  }\n\n  /** Print a removal warning */\n  removed(oldUsage: string, newUsage: string): LogFunction {\n    return this.error(`\\`${oldUsage}\\` has been removed. Use \\`${newUsage}\\` instead`);\n  }\n\n  // Conditional logging\n\n  /** Log to a group */\n  probe(logLevel, message?, ...args): LogFunction;\n  probe(logLevel, message?): LogFunction {\n    return this._getLogFunction(logLevel, message, originalConsole.log, arguments, {\n      time: true,\n      once: true\n    });\n  }\n\n  /** Log a debug message */\n  log(logLevel, message?, ...args): LogFunction;\n  log(logLevel, message?): LogFunction {\n    return this._getLogFunction(logLevel, message, originalConsole.debug, arguments);\n  }\n\n  /** Log a normal message */\n  info(logLevel, message?, ...args): LogFunction;\n  info(logLevel, message?): LogFunction {\n    return this._getLogFunction(logLevel, message, console.info, arguments);\n  }\n\n  /** Log a normal message, but only once, no console flooding */\n  once(logLevel, message?, ...args): LogFunction;\n  once(logLevel, message?, ...args) {\n    return this._getLogFunction(\n      logLevel,\n      message,\n      originalConsole.debug || originalConsole.info,\n      arguments,\n      ONCE\n    );\n  }\n\n  /** Logs an object as a table */\n  table(logLevel, table?, columns?): LogFunction {\n    if (table) {\n      // @ts-expect-error Not clear how this works, columns being passed as arguments\n      return this._getLogFunction(logLevel, table, console.table || noop, columns && [columns], {\n        tag: getTableHeader(table)\n      });\n    }\n    return noop;\n  }\n\n  /** logs an image under Chrome */\n  image({logLevel, priority, image, message = '', scale = 1}): LogFunction {\n    if (!this._shouldLog(logLevel || priority)) {\n      return noop;\n    }\n    return isBrowser\n      ? logImageInBrowser({image, message, scale})\n      : logImageInNode({image, message, scale});\n  }\n\n  time(logLevel, message) {\n    return this._getLogFunction(logLevel, message, console.time ? console.time : console.info);\n  }\n\n  timeEnd(logLevel, message) {\n    return this._getLogFunction(\n      logLevel,\n      message,\n      console.timeEnd ? console.timeEnd : console.info\n    );\n  }\n\n  timeStamp(logLevel, message?) {\n    return this._getLogFunction(logLevel, message, console.timeStamp || noop);\n  }\n\n  group(logLevel, message, opts = {collapsed: false}) {\n    const options = normalizeArguments({logLevel, message, opts});\n    const {collapsed} = opts;\n    // @ts-expect-error\n    options.method = (collapsed ? console.groupCollapsed : console.group) || console.info;\n\n    return this._getLogFunction(options);\n  }\n\n  groupCollapsed(logLevel, message, opts = {}) {\n    return this.group(logLevel, message, Object.assign({}, opts, {collapsed: true}));\n  }\n\n  groupEnd(logLevel) {\n    return this._getLogFunction(logLevel, '', console.groupEnd || noop);\n  }\n\n  // EXPERIMENTAL\n\n  withGroup(logLevel: number, message: string, func: Function): void {\n    this.group(logLevel, message)();\n\n    try {\n      func();\n    } finally {\n      this.groupEnd(logLevel)();\n    }\n  }\n\n  trace(): void {\n    if (console.trace) {\n      console.trace();\n    }\n  }\n\n  // PRIVATE METHODS\n\n  /** Deduces log level from a variety of arguments */\n  _shouldLog(logLevel: unknown): boolean {\n    return this.isEnabled() && this.getLevel() >= normalizeLogLevel(logLevel);\n  }\n\n  _getLogFunction(\n    logLevel: unknown,\n    message?: unknown,\n    method?: Function,\n    args?: IArguments,\n    opts?: Record<string, any>\n  ): LogFunction {\n    if (this._shouldLog(logLevel)) {\n      // normalized opts + timings\n      opts = normalizeArguments({logLevel, message, args, opts});\n      method = method || opts.method;\n      assert(method);\n\n      opts.total = this.getTotal();\n      opts.delta = this.getDelta();\n      // reset delta timer\n      this._deltaTs = getHiResTimestamp();\n\n      const tag = opts.tag || opts.message;\n\n      if (opts.once) {\n        if (!cache[tag]) {\n          cache[tag] = getHiResTimestamp();\n        } else {\n          return noop;\n        }\n      }\n\n      // TODO - Make throttling work with groups\n      // if (opts.nothrottle || !throttle(tag, this.LOG_THROTTLE_TIMEOUT)) {\n      //   return noop;\n      // }\n\n      message = decorateMessage(this.id, opts.message, opts);\n\n      // Bind console function so that it can be called after being returned\n      return method.bind(console, message, ...opts.args);\n    }\n    return noop;\n  }\n}\n\n/**\n * Get logLevel from first argument:\n * - log(logLevel, message, args) => logLevel\n * - log(message, args) => 0\n * - log({logLevel, ...}, message, args) => logLevel\n * - log({logLevel, message, args}) => logLevel\n */\nfunction normalizeLogLevel(logLevel: unknown): number {\n  if (!logLevel) {\n    return 0;\n  }\n  let resolvedLevel;\n\n  switch (typeof logLevel) {\n    case 'number':\n      resolvedLevel = logLevel;\n      break;\n\n    case 'object':\n      // Backward compatibility\n      // TODO - deprecate `priority`\n      // @ts-expect-error\n      resolvedLevel = logLevel.logLevel || logLevel.priority || 0;\n      break;\n\n    default:\n      return 0;\n  }\n  // 'log level must be a number'\n  assert(Number.isFinite(resolvedLevel) && resolvedLevel >= 0);\n\n  return resolvedLevel;\n}\n\n/**\n * \"Normalizes\" the various argument patterns into an object with known types\n * - log(logLevel, message, args) => {logLevel, message, args}\n * - log(message, args) => {logLevel: 0, message, args}\n * - log({logLevel, ...}, message, args) => {logLevel, message, args}\n * - log({logLevel, message, args}) => {logLevel, message, args}\n */\nexport function normalizeArguments(opts: {\n  logLevel;\n  message;\n  collapsed?: boolean;\n  args?: IArguments;\n  opts?;\n}): {\n  logLevel: number;\n  message: string;\n  args: any[];\n} {\n  const {logLevel, message} = opts;\n  opts.logLevel = normalizeLogLevel(logLevel);\n\n  // We use `arguments` instead of rest parameters (...args) because IE\n  // does not support the syntax. Rest parameters is transpiled to code with\n  // perf impact. Doing it here instead avoids constructing args when logging is\n  // disabled.\n  // TODO - remove when/if IE support is dropped\n  const args: any[] = opts.args ? Array.from(opts.args) : [];\n  // args should only contain arguments that appear after `message`\n  // eslint-disable-next-line no-empty\n  while (args.length && args.shift() !== message) {}\n\n  switch (typeof logLevel) {\n    case 'string':\n    case 'function':\n      if (message !== undefined) {\n        args.unshift(message);\n      }\n      opts.message = logLevel;\n      break;\n\n    case 'object':\n      Object.assign(opts, logLevel);\n      break;\n\n    default:\n  }\n\n  // Resolve functions into strings by calling them\n  if (typeof opts.message === 'function') {\n    opts.message = opts.message();\n  }\n  const messageType = typeof opts.message;\n  // 'log message must be a string' or object\n  assert(messageType === 'string' || messageType === 'object');\n\n  // original opts + normalized opts + opts arg + fixed up message\n  return Object.assign(opts, {args}, opts.opts);\n}\n\nfunction decorateMessage(id, message, opts) {\n  if (typeof message === 'string') {\n    const time = opts.time ? leftPad(formatTime(opts.total)) : '';\n    message = opts.time ? `${id}: ${time}  ${message}` : `${id}: ${message}`;\n    message = addColor(message, opts.color, opts.background);\n  }\n  return message;\n}\n\n/** Use the asciify module to log an image under node.js */\nfunction logImageInNode({image, message = '', scale = 1}) {\n  // Note: Runtime load of the \"asciify-image\" module, avoids including in browser bundles\n  let asciify = null;\n  try {\n    asciify = module.require('asciify-image');\n  } catch (error) {\n    // asciify not installed, silently ignore\n  }\n  if (asciify) {\n    return () =>\n      asciify(image, {fit: 'box', width: `${Math.round(80 * scale)}%`}).then(data =>\n        console.log(data)\n      );\n  }\n  return noop;\n}\n\nfunction logImageInBrowser({image, message = '', scale = 1}) {\n  if (typeof image === 'string') {\n    const img = new Image();\n    img.onload = () => {\n      const args = formatImage(img, message, scale);\n      console.log(...args);\n    };\n    img.src = image;\n    return noop;\n  }\n  const element = image.nodeName || '';\n  if (element.toLowerCase() === 'img') {\n    console.log(...formatImage(image, message, scale));\n    return noop;\n  }\n  if (element.toLowerCase() === 'canvas') {\n    const img = new Image();\n    img.onload = () => console.log(...formatImage(img, message, scale));\n    img.src = image.toDataURL();\n    return noop;\n  }\n  return noop;\n}\n\nfunction getTableHeader(table: Table): string {\n  for (const key in table) {\n    for (const title in table[key]) {\n      return title || 'untitled';\n    }\n  }\n  return 'empty';\n}\n"]},"metadata":{},"sourceType":"module"}