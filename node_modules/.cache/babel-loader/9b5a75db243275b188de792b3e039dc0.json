{"ast":null,"code":"import { Float32, Float64, Int16, Int32, Int8, Uint16, Uint32, Uint8 } from '../schema/schema';\nexport function getArrowTypeFromTypedArray(array) {\n  switch (array.constructor) {\n    case Int8Array:\n      return new Int8();\n\n    case Uint8Array:\n      return new Uint8();\n\n    case Int16Array:\n      return new Int16();\n\n    case Uint16Array:\n      return new Uint16();\n\n    case Int32Array:\n      return new Int32();\n\n    case Uint32Array:\n      return new Uint32();\n\n    case Float32Array:\n      return new Float32();\n\n    case Float64Array:\n      return new Float64();\n\n    default:\n      throw new Error('array type not supported');\n  }\n}","map":{"version":3,"mappings":"AACA,SAEEA,OAFF,EAGEC,OAHF,EAIEC,KAJF,EAKEC,KALF,EAMEC,IANF,EAOEC,MAPF,EAQEC,MARF,EASEC,KATF,QAUO,kBAVP;AAYA,OAAO,SAASC,0BAAT,CAAoCC,KAApC,EAAiE;EACtE,QAAQA,KAAK,CAACC,WAAd;IACE,KAAKC,SAAL;MACE,OAAO,IAAIP,IAAJ,EAAP;;IACF,KAAKQ,UAAL;MACE,OAAO,IAAIL,KAAJ,EAAP;;IACF,KAAKM,UAAL;MACE,OAAO,IAAIX,KAAJ,EAAP;;IACF,KAAKY,WAAL;MACE,OAAO,IAAIT,MAAJ,EAAP;;IACF,KAAKU,UAAL;MACE,OAAO,IAAIZ,KAAJ,EAAP;;IACF,KAAKa,WAAL;MACE,OAAO,IAAIV,MAAJ,EAAP;;IACF,KAAKW,YAAL;MACE,OAAO,IAAIjB,OAAJ,EAAP;;IACF,KAAKkB,YAAL;MACE,OAAO,IAAIjB,OAAJ,EAAP;;IACF;MACE,MAAM,IAAIkB,KAAJ,CAAU,0BAAV,CAAN;EAlBJ;AAoBD","names":["Float32","Float64","Int16","Int32","Int8","Uint16","Uint32","Uint8","getArrowTypeFromTypedArray","array","constructor","Int8Array","Uint8Array","Int16Array","Uint16Array","Int32Array","Uint32Array","Float32Array","Float64Array","Error"],"sources":["../../../../src/lib/arrow/arrow-like-type-utils.ts"],"sourcesContent":["import type {TypedArray} from '../../types';\nimport {\n  DataType,\n  Float32,\n  Float64,\n  Int16,\n  Int32,\n  Int8,\n  Uint16,\n  Uint32,\n  Uint8\n} from '../schema/schema';\n\nexport function getArrowTypeFromTypedArray(array: TypedArray): DataType {\n  switch (array.constructor) {\n    case Int8Array:\n      return new Int8();\n    case Uint8Array:\n      return new Uint8();\n    case Int16Array:\n      return new Int16();\n    case Uint16Array:\n      return new Uint16();\n    case Int32Array:\n      return new Int32();\n    case Uint32Array:\n      return new Uint32();\n    case Float32Array:\n      return new Float32();\n    case Float64Array:\n      return new Float64();\n    default:\n      throw new Error('array type not supported');\n  }\n}\n"]},"metadata":{},"sourceType":"module"}