{"ast":null,"code":"import _slicedToArray from \"/Users/tomasehrenfeld/projs/se-team/tomas/react-apps/custom_filter/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _classCallCheck from \"/Users/tomasehrenfeld/projs/se-team/tomas/react-apps/custom_filter/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/tomasehrenfeld/projs/se-team/tomas/react-apps/custom_filter/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/Users/tomasehrenfeld/projs/se-team/tomas/react-apps/custom_filter/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/tomasehrenfeld/projs/se-team/tomas/react-apps/custom_filter/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { checkVector, deprecated } from '../lib/validators';\nimport Matrix from './base/matrix';\nimport { vec2_transformMat4AsVector, vec3_transformMat4AsVector } from '../lib/gl-matrix-extras';\nimport * as mat4 from 'gl-matrix/mat4';\nimport * as vec2 from 'gl-matrix/vec2';\nimport * as vec3 from 'gl-matrix/vec3';\nimport * as vec4 from 'gl-matrix/vec4';\nvar IDENTITY = Object.freeze([1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1]);\nvar ZERO = Object.freeze([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]);\nvar INDICES = Object.freeze({\n  COL0ROW0: 0,\n  COL0ROW1: 1,\n  COL0ROW2: 2,\n  COL0ROW3: 3,\n  COL1ROW0: 4,\n  COL1ROW1: 5,\n  COL1ROW2: 6,\n  COL1ROW3: 7,\n  COL2ROW0: 8,\n  COL2ROW1: 9,\n  COL2ROW2: 10,\n  COL2ROW3: 11,\n  COL3ROW0: 12,\n  COL3ROW1: 13,\n  COL3ROW2: 14,\n  COL3ROW3: 15\n});\nvar constants = {};\n\nvar Matrix4 = /*#__PURE__*/function (_Matrix) {\n  _inherits(Matrix4, _Matrix);\n\n  var _super = _createSuper(Matrix4);\n\n  function Matrix4(array) {\n    var _this;\n\n    _classCallCheck(this, Matrix4);\n\n    _this = _super.call(this, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0);\n\n    if (arguments.length === 1 && Array.isArray(array)) {\n      _this.copy(array);\n    } else {\n      _this.identity();\n    }\n\n    return _this;\n  }\n\n  _createClass(Matrix4, [{\n    key: \"INDICES\",\n    get: function get() {\n      return INDICES;\n    }\n  }, {\n    key: \"ELEMENTS\",\n    get: function get() {\n      return 16;\n    }\n  }, {\n    key: \"RANK\",\n    get: function get() {\n      return 4;\n    }\n  }, {\n    key: \"copy\",\n    value: function copy(array) {\n      this[0] = array[0];\n      this[1] = array[1];\n      this[2] = array[2];\n      this[3] = array[3];\n      this[4] = array[4];\n      this[5] = array[5];\n      this[6] = array[6];\n      this[7] = array[7];\n      this[8] = array[8];\n      this[9] = array[9];\n      this[10] = array[10];\n      this[11] = array[11];\n      this[12] = array[12];\n      this[13] = array[13];\n      this[14] = array[14];\n      this[15] = array[15];\n      return this.check();\n    }\n  }, {\n    key: \"set\",\n    value: function set(m00, m10, m20, m30, m01, m11, m21, m31, m02, m12, m22, m32, m03, m13, m23, m33) {\n      this[0] = m00;\n      this[1] = m10;\n      this[2] = m20;\n      this[3] = m30;\n      this[4] = m01;\n      this[5] = m11;\n      this[6] = m21;\n      this[7] = m31;\n      this[8] = m02;\n      this[9] = m12;\n      this[10] = m22;\n      this[11] = m32;\n      this[12] = m03;\n      this[13] = m13;\n      this[14] = m23;\n      this[15] = m33;\n      return this.check();\n    }\n  }, {\n    key: \"setRowMajor\",\n    value: function setRowMajor(m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n      this[0] = m00;\n      this[1] = m10;\n      this[2] = m20;\n      this[3] = m30;\n      this[4] = m01;\n      this[5] = m11;\n      this[6] = m21;\n      this[7] = m31;\n      this[8] = m02;\n      this[9] = m12;\n      this[10] = m22;\n      this[11] = m32;\n      this[12] = m03;\n      this[13] = m13;\n      this[14] = m23;\n      this[15] = m33;\n      return this.check();\n    }\n  }, {\n    key: \"toRowMajor\",\n    value: function toRowMajor(result) {\n      result[0] = this[0];\n      result[1] = this[4];\n      result[2] = this[8];\n      result[3] = this[12];\n      result[4] = this[1];\n      result[5] = this[5];\n      result[6] = this[9];\n      result[7] = this[13];\n      result[8] = this[2];\n      result[9] = this[6];\n      result[10] = this[10];\n      result[11] = this[14];\n      result[12] = this[3];\n      result[13] = this[7];\n      result[14] = this[11];\n      result[15] = this[15];\n      return result;\n    }\n  }, {\n    key: \"identity\",\n    value: function identity() {\n      return this.copy(IDENTITY);\n    }\n  }, {\n    key: \"fromQuaternion\",\n    value: function fromQuaternion(q) {\n      mat4.fromQuat(this, q);\n      return this.check();\n    }\n  }, {\n    key: \"frustum\",\n    value: function frustum(_ref) {\n      var left = _ref.left,\n          right = _ref.right,\n          bottom = _ref.bottom,\n          top = _ref.top,\n          near = _ref.near,\n          far = _ref.far;\n\n      if (far === Infinity) {\n        Matrix4._computeInfinitePerspectiveOffCenter(this, left, right, bottom, top, near);\n      } else {\n        mat4.frustum(this, left, right, bottom, top, near, far);\n      }\n\n      return this.check();\n    }\n  }, {\n    key: \"lookAt\",\n    value: function lookAt(eye, center, up) {\n      if (arguments.length === 1) {\n        var _eye = eye;\n        eye = _eye.eye;\n        center = _eye.center;\n        up = _eye.up;\n      }\n\n      center = center || [0, 0, 0];\n      up = up || [0, 1, 0];\n      mat4.lookAt(this, eye, center, up);\n      return this.check();\n    }\n  }, {\n    key: \"ortho\",\n    value: function ortho(_ref2) {\n      var left = _ref2.left,\n          right = _ref2.right,\n          bottom = _ref2.bottom,\n          top = _ref2.top,\n          _ref2$near = _ref2.near,\n          near = _ref2$near === void 0 ? 0.1 : _ref2$near,\n          _ref2$far = _ref2.far,\n          far = _ref2$far === void 0 ? 500 : _ref2$far;\n      mat4.ortho(this, left, right, bottom, top, near, far);\n      return this.check();\n    }\n  }, {\n    key: \"orthographic\",\n    value: function orthographic(_ref3) {\n      var _ref3$fovy = _ref3.fovy,\n          fovy = _ref3$fovy === void 0 ? 45 * Math.PI / 180 : _ref3$fovy,\n          _ref3$aspect = _ref3.aspect,\n          aspect = _ref3$aspect === void 0 ? 1 : _ref3$aspect,\n          _ref3$focalDistance = _ref3.focalDistance,\n          focalDistance = _ref3$focalDistance === void 0 ? 1 : _ref3$focalDistance,\n          _ref3$near = _ref3.near,\n          near = _ref3$near === void 0 ? 0.1 : _ref3$near,\n          _ref3$far = _ref3.far,\n          far = _ref3$far === void 0 ? 500 : _ref3$far;\n\n      if (fovy > Math.PI * 2) {\n        throw Error('radians');\n      }\n\n      var halfY = fovy / 2;\n      var top = focalDistance * Math.tan(halfY);\n      var right = top * aspect;\n      return new Matrix4().ortho({\n        left: -right,\n        right: right,\n        bottom: -top,\n        top: top,\n        near: near,\n        far: far\n      });\n    }\n  }, {\n    key: \"perspective\",\n    value: function perspective() {\n      var _ref4 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref4$fovy = _ref4.fovy,\n          fovy = _ref4$fovy === void 0 ? undefined : _ref4$fovy,\n          _ref4$fov = _ref4.fov,\n          fov = _ref4$fov === void 0 ? 45 * Math.PI / 180 : _ref4$fov,\n          _ref4$aspect = _ref4.aspect,\n          aspect = _ref4$aspect === void 0 ? 1 : _ref4$aspect,\n          _ref4$near = _ref4.near,\n          near = _ref4$near === void 0 ? 0.1 : _ref4$near,\n          _ref4$far = _ref4.far,\n          far = _ref4$far === void 0 ? 500 : _ref4$far;\n\n      fovy = fovy || fov;\n\n      if (fovy > Math.PI * 2) {\n        throw Error('radians');\n      }\n\n      mat4.perspective(this, fovy, aspect, near, far);\n      return this.check();\n    }\n  }, {\n    key: \"determinant\",\n    value: function determinant() {\n      return mat4.determinant(this);\n    }\n  }, {\n    key: \"getScale\",\n    value: function getScale() {\n      var result = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [-0, -0, -0];\n      result[0] = Math.sqrt(this[0] * this[0] + this[1] * this[1] + this[2] * this[2]);\n      result[1] = Math.sqrt(this[4] * this[4] + this[5] * this[5] + this[6] * this[6]);\n      result[2] = Math.sqrt(this[8] * this[8] + this[9] * this[9] + this[10] * this[10]);\n      return result;\n    }\n  }, {\n    key: \"getTranslation\",\n    value: function getTranslation() {\n      var result = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [-0, -0, -0];\n      result[0] = this[12];\n      result[1] = this[13];\n      result[2] = this[14];\n      return result;\n    }\n  }, {\n    key: \"getRotation\",\n    value: function getRotation() {\n      var result = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [-0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0];\n      var scaleResult = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n      var scale = this.getScale(scaleResult || [-0, -0, -0]);\n      var inverseScale0 = 1 / scale[0];\n      var inverseScale1 = 1 / scale[1];\n      var inverseScale2 = 1 / scale[2];\n      result[0] = this[0] * inverseScale0;\n      result[1] = this[1] * inverseScale1;\n      result[2] = this[2] * inverseScale2;\n      result[3] = 0;\n      result[4] = this[4] * inverseScale0;\n      result[5] = this[5] * inverseScale1;\n      result[6] = this[6] * inverseScale2;\n      result[7] = 0;\n      result[8] = this[8] * inverseScale0;\n      result[9] = this[9] * inverseScale1;\n      result[10] = this[10] * inverseScale2;\n      result[11] = 0;\n      result[12] = 0;\n      result[13] = 0;\n      result[14] = 0;\n      result[15] = 1;\n      return result;\n    }\n  }, {\n    key: \"getRotationMatrix3\",\n    value: function getRotationMatrix3() {\n      var result = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [-0, -0, -0, -0, -0, -0, -0, -0, -0];\n      var scaleResult = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n      var scale = this.getScale(scaleResult || [-0, -0, -0]);\n      var inverseScale0 = 1 / scale[0];\n      var inverseScale1 = 1 / scale[1];\n      var inverseScale2 = 1 / scale[2];\n      result[0] = this[0] * inverseScale0;\n      result[1] = this[1] * inverseScale1;\n      result[2] = this[2] * inverseScale2;\n      result[3] = this[4] * inverseScale0;\n      result[4] = this[5] * inverseScale1;\n      result[5] = this[6] * inverseScale2;\n      result[6] = this[8] * inverseScale0;\n      result[7] = this[9] * inverseScale1;\n      result[8] = this[10] * inverseScale2;\n      return result;\n    }\n  }, {\n    key: \"transpose\",\n    value: function transpose() {\n      mat4.transpose(this, this);\n      return this.check();\n    }\n  }, {\n    key: \"invert\",\n    value: function invert() {\n      mat4.invert(this, this);\n      return this.check();\n    }\n  }, {\n    key: \"multiplyLeft\",\n    value: function multiplyLeft(a) {\n      mat4.multiply(this, a, this);\n      return this.check();\n    }\n  }, {\n    key: \"multiplyRight\",\n    value: function multiplyRight(a) {\n      mat4.multiply(this, this, a);\n      return this.check();\n    }\n  }, {\n    key: \"rotateX\",\n    value: function rotateX(radians) {\n      mat4.rotateX(this, this, radians);\n      return this.check();\n    }\n  }, {\n    key: \"rotateY\",\n    value: function rotateY(radians) {\n      mat4.rotateY(this, this, radians);\n      return this.check();\n    }\n  }, {\n    key: \"rotateZ\",\n    value: function rotateZ(radians) {\n      mat4.rotateZ(this, this, radians);\n      return this.check();\n    }\n  }, {\n    key: \"rotateXYZ\",\n    value: function rotateXYZ(_ref5) {\n      var _ref6 = _slicedToArray(_ref5, 3),\n          rx = _ref6[0],\n          ry = _ref6[1],\n          rz = _ref6[2];\n\n      return this.rotateX(rx).rotateY(ry).rotateZ(rz);\n    }\n  }, {\n    key: \"rotateAxis\",\n    value: function rotateAxis(radians, axis) {\n      mat4.rotate(this, this, radians, axis);\n      return this.check();\n    }\n  }, {\n    key: \"scale\",\n    value: function scale(factor) {\n      if (Array.isArray(factor)) {\n        mat4.scale(this, this, factor);\n      } else {\n        mat4.scale(this, this, [factor, factor, factor]);\n      }\n\n      return this.check();\n    }\n  }, {\n    key: \"translate\",\n    value: function translate(vec) {\n      mat4.translate(this, this, vec);\n      return this.check();\n    }\n  }, {\n    key: \"transform\",\n    value: function transform(vector, result) {\n      if (vector.length === 4) {\n        result = vec4.transformMat4(result || [-0, -0, -0, -0], vector, this);\n        checkVector(result, 4);\n        return result;\n      }\n\n      return this.transformAsPoint(vector, result);\n    }\n  }, {\n    key: \"transformAsPoint\",\n    value: function transformAsPoint(vector, result) {\n      var length = vector.length;\n\n      switch (length) {\n        case 2:\n          result = vec2.transformMat4(result || [-0, -0], vector, this);\n          break;\n\n        case 3:\n          result = vec3.transformMat4(result || [-0, -0, -0], vector, this);\n          break;\n\n        default:\n          throw new Error('Illegal vector');\n      }\n\n      checkVector(result, vector.length);\n      return result;\n    }\n  }, {\n    key: \"transformAsVector\",\n    value: function transformAsVector(vector, result) {\n      switch (vector.length) {\n        case 2:\n          result = vec2_transformMat4AsVector(result || [-0, -0], vector, this);\n          break;\n\n        case 3:\n          result = vec3_transformMat4AsVector(result || [-0, -0, -0], vector, this);\n          break;\n\n        default:\n          throw new Error('Illegal vector');\n      }\n\n      checkVector(result, vector.length);\n      return result;\n    }\n  }, {\n    key: \"makeRotationX\",\n    value: function makeRotationX(radians) {\n      return this.identity().rotateX(radians);\n    }\n  }, {\n    key: \"makeTranslation\",\n    value: function makeTranslation(x, y, z) {\n      return this.identity().translate([x, y, z]);\n    }\n  }, {\n    key: \"transformPoint\",\n    value: function transformPoint(vector, result) {\n      deprecated('Matrix4.transformPoint', '3.0');\n      return this.transformAsPoint(vector, result);\n    }\n  }, {\n    key: \"transformVector\",\n    value: function transformVector(vector, result) {\n      deprecated('Matrix4.transformVector', '3.0');\n      return this.transformAsPoint(vector, result);\n    }\n  }, {\n    key: \"transformDirection\",\n    value: function transformDirection(vector, result) {\n      deprecated('Matrix4.transformDirection', '3.0');\n      return this.transformAsVector(vector, result);\n    }\n  }], [{\n    key: \"IDENTITY\",\n    get: function get() {\n      constants.IDENTITY = constants.IDENTITY || Object.freeze(new Matrix4(IDENTITY));\n      return constants.IDENTITY;\n    }\n  }, {\n    key: \"ZERO\",\n    get: function get() {\n      constants.ZERO = constants.ZERO || Object.freeze(new Matrix4(ZERO));\n      return constants.ZERO;\n    }\n  }, {\n    key: \"_computeInfinitePerspectiveOffCenter\",\n    value: function _computeInfinitePerspectiveOffCenter(result, left, right, bottom, top, near) {\n      var column0Row0 = 2.0 * near / (right - left);\n      var column1Row1 = 2.0 * near / (top - bottom);\n      var column2Row0 = (right + left) / (right - left);\n      var column2Row1 = (top + bottom) / (top - bottom);\n      var column2Row2 = -1.0;\n      var column2Row3 = -1.0;\n      var column3Row2 = -2.0 * near;\n      result[0] = column0Row0;\n      result[1] = 0.0;\n      result[2] = 0.0;\n      result[3] = 0.0;\n      result[4] = 0.0;\n      result[5] = column1Row1;\n      result[6] = 0.0;\n      result[7] = 0.0;\n      result[8] = column2Row0;\n      result[9] = column2Row1;\n      result[10] = column2Row2;\n      result[11] = column2Row3;\n      result[12] = 0.0;\n      result[13] = 0.0;\n      result[14] = column3Row2;\n      result[15] = 0.0;\n      return result;\n    }\n  }]);\n\n  return Matrix4;\n}(Matrix);\n\nexport { Matrix4 as default };","map":{"version":3,"mappings":"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","names":["checkVector","deprecated","Matrix","vec2_transformMat4AsVector","vec3_transformMat4AsVector","mat4","vec2","vec3","vec4","IDENTITY","Object","freeze","ZERO","INDICES","COL0ROW0","COL0ROW1","COL0ROW2","COL0ROW3","COL1ROW0","COL1ROW1","COL1ROW2","COL1ROW3","COL2ROW0","COL2ROW1","COL2ROW2","COL2ROW3","COL3ROW0","COL3ROW1","COL3ROW2","COL3ROW3","constants","Matrix4","constructor","array","arguments","length","Array","isArray","copy","identity","check","set","m00","m10","m20","m30","m01","m11","m21","m31","m02","m12","m22","m32","m03","m13","m23","m33","setRowMajor","toRowMajor","result","fromQuaternion","q","fromQuat","frustum","left","right","bottom","top","near","far","Infinity","_computeInfinitePerspectiveOffCenter","lookAt","eye","center","up","ortho","orthographic","fovy","Math","PI","aspect","focalDistance","Error","halfY","tan","perspective","undefined","fov","determinant","getScale","sqrt","getTranslation","getRotation","scaleResult","scale","inverseScale0","inverseScale1","inverseScale2","getRotationMatrix3","transpose","invert","multiplyLeft","a","multiply","multiplyRight","rotateX","radians","rotateY","rotateZ","rotateXYZ","rx","ry","rz","rotateAxis","axis","rotate","factor","translate","vec","transform","vector","transformMat4","transformAsPoint","transformAsVector","makeRotationX","makeTranslation","x","y","z","transformPoint","transformVector","transformDirection","column0Row0","column1Row1","column2Row0","column2Row1","column2Row2","column2Row3","column3Row2"],"sources":["../../../src/classes/matrix4.js"],"sourcesContent":["// Copyright (c) 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport {checkVector, deprecated} from '../lib/validators';\nimport Matrix from './base/matrix';\n// eslint-disable-next-line camelcase\nimport {vec2_transformMat4AsVector, vec3_transformMat4AsVector} from '../lib/gl-matrix-extras';\n\n// @ts-ignore: error TS2307: Cannot find module 'gl-matrix/...'.\nimport * as mat4 from 'gl-matrix/mat4';\n// @ts-ignore: error TS2307: Cannot find module 'gl-matrix/...'.\nimport * as vec2 from 'gl-matrix/vec2';\n// @ts-ignore: error TS2307: Cannot find module 'gl-matrix/...'.\nimport * as vec3 from 'gl-matrix/vec3';\n// @ts-ignore: error TS2307: Cannot find module 'gl-matrix/...'.\nimport * as vec4 from 'gl-matrix/vec4';\n\nconst IDENTITY = Object.freeze([1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1]);\nconst ZERO = Object.freeze([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]);\n\nconst INDICES = Object.freeze({\n  COL0ROW0: 0,\n  COL0ROW1: 1,\n  COL0ROW2: 2,\n  COL0ROW3: 3,\n  COL1ROW0: 4,\n  COL1ROW1: 5,\n  COL1ROW2: 6,\n  COL1ROW3: 7,\n  COL2ROW0: 8,\n  COL2ROW1: 9,\n  COL2ROW2: 10,\n  COL2ROW3: 11,\n  COL3ROW0: 12,\n  COL3ROW1: 13,\n  COL3ROW2: 14,\n  COL3ROW3: 15\n});\n\nconst constants = {};\n\nexport default class Matrix4 extends Matrix {\n  static get IDENTITY() {\n    constants.IDENTITY = constants.IDENTITY || Object.freeze(new Matrix4(IDENTITY));\n    return constants.IDENTITY;\n  }\n\n  static get ZERO() {\n    constants.ZERO = constants.ZERO || Object.freeze(new Matrix4(ZERO));\n    return constants.ZERO;\n  }\n\n  get INDICES() {\n    return INDICES;\n  }\n\n  get ELEMENTS() {\n    return 16;\n  }\n\n  get RANK() {\n    return 4;\n  }\n\n  constructor(array) {\n    // PERF NOTE: initialize elements as double precision numbers\n    super(-0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0);\n    if (arguments.length === 1 && Array.isArray(array)) {\n      this.copy(array);\n    } else {\n      this.identity();\n    }\n  }\n\n  copy(array) {\n    this[0] = array[0];\n    this[1] = array[1];\n    this[2] = array[2];\n    this[3] = array[3];\n    this[4] = array[4];\n    this[5] = array[5];\n    this[6] = array[6];\n    this[7] = array[7];\n    this[8] = array[8];\n    this[9] = array[9];\n    this[10] = array[10];\n    this[11] = array[11];\n    this[12] = array[12];\n    this[13] = array[13];\n    this[14] = array[14];\n    this[15] = array[15];\n    return this.check();\n  }\n\n  // eslint-disable-next-line max-params\n  set(m00, m10, m20, m30, m01, m11, m21, m31, m02, m12, m22, m32, m03, m13, m23, m33) {\n    this[0] = m00;\n    this[1] = m10;\n    this[2] = m20;\n    this[3] = m30;\n    this[4] = m01;\n    this[5] = m11;\n    this[6] = m21;\n    this[7] = m31;\n    this[8] = m02;\n    this[9] = m12;\n    this[10] = m22;\n    this[11] = m32;\n    this[12] = m03;\n    this[13] = m13;\n    this[14] = m23;\n    this[15] = m33;\n    return this.check();\n  }\n\n  // accepts row major order, stores as column major\n  // eslint-disable-next-line max-params\n  setRowMajor(m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n    this[0] = m00;\n    this[1] = m10;\n    this[2] = m20;\n    this[3] = m30;\n    this[4] = m01;\n    this[5] = m11;\n    this[6] = m21;\n    this[7] = m31;\n    this[8] = m02;\n    this[9] = m12;\n    this[10] = m22;\n    this[11] = m32;\n    this[12] = m03;\n    this[13] = m13;\n    this[14] = m23;\n    this[15] = m33;\n    return this.check();\n  }\n\n  toRowMajor(result) {\n    result[0] = this[0];\n    result[1] = this[4];\n    result[2] = this[8];\n    result[3] = this[12];\n    result[4] = this[1];\n    result[5] = this[5];\n    result[6] = this[9];\n    result[7] = this[13];\n    result[8] = this[2];\n    result[9] = this[6];\n    result[10] = this[10];\n    result[11] = this[14];\n    result[12] = this[3];\n    result[13] = this[7];\n    result[14] = this[11];\n    result[15] = this[15];\n    return result;\n  }\n\n  // Constructors\n\n  identity() {\n    return this.copy(IDENTITY);\n  }\n\n  // Calculates a 4x4 matrix from the given quaternion\n  // q quat  Quaternion to create matrix from\n  fromQuaternion(q) {\n    mat4.fromQuat(this, q);\n    return this.check();\n  }\n\n  // Generates a frustum matrix with the given bounds\n  // left  Number  Left bound of the frustum\n  // right Number  Right bound of the frustum\n  // bottom  Number  Bottom bound of the frustum\n  // top Number  Top bound of the frustum\n  // near  Number  Near bound of the frustum\n  // far Number  Far bound of the frustum\n  frustum({left, right, bottom, top, near, far}) {\n    if (far === Infinity) {\n      Matrix4._computeInfinitePerspectiveOffCenter(this, left, right, bottom, top, near);\n    } else {\n      mat4.frustum(this, left, right, bottom, top, near, far);\n    }\n    return this.check();\n  }\n\n  // eslint-disable-next-line max-params\n  static _computeInfinitePerspectiveOffCenter(result, left, right, bottom, top, near) {\n    const column0Row0 = (2.0 * near) / (right - left);\n    const column1Row1 = (2.0 * near) / (top - bottom);\n    const column2Row0 = (right + left) / (right - left);\n    const column2Row1 = (top + bottom) / (top - bottom);\n    const column2Row2 = -1.0;\n    const column2Row3 = -1.0;\n    const column3Row2 = -2.0 * near;\n\n    result[0] = column0Row0;\n    result[1] = 0.0;\n    result[2] = 0.0;\n    result[3] = 0.0;\n    result[4] = 0.0;\n    result[5] = column1Row1;\n    result[6] = 0.0;\n    result[7] = 0.0;\n    result[8] = column2Row0;\n    result[9] = column2Row1;\n    result[10] = column2Row2;\n    result[11] = column2Row3;\n    result[12] = 0.0;\n    result[13] = 0.0;\n    result[14] = column3Row2;\n    result[15] = 0.0;\n    return result;\n  }\n\n  // Generates a look-at matrix with the given eye position, focal point,\n  // and up axis\n  // eye vec3  Position of the viewer\n  // center  vec3  Point the viewer is looking at\n  // up  vec3  vec3 pointing up\n  lookAt(eye, center, up) {\n    // Signature: lookAt({eye, center = [0, 0, 0], up = [0, 1, 0]}))\n    if (arguments.length === 1) {\n      ({eye, center, up} = eye);\n    }\n\n    center = center || [0, 0, 0];\n    up = up || [0, 1, 0];\n\n    mat4.lookAt(this, eye, center, up);\n    return this.check();\n  }\n\n  // Generates a orthogonal projection matrix with the given bounds\n  // from \"traditional\" view space parameters\n  // left  number  Left bound of the frustum\n  // right number  Right bound of the frustum\n  // bottom  number  Bottom bound of the frustum\n  // top number  Top bound of the frustum\n  // near  number  Near bound of the frustum\n  // far number  Far bound of the frustum\n  ortho({left, right, bottom, top, near = 0.1, far = 500}) {\n    mat4.ortho(this, left, right, bottom, top, near, far);\n    return this.check();\n  }\n\n  // Generates an orthogonal projection matrix with the same parameters\n  // as a perspective matrix (plus focalDistance)\n  // fovy  number  Vertical field of view in radians\n  // aspect  number  Aspect ratio. typically viewport width/height\n  // focalDistance distance in the view frustum used for extent calculations\n  // near  number  Near bound of the frustum\n  // far number  Far bound of the frustum\n  orthographic({\n    fovy = (45 * Math.PI) / 180,\n    aspect = 1,\n    focalDistance = 1,\n    near = 0.1,\n    far = 500\n  }) {\n    if (fovy > Math.PI * 2) {\n      throw Error('radians');\n    }\n    const halfY = fovy / 2;\n    const top = focalDistance * Math.tan(halfY); // focus_plane is the distance from the camera\n    const right = top * aspect;\n\n    return new Matrix4().ortho({\n      left: -right,\n      right,\n      bottom: -top,\n      top,\n      near,\n      far\n    });\n  }\n\n  // Generates a perspective projection matrix with the given bounds\n  // fovy  number  Vertical field of view in radians\n  // aspect  number  Aspect ratio. typically viewport width/height\n  // near  number  Near bound of the frustum\n  // far number  Far bound of the frustum\n  perspective({\n    fovy = undefined,\n    fov = (45 * Math.PI) / 180, // DEPRECATED\n    aspect = 1,\n    near = 0.1,\n    far = 500\n  } = {}) {\n    fovy = fovy || fov;\n    if (fovy > Math.PI * 2) {\n      throw Error('radians');\n    }\n    mat4.perspective(this, fovy, aspect, near, far);\n    return this.check();\n  }\n\n  // Accessors\n\n  determinant() {\n    return mat4.determinant(this);\n  }\n\n  // Extracts the non-uniform scale assuming the matrix is an affine transformation.\n  // The scales are the \"lengths\" of the column vectors in the upper-left 3x3 matrix.\n  getScale(result = [-0, -0, -0]) {\n    // explicit is faster than hypot...\n    result[0] = Math.sqrt(this[0] * this[0] + this[1] * this[1] + this[2] * this[2]);\n    result[1] = Math.sqrt(this[4] * this[4] + this[5] * this[5] + this[6] * this[6]);\n    result[2] = Math.sqrt(this[8] * this[8] + this[9] * this[9] + this[10] * this[10]);\n    // result[0] = Math.hypot(this[0], this[1], this[2]);\n    // result[1] = Math.hypot(this[4], this[5], this[6]);\n    // result[2] = Math.hypot(this[8], this[9], this[10]);\n    return result;\n  }\n\n  // Gets the translation portion, assuming the matrix is a affine transformation matrix.\n  getTranslation(result = [-0, -0, -0]) {\n    result[0] = this[12];\n    result[1] = this[13];\n    result[2] = this[14];\n    return result;\n  }\n\n  // Gets upper left 3x3 pure rotation matrix (non-scaling), assume affine transformation matrix\n  getRotation(\n    result = [-0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0],\n    scaleResult = null\n  ) {\n    const scale = this.getScale(scaleResult || [-0, -0, -0]);\n\n    const inverseScale0 = 1 / scale[0];\n    const inverseScale1 = 1 / scale[1];\n    const inverseScale2 = 1 / scale[2];\n\n    result[0] = this[0] * inverseScale0;\n    result[1] = this[1] * inverseScale1;\n    result[2] = this[2] * inverseScale2;\n    result[3] = 0;\n    result[4] = this[4] * inverseScale0;\n    result[5] = this[5] * inverseScale1;\n    result[6] = this[6] * inverseScale2;\n    result[7] = 0;\n    result[8] = this[8] * inverseScale0;\n    result[9] = this[9] * inverseScale1;\n    result[10] = this[10] * inverseScale2;\n    result[11] = 0;\n    result[12] = 0;\n    result[13] = 0;\n    result[14] = 0;\n    result[15] = 1;\n    return result;\n  }\n\n  getRotationMatrix3(result = [-0, -0, -0, -0, -0, -0, -0, -0, -0], scaleResult = null) {\n    const scale = this.getScale(scaleResult || [-0, -0, -0]);\n\n    const inverseScale0 = 1 / scale[0];\n    const inverseScale1 = 1 / scale[1];\n    const inverseScale2 = 1 / scale[2];\n\n    result[0] = this[0] * inverseScale0;\n    result[1] = this[1] * inverseScale1;\n    result[2] = this[2] * inverseScale2;\n    result[3] = this[4] * inverseScale0;\n    result[4] = this[5] * inverseScale1;\n    result[5] = this[6] * inverseScale2;\n    result[6] = this[8] * inverseScale0;\n    result[7] = this[9] * inverseScale1;\n    result[8] = this[10] * inverseScale2;\n    return result;\n  }\n\n  // Modifiers\n\n  transpose() {\n    mat4.transpose(this, this);\n    return this.check();\n  }\n\n  invert() {\n    mat4.invert(this, this);\n    return this.check();\n  }\n\n  // Operations\n\n  multiplyLeft(a) {\n    mat4.multiply(this, a, this);\n    return this.check();\n  }\n\n  multiplyRight(a) {\n    mat4.multiply(this, this, a);\n    return this.check();\n  }\n\n  // Rotates a matrix by the given angle around the X axis\n  rotateX(radians) {\n    mat4.rotateX(this, this, radians);\n    // mat4.rotate(this, this, radians, [1, 0, 0]);\n    return this.check();\n  }\n\n  // Rotates a matrix by the given angle around the Y axis.\n  rotateY(radians) {\n    mat4.rotateY(this, this, radians);\n    // mat4.rotate(this, this, radians, [0, 1, 0]);\n    return this.check();\n  }\n\n  // Rotates a matrix by the given angle around the Z axis.\n  rotateZ(radians) {\n    mat4.rotateZ(this, this, radians);\n    // mat4.rotate(this, this, radians, [0, 0, 1]);\n    return this.check();\n  }\n\n  rotateXYZ([rx, ry, rz]) {\n    return this.rotateX(rx).rotateY(ry).rotateZ(rz);\n  }\n\n  rotateAxis(radians, axis) {\n    mat4.rotate(this, this, radians, axis);\n    return this.check();\n  }\n\n  scale(factor) {\n    if (Array.isArray(factor)) {\n      mat4.scale(this, this, factor);\n    } else {\n      mat4.scale(this, this, [factor, factor, factor]);\n    }\n\n    return this.check();\n  }\n\n  translate(vec) {\n    mat4.translate(this, this, vec);\n    return this.check();\n  }\n\n  // Transforms\n\n  // Transforms any 2, 3 or 4 element vector. 2 and 3 elements are treated as points\n  transform(vector, result) {\n    if (vector.length === 4) {\n      result = vec4.transformMat4(result || [-0, -0, -0, -0], vector, this);\n      checkVector(result, 4);\n      return result;\n    }\n    return this.transformAsPoint(vector, result);\n  }\n\n  // Transforms any 2 or 3 element array as point (w implicitly 1)\n  transformAsPoint(vector, result) {\n    const {length} = vector;\n    switch (length) {\n      case 2:\n        result = vec2.transformMat4(result || [-0, -0], vector, this);\n        break;\n      case 3:\n        result = vec3.transformMat4(result || [-0, -0, -0], vector, this);\n        break;\n      default:\n        throw new Error('Illegal vector');\n    }\n    checkVector(result, vector.length);\n    return result;\n  }\n\n  // Transforms any 2 or 3 element array as vector (w implicitly 0)\n  transformAsVector(vector, result) {\n    switch (vector.length) {\n      case 2:\n        result = vec2_transformMat4AsVector(result || [-0, -0], vector, this);\n        break;\n      case 3:\n        result = vec3_transformMat4AsVector(result || [-0, -0, -0], vector, this);\n        break;\n      default:\n        throw new Error('Illegal vector');\n    }\n    checkVector(result, vector.length);\n    return result;\n  }\n\n  // three.js math API compatibility\n  makeRotationX(radians) {\n    return this.identity().rotateX(radians);\n  }\n\n  makeTranslation(x, y, z) {\n    return this.identity().translate([x, y, z]);\n  }\n\n  // DEPRECATED in 3.0\n\n  transformPoint(vector, result) {\n    deprecated('Matrix4.transformPoint', '3.0');\n    return this.transformAsPoint(vector, result);\n  }\n\n  transformVector(vector, result) {\n    deprecated('Matrix4.transformVector', '3.0');\n    return this.transformAsPoint(vector, result);\n  }\n\n  transformDirection(vector, result) {\n    deprecated('Matrix4.transformDirection', '3.0');\n    return this.transformAsVector(vector, result);\n  }\n}\n"]},"metadata":{},"sourceType":"module"}