{"ast":null,"code":"export function convertToObjectRow(arrayRow, headers) {\n  if (!arrayRow) {\n    throw new Error('null row');\n  }\n\n  if (!headers) {\n    throw new Error('no headers');\n  }\n\n  const objectRow = {};\n\n  for (let i = 0; i < headers.length; i++) {\n    objectRow[headers[i]] = arrayRow[i];\n  }\n\n  return objectRow;\n}\nexport function convertToArrayRow(objectRow, headers) {\n  if (!objectRow) {\n    throw new Error('null row');\n  }\n\n  if (!headers) {\n    throw new Error('no headers');\n  }\n\n  const arrayRow = new Array(headers.length);\n\n  for (let i = 0; i < headers.length; i++) {\n    arrayRow[i] = objectRow[headers[i]];\n  }\n\n  return arrayRow;\n}","map":{"version":3,"mappings":"AACA,OAAO,SAASA,kBAAT,CACLC,QADK,EAELC,OAFK,EAGwB;EAC7B,IAAI,CAACD,QAAL,EAAe;IACb,MAAM,IAAIE,KAAJ,CAAU,UAAV,CAAN;EACD;;EACD,IAAI,CAACD,OAAL,EAAc;IACZ,MAAM,IAAIC,KAAJ,CAAU,YAAV,CAAN;EACD;;EACD,MAAMC,SAAS,GAAG,EAAlB;;EACA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,OAAO,CAACI,MAA5B,EAAoCD,CAAC,EAArC,EAAyC;IACvCD,SAAS,CAACF,OAAO,CAACG,CAAD,CAAR,CAATD,GAAwBH,QAAQ,CAACI,CAAD,CAAhCD;EACD;;EACD,OAAOA,SAAP;AACD;AAGD,OAAO,SAASG,iBAAT,CACLH,SADK,EAELF,OAFK,EAGE;EACP,IAAI,CAACE,SAAL,EAAgB;IACd,MAAM,IAAID,KAAJ,CAAU,UAAV,CAAN;EACD;;EACD,IAAI,CAACD,OAAL,EAAc;IACZ,MAAM,IAAIC,KAAJ,CAAU,YAAV,CAAN;EACD;;EACD,MAAMF,QAAQ,GAAG,IAAIO,KAAJ,CAAUN,OAAO,CAACI,MAAlB,CAAjB;;EACA,KAAK,IAAID,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,OAAO,CAACI,MAA5B,EAAoCD,CAAC,EAArC,EAAyC;IACvCJ,QAAQ,CAACI,CAAD,CAARJ,GAAcG,SAAS,CAACF,OAAO,CAACG,CAAD,CAAR,CAAvBJ;EACD;;EACD,OAAOA,QAAP;AACD","names":["convertToObjectRow","arrayRow","headers","Error","objectRow","i","length","convertToArrayRow","Array"],"sources":["../../../../src/lib/utils/row-utils.ts"],"sourcesContent":["/** Convert an object row to an array row */\nexport function convertToObjectRow(\n  arrayRow: any[],\n  headers: string[]\n): {[columnName: string]: any} {\n  if (!arrayRow) {\n    throw new Error('null row');\n  }\n  if (!headers) {\n    throw new Error('no headers');\n  }\n  const objectRow = {};\n  for (let i = 0; i < headers.length; i++) {\n    objectRow[headers[i]] = arrayRow[i];\n  }\n  return objectRow;\n}\n\n/** Convert an object row to an array row */\nexport function convertToArrayRow(\n  objectRow: {[columnName: string]: any},\n  headers: string[]\n): any[] {\n  if (!objectRow) {\n    throw new Error('null row');\n  }\n  if (!headers) {\n    throw new Error('no headers');\n  }\n  const arrayRow = new Array(headers.length);\n  for (let i = 0; i < headers.length; i++) {\n    arrayRow[i] = objectRow[headers[i]];\n  }\n  return arrayRow;\n}\n"]},"metadata":{},"sourceType":"module"}