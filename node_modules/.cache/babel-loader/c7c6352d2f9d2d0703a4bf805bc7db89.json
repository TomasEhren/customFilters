{"ast":null,"code":"import Matrix from './base/matrix';\nimport { checkVector, deprecated } from '../lib/validators';\nimport { vec4_transformMat3 } from '../lib/gl-matrix-extras';\nimport * as mat3 from 'gl-matrix/mat3';\nimport * as vec2 from 'gl-matrix/vec2';\nimport * as vec3 from 'gl-matrix/vec3';\nconst IDENTITY = Object.freeze([1, 0, 0, 0, 1, 0, 0, 0, 1]);\nconst ZERO = Object.freeze([0, 0, 0, 0, 0, 0, 0, 0, 0]);\nconst INDICES = Object.freeze({\n  COL0ROW0: 0,\n  COL0ROW1: 1,\n  COL0ROW2: 2,\n  COL1ROW0: 3,\n  COL1ROW1: 4,\n  COL1ROW2: 5,\n  COL2ROW0: 6,\n  COL2ROW1: 7,\n  COL2ROW2: 8\n});\nconst constants = {};\nexport default class Matrix3 extends Matrix {\n  static get IDENTITY() {\n    constants.IDENTITY = constants.IDENTITY || Object.freeze(new Matrix3(IDENTITY));\n    return constants.IDENTITY;\n  }\n\n  static get ZERO() {\n    constants.ZERO = constants.ZERO || Object.freeze(new Matrix3(ZERO));\n    return constants.ZERO;\n  }\n\n  get ELEMENTS() {\n    return 9;\n  }\n\n  get RANK() {\n    return 3;\n  }\n\n  get INDICES() {\n    return INDICES;\n  }\n\n  constructor(array) {\n    super(-0, -0, -0, -0, -0, -0, -0, -0, -0);\n\n    if (arguments.length === 1 && Array.isArray(array)) {\n      this.copy(array);\n    } else {\n      this.identity();\n    }\n  }\n\n  copy(array) {\n    this[0] = array[0];\n    this[1] = array[1];\n    this[2] = array[2];\n    this[3] = array[3];\n    this[4] = array[4];\n    this[5] = array[5];\n    this[6] = array[6];\n    this[7] = array[7];\n    this[8] = array[8];\n    return this.check();\n  }\n\n  set(m00, m10, m20, m01, m11, m21, m02, m12, m22) {\n    this[0] = m00;\n    this[1] = m10;\n    this[2] = m20;\n    this[3] = m01;\n    this[4] = m11;\n    this[5] = m21;\n    this[6] = m02;\n    this[7] = m12;\n    this[8] = m22;\n    return this.check();\n  }\n\n  setRowMajor(m00, m01, m02, m10, m11, m12, m20, m21, m22) {\n    this[0] = m00;\n    this[1] = m10;\n    this[2] = m20;\n    this[3] = m01;\n    this[4] = m11;\n    this[5] = m21;\n    this[6] = m02;\n    this[7] = m12;\n    this[8] = m22;\n    return this.check();\n  }\n\n  determinant() {\n    return mat3.determinant(this);\n  }\n\n  identity() {\n    return this.copy(IDENTITY);\n  }\n\n  fromQuaternion(q) {\n    mat3.fromQuat(this, q);\n    return this.check();\n  }\n\n  transpose() {\n    mat3.transpose(this, this);\n    return this.check();\n  }\n\n  invert() {\n    mat3.invert(this, this);\n    return this.check();\n  }\n\n  multiplyLeft(a) {\n    mat3.multiply(this, a, this);\n    return this.check();\n  }\n\n  multiplyRight(a) {\n    mat3.multiply(this, this, a);\n    return this.check();\n  }\n\n  rotate(radians) {\n    mat3.rotate(this, this, radians);\n    return this.check();\n  }\n\n  scale(factor) {\n    if (Array.isArray(factor)) {\n      mat3.scale(this, this, factor);\n    } else {\n      mat3.scale(this, this, [factor, factor, factor]);\n    }\n\n    return this.check();\n  }\n\n  translate(vec) {\n    mat3.translate(this, this, vec);\n    return this.check();\n  }\n\n  transform(vector, result) {\n    switch (vector.length) {\n      case 2:\n        result = vec2.transformMat3(result || [-0, -0], vector, this);\n        break;\n\n      case 3:\n        result = vec3.transformMat3(result || [-0, -0, -0], vector, this);\n        break;\n\n      case 4:\n        result = vec4_transformMat3(result || [-0, -0, -0, -0], vector, this);\n        break;\n\n      default:\n        throw new Error('Illegal vector');\n    }\n\n    checkVector(result, vector.length);\n    return result;\n  }\n\n  transformVector(vector, result) {\n    deprecated('Matrix3.transformVector');\n    return this.transform(vector, result);\n  }\n\n  transformVector2(vector, result) {\n    deprecated('Matrix3.transformVector');\n    return this.transform(vector, result);\n  }\n\n  transformVector3(vector, result) {\n    deprecated('Matrix3.transformVector');\n    return this.transform(vector, result);\n  }\n\n}","map":{"version":3,"mappings":"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","names":["Matrix","checkVector","deprecated","vec4_transformMat3","mat3","vec2","vec3","IDENTITY","Object","freeze","ZERO","INDICES","COL0ROW0","COL0ROW1","COL0ROW2","COL1ROW0","COL1ROW1","COL1ROW2","COL2ROW0","COL2ROW1","COL2ROW2","constants","Matrix3","ELEMENTS","RANK","constructor","array","arguments","length","Array","isArray","copy","identity","check","set","m00","m10","m20","m01","m11","m21","m02","m12","m22","setRowMajor","determinant","fromQuaternion","q","fromQuat","transpose","invert","multiplyLeft","a","multiply","multiplyRight","rotate","radians","scale","factor","translate","vec","transform","vector","result","transformMat3","Error","transformVector","transformVector2","transformVector3"],"sources":["../../../src/classes/matrix3.js"],"sourcesContent":["// Copyright (c) 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport Matrix from './base/matrix';\nimport {checkVector, deprecated} from '../lib/validators';\n// eslint-disable-next-line camelcase\nimport {vec4_transformMat3} from '../lib/gl-matrix-extras';\n\n// @ts-ignore: error TS2307: Cannot find module 'gl-matrix/...'.\nimport * as mat3 from 'gl-matrix/mat3';\n// @ts-ignore: error TS2307: Cannot find module 'gl-matrix/...'.\nimport * as vec2 from 'gl-matrix/vec2';\n// @ts-ignore: error TS2307: Cannot find module 'gl-matrix/...'.\nimport * as vec3 from 'gl-matrix/vec3';\n\nconst IDENTITY = Object.freeze([1, 0, 0, 0, 1, 0, 0, 0, 1]);\nconst ZERO = Object.freeze([0, 0, 0, 0, 0, 0, 0, 0, 0]);\n\nconst INDICES = Object.freeze({\n  COL0ROW0: 0,\n  COL0ROW1: 1,\n  COL0ROW2: 2,\n  COL1ROW0: 3,\n  COL1ROW1: 4,\n  COL1ROW2: 5,\n  COL2ROW0: 6,\n  COL2ROW1: 7,\n  COL2ROW2: 8\n});\n\nconst constants = {};\n\nexport default class Matrix3 extends Matrix {\n  static get IDENTITY() {\n    constants.IDENTITY = constants.IDENTITY || Object.freeze(new Matrix3(IDENTITY));\n    return constants.IDENTITY;\n  }\n\n  static get ZERO() {\n    constants.ZERO = constants.ZERO || Object.freeze(new Matrix3(ZERO));\n    return constants.ZERO;\n  }\n\n  get ELEMENTS() {\n    return 9;\n  }\n\n  get RANK() {\n    return 3;\n  }\n\n  get INDICES() {\n    return INDICES;\n  }\n\n  constructor(array) {\n    // PERF NOTE: initialize elements as double precision numbers\n    super(-0, -0, -0, -0, -0, -0, -0, -0, -0);\n    if (arguments.length === 1 && Array.isArray(array)) {\n      this.copy(array);\n    } else {\n      this.identity();\n    }\n  }\n\n  copy(array) {\n    this[0] = array[0];\n    this[1] = array[1];\n    this[2] = array[2];\n    this[3] = array[3];\n    this[4] = array[4];\n    this[5] = array[5];\n    this[6] = array[6];\n    this[7] = array[7];\n    this[8] = array[8];\n    return this.check();\n  }\n\n  // accepts column major order, stores in column major order\n  // eslint-disable-next-line max-params\n  set(m00, m10, m20, m01, m11, m21, m02, m12, m22) {\n    this[0] = m00;\n    this[1] = m10;\n    this[2] = m20;\n    this[3] = m01;\n    this[4] = m11;\n    this[5] = m21;\n    this[6] = m02;\n    this[7] = m12;\n    this[8] = m22;\n    return this.check();\n  }\n\n  // accepts row major order, stores as column major\n  // eslint-disable-next-line max-params\n  setRowMajor(m00, m01, m02, m10, m11, m12, m20, m21, m22) {\n    this[0] = m00;\n    this[1] = m10;\n    this[2] = m20;\n    this[3] = m01;\n    this[4] = m11;\n    this[5] = m21;\n    this[6] = m02;\n    this[7] = m12;\n    this[8] = m22;\n    return this.check();\n  }\n\n  // Accessors\n\n  determinant() {\n    return mat3.determinant(this);\n  }\n\n  // Constructors\n\n  identity() {\n    return this.copy(IDENTITY);\n  }\n\n  // Calculates a 3x3 matrix from the given quaternion\n  // q quat  Quaternion to create matrix from\n  fromQuaternion(q) {\n    mat3.fromQuat(this, q);\n    return this.check();\n  }\n\n  // Modifiers\n\n  transpose() {\n    mat3.transpose(this, this);\n    return this.check();\n  }\n\n  invert() {\n    mat3.invert(this, this);\n    return this.check();\n  }\n\n  // Operations\n\n  multiplyLeft(a) {\n    mat3.multiply(this, a, this);\n    return this.check();\n  }\n\n  multiplyRight(a) {\n    mat3.multiply(this, this, a);\n    return this.check();\n  }\n\n  rotate(radians) {\n    mat3.rotate(this, this, radians);\n    return this.check();\n  }\n\n  scale(factor) {\n    if (Array.isArray(factor)) {\n      mat3.scale(this, this, factor);\n    } else {\n      mat3.scale(this, this, [factor, factor, factor]);\n    }\n\n    return this.check();\n  }\n\n  translate(vec) {\n    mat3.translate(this, this, vec);\n    return this.check();\n  }\n\n  // Transforms\n\n  transform(vector, result) {\n    switch (vector.length) {\n      case 2:\n        result = vec2.transformMat3(result || [-0, -0], vector, this);\n        break;\n      case 3:\n        result = vec3.transformMat3(result || [-0, -0, -0], vector, this);\n        break;\n      case 4:\n        result = vec4_transformMat3(result || [-0, -0, -0, -0], vector, this);\n        break;\n      default:\n        throw new Error('Illegal vector');\n    }\n    checkVector(result, vector.length);\n    return result;\n  }\n\n  // DEPRECATED IN 3.0\n\n  transformVector(vector, result) {\n    deprecated('Matrix3.transformVector');\n    return this.transform(vector, result);\n  }\n\n  transformVector2(vector, result) {\n    deprecated('Matrix3.transformVector');\n    return this.transform(vector, result);\n  }\n\n  transformVector3(vector, result) {\n    deprecated('Matrix3.transformVector');\n    return this.transform(vector, result);\n  }\n}\n"]},"metadata":{},"sourceType":"module"}