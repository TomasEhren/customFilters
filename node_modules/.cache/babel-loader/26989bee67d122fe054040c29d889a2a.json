{"ast":null,"code":"import _objectSpread from \"/Users/tomasehrenfeld/projs/se-team/tomas/react-apps/custom_filter/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _createClass from \"/Users/tomasehrenfeld/projs/se-team/tomas/react-apps/custom_filter/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _classCallCheck from \"/Users/tomasehrenfeld/projs/se-team/tomas/react-apps/custom_filter/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _inherits from \"/Users/tomasehrenfeld/projs/se-team/tomas/react-apps/custom_filter/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/tomasehrenfeld/projs/se-team/tomas/react-apps/custom_filter/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport View from './view';\nimport Viewport from '../viewports/viewport';\nimport { getMeterZoom } from '@math.gl/web-mercator';\nimport { Matrix4, _SphericalCoordinates as SphericalCoordinates } from '@math.gl/core';\nimport FirstPersonController from '../controllers/first-person-controller';\n\nfunction getDirectionFromBearingAndPitch(_ref) {\n  var bearing = _ref.bearing,\n      pitch = _ref.pitch;\n  var spherical = new SphericalCoordinates({\n    bearing: bearing,\n    pitch: pitch\n  });\n  var direction = spherical.toVector3().normalize();\n  return direction;\n}\n\nvar FirstPersonViewport = /*#__PURE__*/function (_Viewport) {\n  _inherits(FirstPersonViewport, _Viewport);\n\n  var _super = _createSuper(FirstPersonViewport);\n\n  function FirstPersonViewport(props) {\n    _classCallCheck(this, FirstPersonViewport);\n\n    var _props$modelMatrix = props.modelMatrix,\n        modelMatrix = _props$modelMatrix === void 0 ? null : _props$modelMatrix,\n        _props$bearing = props.bearing,\n        bearing = _props$bearing === void 0 ? 0 : _props$bearing,\n        _props$pitch = props.pitch,\n        pitch = _props$pitch === void 0 ? 0 : _props$pitch,\n        _props$up = props.up,\n        up = _props$up === void 0 ? [0, 0, 1] : _props$up;\n    var dir = getDirectionFromBearingAndPitch({\n      bearing: bearing,\n      pitch: pitch === -90 ? 0.0001 : 90 + pitch\n    });\n    var center = modelMatrix ? modelMatrix.transformDirection(dir) : dir;\n    var zoom = getMeterZoom(props);\n    var scale = Math.pow(2, zoom);\n    var viewMatrix = new Matrix4().lookAt({\n      eye: [0, 0, 0],\n      center: center,\n      up: up\n    }).scale(scale);\n    return _super.call(this, _objectSpread(_objectSpread({}, props), {}, {\n      zoom: zoom,\n      viewMatrix: viewMatrix\n    }));\n  }\n\n  return _createClass(FirstPersonViewport);\n}(Viewport);\n\nvar FirstPersonView = /*#__PURE__*/function (_View) {\n  _inherits(FirstPersonView, _View);\n\n  var _super2 = _createSuper(FirstPersonView);\n\n  function FirstPersonView(props) {\n    _classCallCheck(this, FirstPersonView);\n\n    return _super2.call(this, _objectSpread(_objectSpread({}, props), {}, {\n      type: FirstPersonViewport\n    }));\n  }\n\n  _createClass(FirstPersonView, [{\n    key: \"controller\",\n    get: function get() {\n      return this._getControllerProps({\n        type: FirstPersonController\n      });\n    }\n  }]);\n\n  return FirstPersonView;\n}(View);\n\nexport { FirstPersonView as default };\nFirstPersonView.displayName = 'FirstPersonView';","map":{"version":3,"mappings":";;;;;AAAA,OAAOA,IAAP,MAAiB,QAAjB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,SAAQC,YAAR,QAA2B,uBAA3B;AACA,SAAQC,OAAR,EAAiBC,qBAAqB,IAAIC,oBAA1C,QAAqE,eAArE;AACA,OAAOC,qBAAP,MAAkC,wCAAlC;;AAEA,SAASC,+BAAT,OAA2D;EAAA,IAAjBC,OAAiB,QAAjBA,OAAiB;EAAA,IAARC,KAAQ,QAARA,KAAQ;EACzD,IAAMC,SAAS,GAAG,IAAIL,oBAAJ,CAAyB;IAACG,OAAD,EAACA,OAAD;IAAUC;EAAV,CAAzB,CAAlB;EACA,IAAME,SAAS,GAAGD,SAAS,CAACE,SAAVF,GAAsBG,SAAtBH,EAAlB;EACA,OAAOC,SAAP;AACD;;IAEKG,mB;;;;;EACJC,6BAAYC,KAAZD,EAAmB;IAAA;;IAEjB,yBAMIC,KANJ,CAEEC,WAFF;IAAA,IAEEA,WAFF,mCAEgB,IAFhB;IAAA,qBAMID,KANJ,CAGER,OAHF;IAAA,IAGEA,OAHF,+BAGY,CAHZ;IAAA,mBAMIQ,KANJ,CAIEP,KAJF;IAAA,IAIEA,KAJF,6BAIU,CAJV;IAAA,gBAMIO,KANJ,CAKEE,EALF;IAAA,IAKEA,EALF,0BAKO,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CALP;IASA,IAAMC,GAAG,GAAGZ,+BAA+B,CAAC;MAC1CC,OAD0C,EAC1CA,OAD0C;MAG1CC,KAAK,EAAEA,KAAK,KAAK,CAAC,EAAXA,GAAgB,MAAhBA,GAAyB,KAAKA;IAHK,CAAD,CAA3C;IAOA,IAAMW,MAAM,GAAGH,WAAW,GAAGA,WAAW,CAACI,kBAAZJ,CAA+BE,GAA/BF,CAAH,GAAyCE,GAAnE;IAGA,IAAMG,IAAI,GAAGpB,YAAY,CAACc,KAAD,CAAzB;IACA,IAAMO,KAAK,GAAGC,IAAI,CAACC,GAALD,CAAS,CAATA,EAAYF,IAAZE,CAAd;IACA,IAAME,UAAU,GAAG,IAAIvB,OAAJ,GAAcwB,MAAd,CAAqB;MAACC,GAAG,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAAN;MAAiBR,MAAjB,EAAiBA,MAAjB;MAAyBF;IAAzB,CAArB,EAAmDK,KAAnD,CAAyDA,KAAzD,CAAnB;IAvBiB,yDA0BZP,KA1BY;MA2BfM,IAFI,EAEJA,IA3Be;MA4BfI;IA5Be;EA8BlB;;;EA/B+BzB,Q;;IAkCb4B,e;;;;;EACnBd,yBAAYC,KAAZD,EAAmB;IAAA;;IAAA,0DAEZC,KAFY;MAGfc,IAAI,EAAEhB;IAHS;EAKlB;;;;SAEa,eAAG;MACf,OAAO,KAAKiB,mBAAL,CAAyB;QAC9BD,IAAI,EAAExB;MADwB,CAAzB,CAAP;IAGD;;;;EAZ0CN,I;;SAAxB6B,e;AAerBA,eAAe,CAACG,WAAhBH,GAA8B,iBAA9BA","names":["View","Viewport","getMeterZoom","Matrix4","_SphericalCoordinates","SphericalCoordinates","FirstPersonController","getDirectionFromBearingAndPitch","bearing","pitch","spherical","direction","toVector3","normalize","FirstPersonViewport","constructor","props","modelMatrix","up","dir","center","transformDirection","zoom","scale","Math","pow","viewMatrix","lookAt","eye","FirstPersonView","type","_getControllerProps","displayName"],"sources":["../../../src/views/first-person-view.js"],"sourcesContent":["import View from './view';\nimport Viewport from '../viewports/viewport';\nimport {getMeterZoom} from '@math.gl/web-mercator';\nimport {Matrix4, _SphericalCoordinates as SphericalCoordinates} from '@math.gl/core';\nimport FirstPersonController from '../controllers/first-person-controller';\n\nfunction getDirectionFromBearingAndPitch({bearing, pitch}) {\n  const spherical = new SphericalCoordinates({bearing, pitch});\n  const direction = spherical.toVector3().normalize();\n  return direction;\n}\n\nclass FirstPersonViewport extends Viewport {\n  constructor(props) {\n    // TODO - push direction handling into Matrix4.lookAt\n    const {\n      // view matrix arguments\n      modelMatrix = null,\n      bearing = 0,\n      pitch = 0,\n      up = [0, 0, 1] // Defines up direction, default positive z axis,\n    } = props;\n\n    // Always calculate direction from bearing and pitch\n    const dir = getDirectionFromBearingAndPitch({\n      bearing,\n      // Avoid \"pixel project matrix not invertible\" error\n      pitch: pitch === -90 ? 0.0001 : 90 + pitch\n    });\n\n    // Direction is relative to model coordinates, of course\n    const center = modelMatrix ? modelMatrix.transformDirection(dir) : dir;\n\n    // Just the direction. All the positioning is done in viewport.js\n    const zoom = getMeterZoom(props);\n    const scale = Math.pow(2, zoom);\n    const viewMatrix = new Matrix4().lookAt({eye: [0, 0, 0], center, up}).scale(scale);\n\n    super({\n      ...props,\n      zoom,\n      viewMatrix\n    });\n  }\n}\n\nexport default class FirstPersonView extends View {\n  constructor(props) {\n    super({\n      ...props,\n      type: FirstPersonViewport\n    });\n  }\n\n  get controller() {\n    return this._getControllerProps({\n      type: FirstPersonController\n    });\n  }\n}\n\nFirstPersonView.displayName = 'FirstPersonView';\n"]},"metadata":{},"sourceType":"module"}