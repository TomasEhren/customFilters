{"ast":null,"code":"import _classCallCheck from \"/Users/tomasehrenfeld/projs/se-team/tomas/react-apps/custom_filter/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/tomasehrenfeld/projs/se-team/tomas/react-apps/custom_filter/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport Resource from './resource';\n\nvar ResourceManager = /*#__PURE__*/function () {\n  function ResourceManager(_ref) {\n    var gl = _ref.gl,\n        protocol = _ref.protocol;\n\n    _classCallCheck(this, ResourceManager);\n\n    this.protocol = protocol || 'resource://';\n    this._context = {\n      gl: gl,\n      resourceManager: this\n    };\n    this._resources = {};\n    this._consumers = {};\n    this._pruneRequest = null;\n  }\n\n  _createClass(ResourceManager, [{\n    key: \"contains\",\n    value: function contains(resourceId) {\n      if (resourceId.startsWith(this.protocol)) {\n        return true;\n      }\n\n      return resourceId in this._resources;\n    }\n  }, {\n    key: \"add\",\n    value: function add(_ref2) {\n      var resourceId = _ref2.resourceId,\n          data = _ref2.data,\n          _ref2$forceUpdate = _ref2.forceUpdate,\n          forceUpdate = _ref2$forceUpdate === void 0 ? false : _ref2$forceUpdate,\n          _ref2$persistent = _ref2.persistent,\n          persistent = _ref2$persistent === void 0 ? true : _ref2$persistent;\n      var res = this._resources[resourceId];\n\n      if (res) {\n        res.setData(data, forceUpdate);\n      } else {\n        res = new Resource(resourceId, data, this._context);\n        this._resources[resourceId] = res;\n      }\n\n      res.persistent = persistent;\n    }\n  }, {\n    key: \"remove\",\n    value: function remove(resourceId) {\n      var res = this._resources[resourceId];\n\n      if (res) {\n        res.delete();\n        delete this._resources[resourceId];\n      }\n    }\n  }, {\n    key: \"unsubscribe\",\n    value: function unsubscribe(_ref3) {\n      var consumerId = _ref3.consumerId;\n      var consumer = this._consumers[consumerId];\n\n      if (consumer) {\n        for (var requestId in consumer) {\n          var request = consumer[requestId];\n\n          if (request.resource) {\n            request.resource.unsubscribe(request);\n          }\n        }\n\n        delete this._consumers[consumerId];\n        this.prune();\n      }\n    }\n  }, {\n    key: \"subscribe\",\n    value: function subscribe(_ref4) {\n      var resourceId = _ref4.resourceId,\n          onChange = _ref4.onChange,\n          consumerId = _ref4.consumerId,\n          _ref4$requestId = _ref4.requestId,\n          requestId = _ref4$requestId === void 0 ? 'default' : _ref4$requestId;\n      var resources = this._resources,\n          protocol = this.protocol;\n\n      if (resourceId.startsWith(protocol)) {\n        resourceId = resourceId.replace(protocol, '');\n\n        if (!resources[resourceId]) {\n          this.add({\n            resourceId: resourceId,\n            data: null,\n            persistent: false\n          });\n        }\n      }\n\n      var res = resources[resourceId];\n\n      this._track(consumerId, requestId, res, onChange);\n\n      if (res) {\n        return res.getData();\n      }\n\n      return undefined;\n    }\n  }, {\n    key: \"prune\",\n    value: function prune() {\n      var _this = this;\n\n      if (!this._pruneRequest) {\n        this._pruneRequest = setTimeout(function () {\n          return _this._prune();\n        }, 0);\n      }\n    }\n  }, {\n    key: \"finalize\",\n    value: function finalize() {\n      for (var key in this._resources) {\n        this._resources[key].delete();\n      }\n    }\n  }, {\n    key: \"_track\",\n    value: function _track(consumerId, requestId, resource, onChange) {\n      var consumers = this._consumers;\n      var consumer = consumers[consumerId] = consumers[consumerId] || {};\n      var request = consumer[requestId] || {};\n\n      if (request.resource) {\n        request.resource.unsubscribe(request);\n        request.resource = null;\n        this.prune();\n      }\n\n      if (resource) {\n        consumer[requestId] = request;\n        request.onChange = onChange;\n        request.resource = resource;\n        resource.subscribe(request);\n      }\n    }\n  }, {\n    key: \"_prune\",\n    value: function _prune() {\n      this._pruneRequest = null;\n\n      for (var _i = 0, _Object$keys = Object.keys(this._resources); _i < _Object$keys.length; _i++) {\n        var key = _Object$keys[_i];\n        var res = this._resources[key];\n\n        if (!res.persistent && !res.inUse()) {\n          res.delete();\n          delete this._resources[key];\n        }\n      }\n    }\n  }]);\n\n  return ResourceManager;\n}();\n\nexport { ResourceManager as default };","map":{"version":3,"mappings":"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","names":["Resource","ResourceManager","constructor","gl","protocol","_context","resourceManager","_resources","_consumers","_pruneRequest","contains","resourceId","startsWith","add","data","forceUpdate","persistent","res","setData","remove","delete","unsubscribe","consumerId","consumer","requestId","request","resource","prune","subscribe","onChange","resources","replace","_track","getData","undefined","setTimeout","_prune","finalize","key","consumers","Object","keys","inUse"],"sources":["../../../../src/lib/resource/resource-manager.js"],"sourcesContent":["/* global setTimeout */\nimport Resource from './resource';\n\nexport default class ResourceManager {\n  constructor({gl, protocol}) {\n    this.protocol = protocol || 'resource://';\n\n    this._context = {\n      gl,\n      resourceManager: this\n    };\n    this._resources = {};\n    this._consumers = {};\n\n    this._pruneRequest = null;\n  }\n\n  contains(resourceId) {\n    if (resourceId.startsWith(this.protocol)) {\n      return true;\n    }\n    return resourceId in this._resources;\n  }\n\n  add({resourceId, data, forceUpdate = false, persistent = true}) {\n    let res = this._resources[resourceId];\n\n    if (res) {\n      res.setData(data, forceUpdate);\n    } else {\n      res = new Resource(resourceId, data, this._context);\n      this._resources[resourceId] = res;\n    }\n    // persistent resources can only be removed by calling `remove`\n    // non-persistent resources may be released when there are no more consumers\n    res.persistent = persistent;\n  }\n\n  remove(resourceId) {\n    const res = this._resources[resourceId];\n\n    if (res) {\n      res.delete();\n      delete this._resources[resourceId];\n    }\n  }\n\n  unsubscribe({consumerId}) {\n    const consumer = this._consumers[consumerId];\n    if (consumer) {\n      for (const requestId in consumer) {\n        const request = consumer[requestId];\n        if (request.resource) {\n          request.resource.unsubscribe(request);\n        }\n      }\n      delete this._consumers[consumerId];\n      this.prune();\n    }\n  }\n\n  subscribe({resourceId, onChange, consumerId, requestId = 'default'}) {\n    const {_resources: resources, protocol} = this;\n    if (resourceId.startsWith(protocol)) {\n      resourceId = resourceId.replace(protocol, '');\n      if (!resources[resourceId]) {\n        // Add placeholder. When this resource becomes available, the consumer will be notified.\n        this.add({resourceId, data: null, persistent: false});\n      }\n    }\n    const res = resources[resourceId];\n    this._track(consumerId, requestId, res, onChange);\n    if (res) {\n      return res.getData();\n    }\n\n    return undefined;\n  }\n\n  prune() {\n    if (!this._pruneRequest) {\n      // prune() may be called multiple times in the same animation frame.\n      // Batch multiple requests together\n      this._pruneRequest = setTimeout(() => this._prune(), 0);\n    }\n  }\n\n  finalize() {\n    for (const key in this._resources) {\n      this._resources[key].delete();\n    }\n  }\n\n  _track(consumerId, requestId, resource, onChange) {\n    const consumers = this._consumers;\n    const consumer = (consumers[consumerId] = consumers[consumerId] || {});\n    const request = consumer[requestId] || {};\n\n    if (request.resource) {\n      request.resource.unsubscribe(request);\n      request.resource = null;\n      this.prune();\n    }\n    if (resource) {\n      consumer[requestId] = request;\n      request.onChange = onChange;\n      request.resource = resource;\n      resource.subscribe(request);\n    }\n  }\n\n  _prune() {\n    this._pruneRequest = null;\n\n    for (const key of Object.keys(this._resources)) {\n      const res = this._resources[key];\n      if (!res.persistent && !res.inUse()) {\n        res.delete();\n        delete this._resources[key];\n      }\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}