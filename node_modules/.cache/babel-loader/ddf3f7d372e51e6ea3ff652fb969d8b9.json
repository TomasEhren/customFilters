{"ast":null,"code":"import { API_VERSIONS } from './api/maps-api-common';\nexport const defaultClassicCredentials = {\n  apiKey: 'default_public',\n  region: 'us',\n  username: 'public'\n};\nexport const defaultCloudNativeCredentials = {\n  apiBaseUrl: 'https://gcp-us-east1.api.carto.com'\n};\nlet credentials = {};\nsetDefaultCredentials({});\nexport function setDefaultCredentials(_ref) {\n  let {\n    apiVersion,\n    ...rest\n  } = _ref;\n  apiVersion = apiVersion || API_VERSIONS.V3;\n\n  switch (apiVersion) {\n    case API_VERSIONS.V1:\n    case API_VERSIONS.V2:\n      credentials = {\n        apiVersion,\n        ...defaultClassicCredentials,\n        ...rest\n      };\n      break;\n\n    case API_VERSIONS.V3:\n      credentials = {\n        apiVersion,\n        ...defaultCloudNativeCredentials,\n        ...rest\n      };\n      break;\n\n    default:\n      throw new Error(\"Invalid API version \".concat(apiVersion, \". Use API_VERSIONS enum.\"));\n  }\n}\nexport function getDefaultCredentials() {\n  return credentials;\n}\nexport function buildMapsUrlFromBase(apiBaseUrl) {\n  let suffix = '/v3/maps';\n\n  if (apiBaseUrl.endsWith('/')) {\n    suffix = suffix.substring(1);\n  }\n\n  return \"\".concat(apiBaseUrl).concat(suffix);\n}","map":{"version":3,"mappings":"AAAA,SAAQA,YAAR,QAA2B,uBAA3B;AAEA,OAAO,MAAMC,yBAAyB,GAAG;EACvCC,MAAM,EAAE,gBAD+B;EAEvCC,MAAM,EAAE,IAF+B;EAGvCC,QAAQ,EAAE;AAH6B,CAAlC;AAMP,OAAO,MAAMC,6BAA6B,GAAG;EAC3CC,UAAU,EAAE;AAD+B,CAAtC;AAoBP,IAAIC,WAAwB,GAAG,EAA/B;AAEAC,qBAAqB,CAAC,EAAD,CAArBA;AAEA,OAAO,SAASA,qBAAT,OAA4E;EAAA,IAA7C;IAACC,UAAD;IAAa,GAAGC;EAAhB,CAA6C;EACjFD,UAAU,GAAGA,UAAU,IAAIT,YAAY,CAACW,EAAxCF;;EAEA,QAAQA,UAAR;IACE,KAAKT,YAAY,CAACY,EAAlB;IACA,KAAKZ,YAAY,CAACa,EAAlB;MACEN,WAAW,GAAG;QAACE,UAAD;QAAa,GAAGR,yBAAhB;QAA2C,GAAGS;MAA9C,CAAdH;MACA;;IACF,KAAKP,YAAY,CAACW,EAAlB;MACEJ,WAAW,GAAG;QAACE,UAAD;QAAa,GAAGJ,6BAAhB;QAA+C,GAAGK;MAAlD,CAAdH;MACA;;IACF;MACE,MAAM,IAAIO,KAAJ,+BAAiCL,UAAjC,8BAAN;EATJ;AAWD;AAED,OAAO,SAASM,qBAAT,GAA8C;EACnD,OAAOR,WAAP;AACD;AAED,OAAO,SAASS,oBAAT,CAA8BV,UAA9B,EAA0D;EAC/D,IAAIW,MAAM,GAAG,UAAb;;EACA,IAAIX,UAAU,CAACY,QAAXZ,CAAoB,GAApBA,CAAJ,EAA8B;IAC5BW,MAAM,GAAGA,MAAM,CAACE,SAAPF,CAAiB,CAAjBA,CAATA;EACD;;EAED,iBAAUX,UAAV,SAAuBW,MAAvB;AACD","names":["API_VERSIONS","defaultClassicCredentials","apiKey","region","username","defaultCloudNativeCredentials","apiBaseUrl","credentials","setDefaultCredentials","apiVersion","rest","V3","V1","V2","Error","getDefaultCredentials","buildMapsUrlFromBase","suffix","endsWith","substring"],"sources":["../../src/config.ts"],"sourcesContent":["import {API_VERSIONS} from './api/maps-api-common';\n\nexport const defaultClassicCredentials = {\n  apiKey: 'default_public',\n  region: 'us',\n  username: 'public'\n} as const;\n\nexport const defaultCloudNativeCredentials = {\n  apiBaseUrl: 'https://gcp-us-east1.api.carto.com'\n} as const;\n\nexport interface ClassicCredentials {\n  apiVersion: 'v1' | 'v2';\n  apiKey: string;\n  region: string;\n  username: string;\n  mapsUrl?: string;\n}\n\nexport interface CloudNativeCredentials {\n  apiVersion: 'v3';\n  apiBaseUrl: string;\n  accessToken?: string;\n  mapsUrl?: string;\n}\n\nexport type Credentials = ClassicCredentials | CloudNativeCredentials;\nlet credentials: Credentials = {} as Credentials;\n\nsetDefaultCredentials({});\n\nexport function setDefaultCredentials({apiVersion, ...rest}: Partial<Credentials>) {\n  apiVersion = apiVersion || API_VERSIONS.V3;\n\n  switch (apiVersion) {\n    case API_VERSIONS.V1:\n    case API_VERSIONS.V2:\n      credentials = {apiVersion, ...defaultClassicCredentials, ...rest};\n      break;\n    case API_VERSIONS.V3:\n      credentials = {apiVersion, ...defaultCloudNativeCredentials, ...rest};\n      break;\n    default:\n      throw new Error(`Invalid API version ${apiVersion}. Use API_VERSIONS enum.`);\n  }\n}\n\nexport function getDefaultCredentials(): Credentials {\n  return credentials;\n}\n\nexport function buildMapsUrlFromBase(apiBaseUrl: string): string {\n  let suffix = '/v3/maps';\n  if (apiBaseUrl.endsWith('/')) {\n    suffix = suffix.substring(1);\n  }\n\n  return `${apiBaseUrl}${suffix}`;\n}\n"]},"metadata":{},"sourceType":"module"}