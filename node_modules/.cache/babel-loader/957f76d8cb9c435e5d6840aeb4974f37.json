{"ast":null,"code":"import _asyncToGenerator from \"/Users/tomasehrenfeld/projs/se-team/tomas/react-apps/custom_filter/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _classCallCheck from \"/Users/tomasehrenfeld/projs/se-team/tomas/react-apps/custom_filter/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/tomasehrenfeld/projs/se-team/tomas/react-apps/custom_filter/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _regeneratorRuntime from \"/Users/tomasehrenfeld/projs/se-team/tomas/react-apps/custom_filter/node_modules/@babel/runtime/regenerator/index.js\";\nimport { log } from '@deck.gl/core';\n\nvar Tile2DHeader = /*#__PURE__*/function () {\n  function Tile2DHeader(_ref) {\n    var x = _ref.x,\n        y = _ref.y,\n        z = _ref.z;\n\n    _classCallCheck(this, Tile2DHeader);\n\n    this.x = x;\n    this.y = y;\n    this.z = z;\n    this.isVisible = false;\n    this.isSelected = false;\n    this.parent = null;\n    this.children = [];\n    this.content = null;\n    this._loaderId = 0;\n    this._isLoaded = false;\n    this._isCancelled = false;\n    this._needsReload = false;\n  }\n\n  _createClass(Tile2DHeader, [{\n    key: \"data\",\n    get: function get() {\n      var _this = this;\n\n      return this.isLoading ? this._loader.then(function () {\n        return _this.data;\n      }) : this.content;\n    }\n  }, {\n    key: \"isLoaded\",\n    get: function get() {\n      return this._isLoaded && !this._needsReload;\n    }\n  }, {\n    key: \"isLoading\",\n    get: function get() {\n      return Boolean(this._loader) && !this._isCancelled;\n    }\n  }, {\n    key: \"needsReload\",\n    get: function get() {\n      return this._needsReload || this._isCancelled;\n    }\n  }, {\n    key: \"byteLength\",\n    get: function get() {\n      var result = this.content ? this.content.byteLength : 0;\n\n      if (!Number.isFinite(result)) {\n        log.error('byteLength not defined in tile data')();\n      }\n\n      return result;\n    }\n  }, {\n    key: \"_loadData\",\n    value: function () {\n      var _loadData2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref2) {\n        var getData, requestScheduler, onLoad, onError, x, y, z, bbox, loaderId, signal, requestToken, tileData, error;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                getData = _ref2.getData, requestScheduler = _ref2.requestScheduler, onLoad = _ref2.onLoad, onError = _ref2.onError;\n                x = this.x, y = this.y, z = this.z, bbox = this.bbox;\n                loaderId = this._loaderId;\n                this._abortController = new AbortController();\n                signal = this._abortController.signal;\n                _context.next = 7;\n                return requestScheduler.scheduleRequest(this, function (tile) {\n                  return tile.isSelected ? 1 : -1;\n                });\n\n              case 7:\n                requestToken = _context.sent;\n\n                if (requestToken) {\n                  _context.next = 11;\n                  break;\n                }\n\n                this._isCancelled = true;\n                return _context.abrupt(\"return\");\n\n              case 11:\n                if (!this._isCancelled) {\n                  _context.next = 14;\n                  break;\n                }\n\n                requestToken.done();\n                return _context.abrupt(\"return\");\n\n              case 14:\n                tileData = null;\n                _context.prev = 15;\n                _context.next = 18;\n                return getData({\n                  x: x,\n                  y: y,\n                  z: z,\n                  bbox: bbox,\n                  signal: signal\n                });\n\n              case 18:\n                tileData = _context.sent;\n                _context.next = 24;\n                break;\n\n              case 21:\n                _context.prev = 21;\n                _context.t0 = _context[\"catch\"](15);\n                error = _context.t0 || true;\n\n              case 24:\n                _context.prev = 24;\n                requestToken.done();\n                return _context.finish(24);\n\n              case 27:\n                if (!(loaderId !== this._loaderId)) {\n                  _context.next = 29;\n                  break;\n                }\n\n                return _context.abrupt(\"return\");\n\n              case 29:\n                this._loader = undefined;\n                this.content = tileData;\n\n                if (!(this._isCancelled && !tileData)) {\n                  _context.next = 34;\n                  break;\n                }\n\n                this._isLoaded = false;\n                return _context.abrupt(\"return\");\n\n              case 34:\n                this._isLoaded = true;\n                this._isCancelled = false;\n\n                if (error) {\n                  onError(error, this);\n                } else {\n                  onLoad(this);\n                }\n\n              case 37:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[15, 21, 24, 27]]);\n      }));\n\n      function _loadData(_x) {\n        return _loadData2.apply(this, arguments);\n      }\n\n      return _loadData;\n    }()\n  }, {\n    key: \"loadData\",\n    value: function loadData(opts) {\n      this._isLoaded = false;\n      this._isCancelled = false;\n      this._needsReload = false;\n      this._loaderId++;\n      this._loader = this._loadData(opts);\n      return this._loader;\n    }\n  }, {\n    key: \"setNeedsReload\",\n    value: function setNeedsReload() {\n      if (this.isLoading) {\n        this.abort();\n        this._loader = undefined;\n      }\n\n      this._needsReload = true;\n    }\n  }, {\n    key: \"abort\",\n    value: function abort() {\n      if (this.isLoaded) {\n        return;\n      }\n\n      this._isCancelled = true;\n\n      this._abortController.abort();\n    }\n  }]);\n\n  return Tile2DHeader;\n}();\n\nexport { Tile2DHeader as default };","map":{"version":3,"mappings":"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","names":["log","Tile2DHeader","constructor","x","y","z","isVisible","isSelected","parent","children","content","_loaderId","_isLoaded","_isCancelled","_needsReload","isLoading","_loader","then","data","Boolean","result","byteLength","Number","isFinite","error","getData","requestScheduler","onLoad","onError","bbox","loaderId","_abortController","AbortController","signal","scheduleRequest","tile","requestToken","done","tileData","err","undefined","loadData","opts","_loadData","setNeedsReload","abort","isLoaded"],"sources":["../../../src/tile-layer/tile-2d-header.js"],"sourcesContent":["/* eslint-env browser */\nimport {log} from '@deck.gl/core';\n\nexport default class Tile2DHeader {\n  constructor({x, y, z}) {\n    this.x = x;\n    this.y = y;\n    this.z = z;\n    this.isVisible = false;\n    this.isSelected = false;\n    this.parent = null;\n    this.children = [];\n\n    this.content = null;\n\n    this._loaderId = 0;\n    this._isLoaded = false;\n    this._isCancelled = false;\n    this._needsReload = false;\n  }\n\n  get data() {\n    return this.isLoading ? this._loader.then(() => this.data) : this.content;\n  }\n\n  get isLoaded() {\n    return this._isLoaded && !this._needsReload;\n  }\n\n  get isLoading() {\n    return Boolean(this._loader) && !this._isCancelled;\n  }\n\n  get needsReload() {\n    return this._needsReload || this._isCancelled;\n  }\n\n  get byteLength() {\n    const result = this.content ? this.content.byteLength : 0;\n    if (!Number.isFinite(result)) {\n      log.error('byteLength not defined in tile data')();\n    }\n    return result;\n  }\n\n  /* eslint-disable max-statements */\n  async _loadData({getData, requestScheduler, onLoad, onError}) {\n    const {x, y, z, bbox} = this;\n    const loaderId = this._loaderId;\n\n    this._abortController = new AbortController(); // eslint-disable-line no-undef\n    const {signal} = this._abortController;\n\n    const requestToken = await requestScheduler.scheduleRequest(this, tile => {\n      return tile.isSelected ? 1 : -1;\n    });\n\n    if (!requestToken) {\n      this._isCancelled = true;\n      return;\n    }\n    // A tile can be cancelled while being scheduled\n    if (this._isCancelled) {\n      requestToken.done();\n      return;\n    }\n\n    let tileData = null;\n    let error;\n    try {\n      tileData = await getData({x, y, z, bbox, signal});\n    } catch (err) {\n      error = err || true;\n    } finally {\n      requestToken.done();\n    }\n\n    // If loadData has been called with a newer version, discard the result from this operation\n    if (loaderId !== this._loaderId) {\n      return;\n    }\n    // Clear the `isLoading` flag\n    this._loader = undefined;\n    // Rewrite tile content with the result of getTileData if successful, or `null` in case of\n    // error or cancellation\n    this.content = tileData;\n    // If cancelled, do not invoke the callbacks\n    // Consider it loaded if we tried to cancel but `getTileData` still returned data\n    if (this._isCancelled && !tileData) {\n      this._isLoaded = false;\n      return;\n    }\n    this._isLoaded = true;\n    this._isCancelled = false;\n\n    if (error) {\n      onError(error, this);\n    } else {\n      onLoad(this);\n    }\n  }\n  /* eslint-enable max-statements */\n\n  loadData(opts) {\n    this._isLoaded = false;\n    this._isCancelled = false;\n    this._needsReload = false;\n    this._loaderId++;\n    this._loader = this._loadData(opts);\n    return this._loader;\n  }\n\n  setNeedsReload() {\n    if (this.isLoading) {\n      this.abort();\n      this._loader = undefined;\n    }\n    this._needsReload = true;\n  }\n\n  abort() {\n    if (this.isLoaded) {\n      return;\n    }\n\n    this._isCancelled = true;\n    this._abortController.abort();\n  }\n}\n"]},"metadata":{},"sourceType":"module"}