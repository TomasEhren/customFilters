{"ast":null,"code":"import _createForOfIteratorHelper from \"/Users/tomasehrenfeld/projs/se-team/tomas/react-apps/custom_filter/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport GLTFScenegraph from '../api/gltf-scenegraph';\nvar KHR_TEXTURE_BASISU = 'KHR_texture_basisu';\nexport var name = KHR_TEXTURE_BASISU;\nexport function preprocess(gltfData, options) {\n  var scene = new GLTFScenegraph(gltfData);\n  var json = scene.json;\n\n  var _iterator = _createForOfIteratorHelper(json.textures || []),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var texture = _step.value;\n      var extension = scene.getObjectExtension(texture, KHR_TEXTURE_BASISU);\n\n      if (extension) {\n        texture.source = extension.source;\n      }\n\n      scene.removeObjectExtension(texture, KHR_TEXTURE_BASISU);\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n\n  scene.removeExtension(KHR_TEXTURE_BASISU);\n}","map":{"version":3,"mappings":";AAOA,OAAOA,cAAP,MAA2B,wBAA3B;AAEA,IAAMC,kBAAkB,GAAG,oBAA3B;AAGA,OAAO,IAAMC,IAAI,GAAGD,kBAAb;AAMP,OAAO,SAASE,UAAT,CAAoBC,QAApB,EAA4CC,OAA5C,EAA8E;EACnF,IAAMC,KAAK,GAAG,IAAIN,cAAJ,CAAmBI,QAAnB,CAAd;EACA,IAAOG,IAAP,GAAeD,KAAf,CAAOC,IAAP;;EAFmF,2CAI7DA,IAAI,CAACC,QAALD,IAAiB,EAJ4C;EAAA;;EAAA;IAInF,oDAA2C;MAAA,IAAhCE,OAAgC;MACzC,IAAMC,SAAS,GAAGJ,KAAK,CAACK,kBAANL,CAChBG,OADgBH,EAEhBL,kBAFgBK,CAAlB;;MAIA,IAAII,SAAJ,EAAe;QACbD,OAAO,CAACG,MAARH,GAAiBC,SAAS,CAACE,MAA3BH;MACD;;MACDH,KAAK,CAACO,qBAANP,CAA4BG,OAA5BH,EAAqCL,kBAArCK;IACD;EAbkF;IAAA;EAAA;IAAA;EAAA;;EAgBnFA,KAAK,CAACQ,eAANR,CAAsBL,kBAAtBK;AACD","names":["GLTFScenegraph","KHR_TEXTURE_BASISU","name","preprocess","gltfData","options","scene","json","textures","texture","extension","getObjectExtension","source","removeObjectExtension","removeExtension"],"sources":["../../../../src/lib/extensions/KHR_texture_basisu.ts"],"sourcesContent":["// GLTF EXTENSION: KHR_texture_basisu\n// https://github.com/KhronosGroup/glTF/tree/main/extensions/2.0/Khronos/KHR_texture_basisu\n/* eslint-disable camelcase */\n\nimport type {GLTF, GLTF_KHR_texture_basisu} from '../types/gltf-types';\nimport type {GLTFLoaderOptions} from '../../gltf-loader';\n\nimport GLTFScenegraph from '../api/gltf-scenegraph';\n\nconst KHR_TEXTURE_BASISU = 'KHR_texture_basisu';\n\n/** Extension name */\nexport const name = KHR_TEXTURE_BASISU;\n\n/**\n * Replaces a texture source reference with the extension texture\n * Done in preprocess() to prevent load of default image\n */\nexport function preprocess(gltfData: {json: GLTF}, options: GLTFLoaderOptions): void {\n  const scene = new GLTFScenegraph(gltfData);\n  const {json} = scene;\n\n  for (const texture of json.textures || []) {\n    const extension = scene.getObjectExtension<GLTF_KHR_texture_basisu>(\n      texture,\n      KHR_TEXTURE_BASISU\n    );\n    if (extension) {\n      texture.source = extension.source;\n    }\n    scene.removeObjectExtension(texture, KHR_TEXTURE_BASISU);\n  }\n\n  // Remove the top-level extension\n  scene.removeExtension(KHR_TEXTURE_BASISU);\n}\n"]},"metadata":{},"sourceType":"module"}