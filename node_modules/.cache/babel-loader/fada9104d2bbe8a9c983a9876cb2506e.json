{"ast":null,"code":"import _classCallCheck from \"/Users/tomasehrenfeld/projs/se-team/tomas/react-apps/custom_filter/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/tomasehrenfeld/projs/se-team/tomas/react-apps/custom_filter/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { deepEqual } from '../utils/deep-equal';\n\nvar LayerExtension = /*#__PURE__*/function () {\n  function LayerExtension() {\n    var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, LayerExtension);\n\n    _defineProperty(this, \"props\", void 0);\n\n    this.opts = opts;\n  }\n\n  _createClass(LayerExtension, [{\n    key: \"equals\",\n    value: function equals(extension) {\n      if (this === extension) {\n        return true;\n      }\n\n      return this.constructor === extension.constructor && deepEqual(this.opts, extension.opts);\n    }\n  }, {\n    key: \"getShaders\",\n    value: function getShaders(extension) {\n      return null;\n    }\n  }, {\n    key: \"getSubLayerProps\",\n    value: function getSubLayerProps(extension) {\n      var _extension$constructo = extension.constructor.defaultProps,\n          defaultProps = _extension$constructo === void 0 ? {} : _extension$constructo;\n      var newProps = {\n        updateTriggers: {}\n      };\n\n      for (var key in defaultProps) {\n        if (key in this.props) {\n          var propDef = defaultProps[key];\n          var propValue = this.props[key];\n          newProps[key] = propValue;\n\n          if (propDef && propDef.type === 'accessor') {\n            newProps.updateTriggers[key] = this.props.updateTriggers[key];\n\n            if (typeof propValue === 'function') {\n              newProps[key] = this.getSubLayerAccessor(propValue, true);\n            }\n          }\n        }\n      }\n\n      return newProps;\n    }\n  }, {\n    key: \"initializeState\",\n    value: function initializeState(context, extension) {}\n  }, {\n    key: \"updateState\",\n    value: function updateState(params, extension) {}\n  }, {\n    key: \"draw\",\n    value: function draw(params, extension) {}\n  }, {\n    key: \"finalizeState\",\n    value: function finalizeState(extension) {}\n  }]);\n\n  return LayerExtension;\n}();\n\nexport { LayerExtension as default };","map":{"version":3,"mappings":";;;AAmBA,SAAQA,SAAR,QAAwB,qBAAxB;;IAEqBC,c;EAGnBC,0BAAuB;IAAA,IAAXC,IAAW,uEAAJ,EAAI;;IAAA;;IAAAC;;IACrB,KAAKD,IAAL,GAAYA,IAAZ;EACD;;;;WAEDE,gBAAOC,SAAPD,EAAkB;MAChB,IAAI,SAASC,SAAb,EAAwB;QACtB,OAAO,IAAP;MACD;;MAED,OAAO,KAAKJ,WAAL,KAAqBI,SAAS,CAACJ,WAA/B,IAA8CF,SAAS,CAAC,KAAKG,IAAN,EAAYG,SAAS,CAACH,IAAtB,CAA9D;IACD;;;WAEDI,oBAAWD,SAAXC,EAAsB;MACpB,OAAO,IAAP;IACD;;;WAEDC,0BAAiBF,SAAjBE,EAA4B;MAC1B,4BAA4BF,SAAS,CAACJ,WAAtC,CAAOO,YAAP;MAAA,IAAOA,YAAP,sCAAsB,EAAtB;MACA,IAAMC,QAAQ,GAAG;QACfC,cAAc,EAAE;MADD,CAAjB;;MAKA,KAAK,IAAMC,GAAX,IAAkBH,YAAlB,EAAgC;QAC9B,IAAIG,GAAG,IAAI,KAAKC,KAAhB,EAAuB;UACrB,IAAMC,OAAO,GAAGL,YAAY,CAACG,GAAD,CAA5B;UACA,IAAMG,SAAS,GAAG,KAAKF,KAAL,CAAWD,GAAX,CAAlB;UACAF,QAAQ,CAACE,GAAD,CAARF,GAAgBK,SAAhBL;;UACA,IAAII,OAAO,IAAIA,OAAO,CAACE,IAARF,KAAiB,UAAhC,EAA4C;YAC1CJ,QAAQ,CAACC,cAATD,CAAwBE,GAAxBF,IAA+B,KAAKG,KAAL,CAAWF,cAAX,CAA0BC,GAA1B,CAA/BF;;YACA,IAAI,OAAOK,SAAP,KAAqB,UAAzB,EAAqC;cAEnCL,QAAQ,CAACE,GAAD,CAARF,GAAgB,KAAKO,mBAAL,CAAyBF,SAAzB,EAAoC,IAApC,CAAhBL;YACD;UACF;QACF;MACF;;MAED,OAAOA,QAAP;IACD;;;WAEDQ,yBAAgBC,OAAhBD,EAAyBZ,SAAzBY,EAAoC,CAAE;;;WAEtCE,qBAAYC,MAAZD,EAAoBd,SAApBc,EAA+B,CAAE;;;WAEjCE,cAAKD,MAALC,EAAahB,SAAbgB,EAAwB,CAAE;;;WAE1BC,uBAAcjB,SAAdiB,EAAyB,CAAE;;;;;;SAlDRtB,c","names":["deepEqual","LayerExtension","constructor","opts","_defineProperty","equals","extension","getShaders","getSubLayerProps","defaultProps","newProps","updateTriggers","key","props","propDef","propValue","type","getSubLayerAccessor","initializeState","context","updateState","params","draw","finalizeState"],"sources":["../../../src/lib/layer-extension.js"],"sourcesContent":["// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\nimport {deepEqual} from '../utils/deep-equal';\n\nexport default class LayerExtension {\n  props;\n\n  constructor(opts = {}) {\n    this.opts = opts;\n  }\n\n  equals(extension) {\n    if (this === extension) {\n      return true;\n    }\n\n    return this.constructor === extension.constructor && deepEqual(this.opts, extension.opts);\n  }\n\n  getShaders(extension) {\n    return null;\n  }\n\n  getSubLayerProps(extension) {\n    const {defaultProps = {}} = extension.constructor;\n    const newProps = {\n      updateTriggers: {}\n    };\n\n    /* eslint-disable max-depth */\n    for (const key in defaultProps) {\n      if (key in this.props) {\n        const propDef = defaultProps[key];\n        const propValue = this.props[key];\n        newProps[key] = propValue;\n        if (propDef && propDef.type === 'accessor') {\n          newProps.updateTriggers[key] = this.props.updateTriggers[key];\n          if (typeof propValue === 'function') {\n            // @ts-expect-error\n            newProps[key] = this.getSubLayerAccessor(propValue, true);\n          }\n        }\n      }\n    }\n    /* eslint-enable max-depth */\n    return newProps;\n  }\n\n  initializeState(context, extension) {}\n\n  updateState(params, extension) {}\n\n  draw(params, extension) {}\n\n  finalizeState(extension) {}\n}\n"]},"metadata":{},"sourceType":"module"}