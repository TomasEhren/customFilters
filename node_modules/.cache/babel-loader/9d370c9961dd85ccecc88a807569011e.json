{"ast":null,"code":"import _classCallCheck from \"/Users/tomasehrenfeld/projs/se-team/tomas/react-apps/custom_filter/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/tomasehrenfeld/projs/se-team/tomas/react-apps/custom_filter/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { assert } from '@loaders.gl/loader-utils';\n\nvar ManagedArray = /*#__PURE__*/function () {\n  function ManagedArray() {\n    var length = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n    _classCallCheck(this, ManagedArray);\n\n    _defineProperty(this, \"_map\", new Map());\n\n    _defineProperty(this, \"_array\", void 0);\n\n    _defineProperty(this, \"_length\", void 0);\n\n    this._array = new Array(length);\n    this._length = length;\n  }\n\n  _createClass(ManagedArray, [{\n    key: \"length\",\n    get: function get() {\n      return this._length;\n    },\n    set: function set(length) {\n      this._length = length;\n\n      if (length > this._array.length) {\n        this._array.length = length;\n      }\n    }\n  }, {\n    key: \"values\",\n    get: function get() {\n      return this._array;\n    }\n  }, {\n    key: \"get\",\n    value: function get(index) {\n      assert(index < this._array.length);\n      return this._array[index];\n    }\n  }, {\n    key: \"set\",\n    value: function set(index, element) {\n      assert(index >= 0);\n\n      if (index >= this.length) {\n        this.length = index + 1;\n      }\n\n      if (this._map.has(this._array[index])) {\n        this._map.delete(this._array[index]);\n      }\n\n      this._array[index] = element;\n\n      this._map.set(element, index);\n    }\n  }, {\n    key: \"delete\",\n    value: function _delete(element) {\n      var index = this._map.get(element);\n\n      if (index >= 0) {\n        this._array.splice(index, 1);\n\n        this._map.delete(element);\n\n        this.length--;\n      }\n    }\n  }, {\n    key: \"peek\",\n    value: function peek() {\n      return this._array[this._length - 1];\n    }\n  }, {\n    key: \"push\",\n    value: function push(element) {\n      if (!this._map.has(element)) {\n        var index = this.length++;\n        this._array[index] = element;\n\n        this._map.set(element, index);\n      }\n    }\n  }, {\n    key: \"pop\",\n    value: function pop() {\n      var element = this._array[--this.length];\n\n      this._map.delete(element);\n\n      return element;\n    }\n  }, {\n    key: \"reserve\",\n    value: function reserve(length) {\n      assert(length >= 0);\n\n      if (length > this._array.length) {\n        this._array.length = length;\n      }\n    }\n  }, {\n    key: \"resize\",\n    value: function resize(length) {\n      assert(length >= 0);\n      this.length = length;\n    }\n  }, {\n    key: \"trim\",\n    value: function trim(length) {\n      if (length === null || length === undefined) {\n        length = this.length;\n      }\n\n      this._array.length = length;\n    }\n  }, {\n    key: \"reset\",\n    value: function reset() {\n      this._array = [];\n      this._map = new Map();\n      this._length = 0;\n    }\n  }, {\n    key: \"find\",\n    value: function find(target) {\n      return this._map.has(target);\n    }\n  }]);\n\n  return ManagedArray;\n}();\n\nexport { ManagedArray as default };","map":{"version":3,"mappings":"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","names":["assert","ManagedArray","constructor","length","_defineProperty","Map","_array","Array","_length","get","index","set","element","_map","has","delete","splice","peek","push","pop","reserve","resize","trim","undefined","reset","find","target"],"sources":["../../../src/utils/managed-array.ts"],"sourcesContent":["// This file is derived from the Cesium code base under Apache 2 license\n// See LICENSE.md and https://github.com/AnalyticalGraphicsInc/cesium/blob/master/LICENSE.md\n\nimport {assert} from '@loaders.gl/loader-utils';\n\n/**\n * A wrapper around arrays so that the internal length of the array can be manually managed.\n *\n * @alias ManagedArray\n * @constructor\n * @private\n *\n * @param {Number} [length=0] The initial length of the array.\n */\nexport default class ManagedArray {\n  _map = new Map();\n  _array: any[];\n  _length: number;\n\n  constructor(length = 0) {\n    this._array = new Array(length);\n    this._length = length;\n  }\n\n  /**\n   * Gets or sets the length of the array.\n   * If the set length is greater than the length of the internal array, the internal array is resized.\n   *\n   * @memberof ManagedArray.prototype\n   * @type Number\n   */\n  get length() {\n    return this._length;\n  }\n\n  set length(length) {\n    this._length = length;\n    if (length > this._array.length) {\n      this._array.length = length;\n    }\n  }\n\n  /**\n   * Gets the internal array.\n   *\n   * @memberof ManagedArray.prototype\n   * @type Array\n   * @readonly\n   */\n  get values() {\n    return this._array;\n  }\n\n  /**\n   * Gets the element at an index.\n   *\n   * @param {Number} index The index to get.\n   */\n  get(index) {\n    assert(index < this._array.length);\n    return this._array[index];\n  }\n\n  /**\n   * Sets the element at an index. Resizes the array if index is greater than the length of the array.\n   *\n   * @param {Number} index The index to set.\n   * @param {*} element The element to set at index.\n   */\n  set(index, element) {\n    assert(index >= 0);\n\n    if (index >= this.length) {\n      this.length = index + 1;\n    }\n\n    if (this._map.has(this._array[index])) {\n      this._map.delete(this._array[index]);\n    }\n\n    this._array[index] = element;\n    this._map.set(element, index);\n  }\n\n  delete(element) {\n    const index = this._map.get(element);\n    if (index >= 0) {\n      this._array.splice(index, 1);\n      this._map.delete(element);\n      this.length--;\n    }\n  }\n\n  /**\n   * Returns the last element in the array without modifying the array.\n   *\n   * @returns {*} The last element in the array.\n   */\n  peek() {\n    return this._array[this._length - 1];\n  }\n\n  /**\n   * Push an element into the array.\n   *\n   * @param {*} element The element to push.\n   */\n  push(element) {\n    if (!this._map.has(element)) {\n      const index = this.length++;\n      this._array[index] = element;\n      this._map.set(element, index);\n    }\n  }\n\n  /**\n   * Pop an element from the array.\n   *\n   * @returns {*} The last element in the array.\n   */\n  pop() {\n    const element = this._array[--this.length];\n    this._map.delete(element);\n    return element;\n  }\n\n  /**\n   * Resize the internal array if length > _array.length.\n   *\n   * @param {Number} length The length.\n   */\n  reserve(length) {\n    assert(length >= 0);\n\n    if (length > this._array.length) {\n      this._array.length = length;\n    }\n  }\n\n  /**\n   * Resize the array.\n   *\n   * @param {Number} length The length.\n   */\n  resize(length) {\n    assert(length >= 0);\n\n    this.length = length;\n  }\n\n  /**\n   * Trim the internal array to the specified length. Defaults to the current length.\n   *\n   * @param {Number} [length] The length.\n   */\n  trim(length) {\n    if (length === null || length === undefined) {\n      length = this.length;\n    }\n    this._array.length = length;\n  }\n\n  reset() {\n    this._array = [];\n    this._map = new Map();\n    this._length = 0;\n  }\n\n  find(target) {\n    return this._map.has(target);\n  }\n}\n"]},"metadata":{},"sourceType":"module"}