{"ast":null,"code":"import log from '../utils/log';\nimport { isAsyncIterable } from '../utils/iterable-utils';\nimport { parsePropTypes } from './prop-types';\nimport { COMPONENT_SYMBOL, ASYNC_ORIGINAL_SYMBOL, ASYNC_RESOLVED_SYMBOL, ASYNC_DEFAULTS_SYMBOL } from './constants';\nexport function createProps(component, propObjects) {\n  const propsPrototype = getPropsPrototype(component.constructor);\n  const propsInstance = Object.create(propsPrototype);\n  propsInstance[COMPONENT_SYMBOL] = component;\n  propsInstance[ASYNC_ORIGINAL_SYMBOL] = {};\n  propsInstance[ASYNC_RESOLVED_SYMBOL] = {};\n\n  for (let i = 0; i < propObjects.length; ++i) {\n    const props = propObjects[i];\n\n    for (const key in props) {\n      propsInstance[key] = props[key];\n    }\n  }\n\n  Object.freeze(propsInstance);\n  return propsInstance;\n}\n\nfunction getPropsPrototype(componentClass) {\n  const defaultProps = getOwnProperty(componentClass, '_mergedDefaultProps');\n\n  if (!defaultProps) {\n    createPropsPrototypeAndTypes(componentClass);\n    return componentClass._mergedDefaultProps;\n  }\n\n  return defaultProps;\n}\n\nfunction createPropsPrototypeAndTypes(componentClass) {\n  const parent = componentClass.prototype;\n\n  if (!parent) {\n    return;\n  }\n\n  const parentClass = Object.getPrototypeOf(componentClass);\n  const parentDefaultProps = getPropsPrototype(parentClass);\n  const componentDefaultProps = getOwnProperty(componentClass, 'defaultProps') || {};\n  const componentPropDefs = parsePropTypes(componentDefaultProps);\n  const defaultProps = createPropsPrototype(componentPropDefs.defaultProps, parentDefaultProps, componentClass);\n  const propTypes = { ...parentClass._propTypes,\n    ...componentPropDefs.propTypes\n  };\n  addAsyncPropsToPropPrototype(defaultProps, propTypes);\n  const deprecatedProps = { ...parentClass._deprecatedProps,\n    ...componentPropDefs.deprecatedProps\n  };\n  addDeprecatedPropsToPropPrototype(defaultProps, deprecatedProps);\n  componentClass._mergedDefaultProps = defaultProps;\n  componentClass._propTypes = propTypes;\n  componentClass._deprecatedProps = deprecatedProps;\n}\n\nfunction createPropsPrototype(props, parentProps, componentClass) {\n  const defaultProps = Object.create(null);\n  Object.assign(defaultProps, parentProps, props);\n  const id = getComponentName(componentClass);\n  delete props.id;\n  Object.defineProperties(defaultProps, {\n    id: {\n      writable: true,\n      value: id\n    }\n  });\n  return defaultProps;\n}\n\nfunction addDeprecatedPropsToPropPrototype(defaultProps, deprecatedProps) {\n  for (const propName in deprecatedProps) {\n    Object.defineProperty(defaultProps, propName, {\n      enumerable: false,\n\n      set(newValue) {\n        const nameStr = \"\".concat(this.id, \": \").concat(propName);\n\n        for (const newPropName of deprecatedProps[propName]) {\n          if (!hasOwnProperty(this, newPropName)) {\n            this[newPropName] = newValue;\n          }\n        }\n\n        log.deprecated(nameStr, deprecatedProps[propName].join('/'))();\n      }\n\n    });\n  }\n}\n\nfunction addAsyncPropsToPropPrototype(defaultProps, propTypes) {\n  const defaultValues = {};\n  const descriptors = {};\n\n  for (const propName in propTypes) {\n    const propType = propTypes[propName];\n    const {\n      name,\n      value\n    } = propType;\n\n    if (propType.async) {\n      defaultValues[name] = value;\n      descriptors[name] = getDescriptorForAsyncProp(name);\n    }\n  }\n\n  defaultProps[ASYNC_DEFAULTS_SYMBOL] = defaultValues;\n  defaultProps[ASYNC_ORIGINAL_SYMBOL] = {};\n  Object.defineProperties(defaultProps, descriptors);\n}\n\nfunction getDescriptorForAsyncProp(name) {\n  return {\n    enumerable: true,\n\n    set(newValue) {\n      if (typeof newValue === 'string' || newValue instanceof Promise || isAsyncIterable(newValue)) {\n        this[ASYNC_ORIGINAL_SYMBOL][name] = newValue;\n      } else {\n        this[ASYNC_RESOLVED_SYMBOL][name] = newValue;\n      }\n    },\n\n    get() {\n      if (this[ASYNC_RESOLVED_SYMBOL]) {\n        if (name in this[ASYNC_RESOLVED_SYMBOL]) {\n          const value = this[ASYNC_RESOLVED_SYMBOL][name];\n          return value || this[ASYNC_DEFAULTS_SYMBOL][name];\n        }\n\n        if (name in this[ASYNC_ORIGINAL_SYMBOL]) {\n          const state = this[COMPONENT_SYMBOL] && this[COMPONENT_SYMBOL].internalState;\n\n          if (state && state.hasAsyncProp(name)) {\n            return state.getAsyncProp(name) || this[ASYNC_DEFAULTS_SYMBOL][name];\n          }\n        }\n      }\n\n      return this[ASYNC_DEFAULTS_SYMBOL][name];\n    }\n\n  };\n}\n\nfunction hasOwnProperty(object, prop) {\n  return Object.prototype.hasOwnProperty.call(object, prop);\n}\n\nfunction getOwnProperty(object, prop) {\n  return hasOwnProperty(object, prop) && object[prop];\n}\n\nfunction getComponentName(componentClass) {\n  const componentName = getOwnProperty(componentClass, 'layerName') || getOwnProperty(componentClass, 'componentName');\n\n  if (!componentName) {\n    log.once(0, \"\".concat(componentClass.name, \".componentName not specified\"))();\n  }\n\n  return componentName || componentClass.name;\n}","map":{"version":3,"mappings":"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","names":["log","isAsyncIterable","parsePropTypes","COMPONENT_SYMBOL","ASYNC_ORIGINAL_SYMBOL","ASYNC_RESOLVED_SYMBOL","ASYNC_DEFAULTS_SYMBOL","createProps","component","propObjects","propsPrototype","getPropsPrototype","constructor","propsInstance","Object","create","i","length","props","key","freeze","componentClass","defaultProps","getOwnProperty","createPropsPrototypeAndTypes","_mergedDefaultProps","parent","prototype","parentClass","getPrototypeOf","parentDefaultProps","componentDefaultProps","componentPropDefs","createPropsPrototype","propTypes","_propTypes","addAsyncPropsToPropPrototype","deprecatedProps","_deprecatedProps","addDeprecatedPropsToPropPrototype","parentProps","assign","id","getComponentName","defineProperties","writable","value","propName","defineProperty","enumerable","set","newValue","nameStr","newPropName","hasOwnProperty","deprecated","join","defaultValues","descriptors","propType","name","async","getDescriptorForAsyncProp","Promise","get","state","internalState","hasAsyncProp","getAsyncProp","object","prop","call","componentName","once"],"sources":["../../../src/lifecycle/create-props.ts"],"sourcesContent":["import log from '../utils/log';\nimport {isAsyncIterable} from '../utils/iterable-utils';\nimport {parsePropTypes} from './prop-types';\nimport {\n  COMPONENT_SYMBOL,\n  ASYNC_ORIGINAL_SYMBOL,\n  ASYNC_RESOLVED_SYMBOL,\n  ASYNC_DEFAULTS_SYMBOL\n} from './constants';\nimport {ComponentProps, StatefulComponentProps} from './component';\nimport type Component from './component';\n\n// Create a property object\nexport function createProps<T extends ComponentProps>(\n  component: Component<T>,\n  propObjects: Partial<T>[]\n): StatefulComponentProps<T> {\n  // Get default prop object (a prototype chain for now)\n  const propsPrototype = getPropsPrototype(component.constructor);\n\n  // Create a new prop object with default props object in prototype chain\n  const propsInstance = Object.create(propsPrototype);\n\n  // Props need a back pointer to the owning component\n  propsInstance[COMPONENT_SYMBOL] = component;\n  // The supplied (original) values for those async props that are set to url strings or Promises.\n  // In this case, the actual (i.e. resolved) values are looked up from component.internalState\n  propsInstance[ASYNC_ORIGINAL_SYMBOL] = {};\n  // Note: the actual (resolved) values for props that are NOT set to urls or Promises.\n  // in this case the values are served directly from this map\n  propsInstance[ASYNC_RESOLVED_SYMBOL] = {};\n\n  // \"Copy\" all sync props\n  for (let i = 0; i < propObjects.length; ++i) {\n    const props = propObjects[i];\n    // Do not use Object.assign here to avoid Symbols in props overwriting our private fields\n    // This might happen if one of the arguments is another props instance\n    for (const key in props) {\n      propsInstance[key] = props[key];\n    }\n  }\n\n  // Props must be immutable\n  Object.freeze(propsInstance);\n\n  return propsInstance;\n}\n\n// Return precalculated defaultProps and propType objects if available\n// build them if needed\nfunction getPropsPrototype(componentClass) {\n  const defaultProps = getOwnProperty(componentClass, '_mergedDefaultProps');\n  if (!defaultProps) {\n    createPropsPrototypeAndTypes(componentClass);\n    return componentClass._mergedDefaultProps;\n  }\n  return defaultProps;\n}\n\n// Build defaultProps and propType objects by walking component prototype chain\nfunction createPropsPrototypeAndTypes(componentClass) {\n  const parent = componentClass.prototype;\n  if (!parent) {\n    return;\n  }\n\n  const parentClass = Object.getPrototypeOf(componentClass);\n  const parentDefaultProps = getPropsPrototype(parentClass);\n\n  // Parse propTypes from Component.defaultProps\n  const componentDefaultProps = getOwnProperty(componentClass, 'defaultProps') || {};\n  const componentPropDefs = parsePropTypes(componentDefaultProps);\n\n  // Create any necessary property descriptors and create the default prop object\n  // Assign merged default props\n  const defaultProps = createPropsPrototype(\n    componentPropDefs.defaultProps,\n    parentDefaultProps,\n    componentClass\n  );\n\n  // Create a merged type object\n  const propTypes = {...parentClass._propTypes, ...componentPropDefs.propTypes};\n  // Add getters/setters for async props\n  addAsyncPropsToPropPrototype(defaultProps, propTypes);\n\n  // Create a map for prop whose default value is a callback\n  const deprecatedProps = {\n    ...parentClass._deprecatedProps,\n    ...componentPropDefs.deprecatedProps\n  };\n  // Add setters for deprecated props\n  addDeprecatedPropsToPropPrototype(defaultProps, deprecatedProps);\n\n  // Store the precalculated props\n  componentClass._mergedDefaultProps = defaultProps;\n  componentClass._propTypes = propTypes;\n  componentClass._deprecatedProps = deprecatedProps;\n}\n\n// Builds a pre-merged default props object that component props can inherit from\nfunction createPropsPrototype(props, parentProps, componentClass) {\n  const defaultProps = Object.create(null);\n\n  Object.assign(defaultProps, parentProps, props);\n\n  // Avoid freezing `id` prop\n  const id = getComponentName(componentClass);\n  delete props.id;\n\n  Object.defineProperties(defaultProps, {\n    // `id` is treated specially because layer might need to override it\n    id: {\n      writable: true,\n      value: id\n    }\n  });\n\n  return defaultProps;\n}\n\nfunction addDeprecatedPropsToPropPrototype(defaultProps, deprecatedProps) {\n  for (const propName in deprecatedProps) {\n    /* eslint-disable accessor-pairs */\n    Object.defineProperty(defaultProps, propName, {\n      enumerable: false,\n      set(newValue) {\n        const nameStr = `${this.id}: ${propName}`;\n\n        for (const newPropName of deprecatedProps[propName]) {\n          if (!hasOwnProperty(this, newPropName)) {\n            this[newPropName] = newValue;\n          }\n        }\n\n        log.deprecated(nameStr, deprecatedProps[propName].join('/'))();\n      }\n    });\n    /* eslint-enable accessor-pairs */\n  }\n}\n\n// Create descriptors for overridable props\nfunction addAsyncPropsToPropPrototype(defaultProps, propTypes) {\n  const defaultValues = {};\n\n  const descriptors = {};\n\n  // Move async props into shadow values\n  for (const propName in propTypes) {\n    const propType = propTypes[propName];\n    const {name, value} = propType;\n\n    // Note: async is ES7 keyword, can't destructure\n    if (propType.async) {\n      defaultValues[name] = value;\n      descriptors[name] = getDescriptorForAsyncProp(name);\n    }\n  }\n\n  // Default \"resolved\" values for async props, returned if value not yet resolved/set.\n  defaultProps[ASYNC_DEFAULTS_SYMBOL] = defaultValues;\n  // Shadowed object, just to make sure \"early indexing\" into the instance does not fail\n  defaultProps[ASYNC_ORIGINAL_SYMBOL] = {};\n\n  Object.defineProperties(defaultProps, descriptors);\n}\n\n// Helper: Configures getter and setter for one async prop\nfunction getDescriptorForAsyncProp(name) {\n  return {\n    enumerable: true,\n    // Save the provided value for async props in a special map\n    set(newValue) {\n      if (\n        typeof newValue === 'string' ||\n        newValue instanceof Promise ||\n        isAsyncIterable(newValue)\n      ) {\n        this[ASYNC_ORIGINAL_SYMBOL][name] = newValue;\n      } else {\n        this[ASYNC_RESOLVED_SYMBOL][name] = newValue;\n      }\n    },\n    // Only the component's state knows the true value of async prop\n    get() {\n      if (this[ASYNC_RESOLVED_SYMBOL]) {\n        // Prop value isn't async, so just return it\n        if (name in this[ASYNC_RESOLVED_SYMBOL]) {\n          const value = this[ASYNC_RESOLVED_SYMBOL][name];\n\n          return value || this[ASYNC_DEFAULTS_SYMBOL][name];\n        }\n\n        if (name in this[ASYNC_ORIGINAL_SYMBOL]) {\n          // It's an async prop value: look into component state\n          const state = this[COMPONENT_SYMBOL] && this[COMPONENT_SYMBOL].internalState;\n          if (state && state.hasAsyncProp(name)) {\n            return state.getAsyncProp(name) || this[ASYNC_DEFAULTS_SYMBOL][name];\n          }\n        }\n      }\n\n      // the prop is not supplied, or\n      // component not yet initialized/matched, return the component's default value for the prop\n      return this[ASYNC_DEFAULTS_SYMBOL][name];\n    }\n  };\n}\n\n// HELPER METHODS\n\nfunction hasOwnProperty(object, prop) {\n  return Object.prototype.hasOwnProperty.call(object, prop);\n}\n\n// Constructors have their super class constructors as prototypes\nfunction getOwnProperty(object, prop) {\n  return hasOwnProperty(object, prop) && object[prop];\n}\n\nfunction getComponentName(componentClass) {\n  const componentName =\n    getOwnProperty(componentClass, 'layerName') || getOwnProperty(componentClass, 'componentName');\n  if (!componentName) {\n    log.once(0, `${componentClass.name}.componentName not specified`)();\n  }\n  return componentName || componentClass.name;\n}\n"]},"metadata":{},"sourceType":"module"}