{"ast":null,"code":"import _objectSpread from \"/Users/tomasehrenfeld/projs/se-team/tomas/react-apps/custom_filter/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _createForOfIteratorHelper from \"/Users/tomasehrenfeld/projs/se-team/tomas/react-apps/custom_filter/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _classCallCheck from \"/Users/tomasehrenfeld/projs/se-team/tomas/react-apps/custom_filter/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/tomasehrenfeld/projs/se-team/tomas/react-apps/custom_filter/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _get from \"/Users/tomasehrenfeld/projs/se-team/tomas/react-apps/custom_filter/node_modules/@babel/runtime/helpers/esm/get.js\";\nimport _getPrototypeOf from \"/Users/tomasehrenfeld/projs/se-team/tomas/react-apps/custom_filter/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _inherits from \"/Users/tomasehrenfeld/projs/se-team/tomas/react-apps/custom_filter/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/tomasehrenfeld/projs/se-team/tomas/react-apps/custom_filter/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport TransitionInterpolator from './transition-interpolator';\nimport { lerp } from '@math.gl/core';\nvar DEFAULT_PROPS = ['longitude', 'latitude', 'zoom', 'bearing', 'pitch'];\nvar DEFAULT_REQUIRED_PROPS = ['longitude', 'latitude', 'zoom'];\n\nvar LinearInterpolator = /*#__PURE__*/function (_TransitionInterpolat) {\n  _inherits(LinearInterpolator, _TransitionInterpolat);\n\n  var _super = _createSuper(LinearInterpolator);\n\n  function LinearInterpolator() {\n    var _this;\n\n    var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, LinearInterpolator);\n\n    var transitionProps = Array.isArray(opts) ? opts : opts.transitionProps;\n    _this = _super.call(this, transitionProps || {\n      compare: DEFAULT_PROPS,\n      extract: DEFAULT_PROPS,\n      required: DEFAULT_REQUIRED_PROPS\n    });\n    _this.opts = opts;\n    return _this;\n  }\n\n  _createClass(LinearInterpolator, [{\n    key: \"initializeProps\",\n    value: function initializeProps(startProps, endProps) {\n      var result = _get(_getPrototypeOf(LinearInterpolator.prototype), \"initializeProps\", this).call(this, startProps, endProps);\n\n      var _this$opts = this.opts,\n          makeViewport = _this$opts.makeViewport,\n          around = _this$opts.around;\n\n      if (makeViewport && around) {\n        var startViewport = makeViewport(startProps);\n        var endViewport = makeViewport(endProps);\n        var aroundPosition = startViewport.unproject(around);\n        result.start.around = around;\n        Object.assign(result.end, {\n          around: endViewport.project(aroundPosition),\n          aroundPosition: aroundPosition,\n          width: endProps.width,\n          height: endProps.height\n        });\n      }\n\n      return result;\n    }\n  }, {\n    key: \"interpolateProps\",\n    value: function interpolateProps(startProps, endProps, t) {\n      var propsInTransition = {};\n\n      var _iterator = _createForOfIteratorHelper(this._propsToExtract),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var key = _step.value;\n          propsInTransition[key] = lerp(startProps[key] || 0, endProps[key] || 0, t);\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      if (endProps.aroundPosition) {\n        var viewport = this.opts.makeViewport(_objectSpread(_objectSpread({}, endProps), propsInTransition));\n        Object.assign(propsInTransition, viewport.panByPosition(endProps.aroundPosition, lerp(startProps.around, endProps.around, t)));\n      }\n\n      return propsInTransition;\n    }\n  }]);\n\n  return LinearInterpolator;\n}(TransitionInterpolator);\n\nexport { LinearInterpolator as default };","map":{"version":3,"mappings":";;;;;;;;AAAA,OAAOA,sBAAP,MAAmC,2BAAnC;AACA,SAAQC,IAAR,QAAmB,eAAnB;AAEA,IAAMC,aAAa,GAAG,CAAC,WAAD,EAAc,UAAd,EAA0B,MAA1B,EAAkC,SAAlC,EAA6C,OAA7C,CAAtB;AACA,IAAMC,sBAAsB,GAAG,CAAC,WAAD,EAAc,UAAd,EAA0B,MAA1B,CAA/B;;IAKqBC,kB;;;;;EAOnBC,8BAAuB;IAAA;;IAAA,IAAXC,IAAW,uEAAJ,EAAI;;IAAA;;IAErB,IAAMC,eAAe,GAAGC,KAAK,CAACC,OAAND,CAAcF,IAAdE,IAAsBF,IAAtBE,GAA6BF,IAAI,CAACC,eAA1D;IACA,0BACEA,eAAe,IAAI;MACjBG,OAAO,EAAER,aADQ;MAEjBS,OAAO,EAAET,aAFQ;MAGjBU,QAAQ,EAAET;IAHO,CADrB;IAOA,MAAKG,IAAL,GAAYA,IAAZ;IAVqB;EAWtB;;;;WAEDO,yBAAgBC,UAAhBD,EAA4BE,QAA5BF,EAAsC;MACpC,IAAMG,MAAM,2FAAyBF,UAAzB,EAAqCC,QAArC,CAAZ;;MAEA,iBAA+B,KAAKT,IAApC;MAAA,IAAOW,YAAP,cAAOA,YAAP;MAAA,IAAqBC,MAArB,cAAqBA,MAArB;;MACA,IAAID,YAAY,IAAIC,MAApB,EAA4B;QAC1B,IAAMC,aAAa,GAAGF,YAAY,CAACH,UAAD,CAAlC;QACA,IAAMM,WAAW,GAAGH,YAAY,CAACF,QAAD,CAAhC;QACA,IAAMM,cAAc,GAAGF,aAAa,CAACG,SAAdH,CAAwBD,MAAxBC,CAAvB;QACAH,MAAM,CAACO,KAAPP,CAAaE,MAAbF,GAAsBE,MAAtBF;QACAQ,MAAM,CAACC,MAAPD,CAAcR,MAAM,CAACU,GAArBF,EAA0B;UACxBN,MAAM,EAAEE,WAAW,CAACO,OAAZP,CAAoBC,cAApBD,CADgB;UAExBC,cAFwB,EAExBA,cAFwB;UAGxBO,KAAK,EAAEb,QAAQ,CAACa,KAHQ;UAIxBC,MAAM,EAAEd,QAAQ,CAACc;QAJO,CAA1BL;MAMD;;MAED,OAAOR,MAAP;IACD;;;WAEDc,0BAAiBhB,UAAjBgB,EAA6Bf,QAA7Be,EAAuCC,CAAvCD,EAA0C;MACxC,IAAME,iBAAiB,GAAG,EAA1B;;MADwC,2CAEtB,KAAKC,eAFiB;MAAA;;MAAA;QAExC,oDAAwC;UAAA,IAA7BC,GAA6B;UACtCF,iBAAiB,CAACE,GAAD,CAAjBF,GAAyB/B,IAAI,CAACa,UAAU,CAACoB,GAAD,CAAVpB,IAAmB,CAApB,EAAuBC,QAAQ,CAACmB,GAAD,CAARnB,IAAiB,CAAxC,EAA2CgB,CAA3C,CAA7BC;QACD;MAJuC;QAAA;MAAA;QAAA;MAAA;;MAMxC,IAAIjB,QAAQ,CAACM,cAAb,EAA6B;QAE3B,IAAMc,QAAQ,GAAG,KAAK7B,IAAL,CAAUW,YAAV,iCAA2BF,QAA3B,GAAwCiB,iBAAxC,EAAjB;QACAR,MAAM,CAACC,MAAPD,CACEQ,iBADFR,EAEEW,QAAQ,CAACC,aAATD,CACEpB,QAAQ,CAACM,cADXc,EAGElC,IAAI,CAACa,UAAU,CAACI,MAAZ,EAAoBH,QAAQ,CAACG,MAA7B,EAAqCa,CAArC,CAHNI,CAFFX;MAQD;;MACD,OAAOQ,iBAAP;IACD;;;;EA3D6ChC,sB;;SAA3BI,kB","names":["TransitionInterpolator","lerp","DEFAULT_PROPS","DEFAULT_REQUIRED_PROPS","LinearInterpolator","constructor","opts","transitionProps","Array","isArray","compare","extract","required","initializeProps","startProps","endProps","result","makeViewport","around","startViewport","endViewport","aroundPosition","unproject","start","Object","assign","end","project","width","height","interpolateProps","t","propsInTransition","_propsToExtract","key","viewport","panByPosition"],"sources":["../../../src/transitions/linear-interpolator.js"],"sourcesContent":["import TransitionInterpolator from './transition-interpolator';\nimport {lerp} from '@math.gl/core';\n\nconst DEFAULT_PROPS = ['longitude', 'latitude', 'zoom', 'bearing', 'pitch'];\nconst DEFAULT_REQUIRED_PROPS = ['longitude', 'latitude', 'zoom'];\n\n/**\n * Performs linear interpolation of two view states.\n */\nexport default class LinearInterpolator extends TransitionInterpolator {\n  /**\n   * @param {Object} opts\n   * @param {Array} opts.transitionProps - list of props to apply linear transition to.\n   * @param {Array} opts.around - a screen point to zoom/rotate around.\n   * @param {Function} opts.makeViewport - construct a viewport instance with given props.\n   */\n  constructor(opts = {}) {\n    // Backward compatibility\n    const transitionProps = Array.isArray(opts) ? opts : opts.transitionProps;\n    super(\n      transitionProps || {\n        compare: DEFAULT_PROPS,\n        extract: DEFAULT_PROPS,\n        required: DEFAULT_REQUIRED_PROPS\n      }\n    );\n    this.opts = opts;\n  }\n\n  initializeProps(startProps, endProps) {\n    const result = super.initializeProps(startProps, endProps);\n\n    const {makeViewport, around} = this.opts;\n    if (makeViewport && around) {\n      const startViewport = makeViewport(startProps);\n      const endViewport = makeViewport(endProps);\n      const aroundPosition = startViewport.unproject(around);\n      result.start.around = around;\n      Object.assign(result.end, {\n        around: endViewport.project(aroundPosition),\n        aroundPosition,\n        width: endProps.width,\n        height: endProps.height\n      });\n    }\n\n    return result;\n  }\n\n  interpolateProps(startProps, endProps, t) {\n    const propsInTransition = {};\n    for (const key of this._propsToExtract) {\n      propsInTransition[key] = lerp(startProps[key] || 0, endProps[key] || 0, t);\n    }\n\n    if (endProps.aroundPosition) {\n      // Linear transition should be performed in common space\n      const viewport = this.opts.makeViewport({...endProps, ...propsInTransition});\n      Object.assign(\n        propsInTransition,\n        viewport.panByPosition(\n          endProps.aroundPosition,\n          // anchor point in current screen coordinates\n          lerp(startProps.around, endProps.around, t)\n        )\n      );\n    }\n    return propsInTransition;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}