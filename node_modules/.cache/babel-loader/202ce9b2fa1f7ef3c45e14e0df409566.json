{"ast":null,"code":"import { lights } from '../lights/lights';\nimport lightingShader from './phong-lighting.glsl';\nvar INITIAL_MODULE_OPTIONS = {};\n\nfunction getMaterialUniforms(material) {\n  var _material$ambient = material.ambient,\n      ambient = _material$ambient === void 0 ? 0.35 : _material$ambient,\n      _material$diffuse = material.diffuse,\n      diffuse = _material$diffuse === void 0 ? 0.6 : _material$diffuse,\n      _material$shininess = material.shininess,\n      shininess = _material$shininess === void 0 ? 32 : _material$shininess,\n      _material$specularCol = material.specularColor,\n      specularColor = _material$specularCol === void 0 ? [30, 30, 30] : _material$specularCol;\n  return {\n    lighting_uAmbient: ambient,\n    lighting_uDiffuse: diffuse,\n    lighting_uShininess: shininess,\n    lighting_uSpecularColor: specularColor.map(function (x) {\n      return x / 255;\n    })\n  };\n}\n\nfunction getUniforms() {\n  var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INITIAL_MODULE_OPTIONS;\n\n  if (!('material' in opts)) {\n    return {};\n  }\n\n  var material = opts.material;\n\n  if (!material) {\n    return {\n      lighting_uEnabled: false\n    };\n  }\n\n  return getMaterialUniforms(material);\n}\n\nexport var gouraudLighting = {\n  name: 'gouraud-lighting',\n  dependencies: [lights],\n  vs: lightingShader,\n  defines: {\n    LIGHTING_VERTEX: 1\n  },\n  getUniforms: getUniforms\n};\nexport var phongLighting = {\n  name: 'phong-lighting',\n  dependencies: [lights],\n  fs: lightingShader,\n  defines: {\n    LIGHTING_FRAGMENT: 1\n  },\n  getUniforms: getUniforms\n};","map":{"version":3,"mappings":"AAEA,SAAQA,MAAR,QAAqB,kBAArB;AACA,OAAOC,cAAP,MAA2B,uBAA3B;AAEA,IAAMC,sBAAsB,GAAG,EAA/B;;AAEA,SAASC,mBAAT,CAA6BC,QAA7B,EAAuC;EACrC,wBAAsFA,QAAtF,CAAOC,OAAP;EAAA,IAAOA,OAAP,kCAAiB,IAAjB;EAAA,wBAAsFD,QAAtF,CAAuBE,OAAvB;EAAA,IAAuBA,OAAvB,kCAAiC,GAAjC;EAAA,0BAAsFF,QAAtF,CAAsCG,SAAtC;EAAA,IAAsCA,SAAtC,oCAAkD,EAAlD;EAAA,4BAAsFH,QAAtF,CAAsDI,aAAtD;EAAA,IAAsDA,aAAtD,sCAAsE,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,CAAtE;EAEA,OAAO;IACLC,iBAAiB,EAAEJ,OADd;IAELK,iBAAiB,EAAEJ,OAFd;IAGLK,mBAAmB,EAAEJ,SAHhB;IAILK,uBAAuB,EAAEJ,aAAa,CAACK,GAAdL,CAAkBM,WAAC;MAAA,OAAIA,CAAC,GAAG,GAAR;IAAA,CAAnBN;EAJpB,CAAP;AAMD;;AAED,SAASO,WAAT,GAAoD;EAAA,IAA/BC,IAA+B,uEAAxBd,sBAAwB;;EAClD,IAAI,EAAE,cAAcc,IAAhB,CAAJ,EAA2B;IACzB,OAAO,EAAP;EACD;;EAED,IAAOZ,QAAP,GAAmBY,IAAnB,CAAOZ,QAAP;;EAEA,IAAI,CAACA,QAAL,EAAe;IACb,OAAO;MAACa,iBAAiB,EAAE;IAApB,CAAP;EACD;;EAED,OAAOd,mBAAmB,CAACC,QAAD,CAA1B;AACD;;AAGD,OAAO,IAAMc,eAAe,GAAG;EAC7BC,IAAI,EAAE,kBADuB;EAE7BC,YAAY,EAAE,CAACpB,MAAD,CAFe;EAG7BqB,EAAE,EAAEpB,cAHyB;EAI7BqB,OAAO,EAAE;IACPC,eAAe,EAAE;EADV,CAJoB;EAO7BR;AAP6B,CAAxB;AAWP,OAAO,IAAMS,aAAa,GAAG;EAC3BL,IAAI,EAAE,gBADqB;EAE3BC,YAAY,EAAE,CAACpB,MAAD,CAFa;EAG3ByB,EAAE,EAAExB,cAHuB;EAI3BqB,OAAO,EAAE;IACPI,iBAAiB,EAAE;EADZ,CAJkB;EAO3BX;AAP2B,CAAtB","names":["lights","lightingShader","INITIAL_MODULE_OPTIONS","getMaterialUniforms","material","ambient","diffuse","shininess","specularColor","lighting_uAmbient","lighting_uDiffuse","lighting_uShininess","lighting_uSpecularColor","map","x","getUniforms","opts","lighting_uEnabled","gouraudLighting","name","dependencies","vs","defines","LIGHTING_VERTEX","phongLighting","fs","LIGHTING_FRAGMENT"],"sources":["../../../../src/modules/phong-lighting/phong-lighting.js"],"sourcesContent":["/** @typedef {import('../../types').ShaderModule} ShaderModule */\n\nimport {lights} from '../lights/lights';\nimport lightingShader from './phong-lighting.glsl';\n\nconst INITIAL_MODULE_OPTIONS = {};\n\nfunction getMaterialUniforms(material) {\n  const {ambient = 0.35, diffuse = 0.6, shininess = 32, specularColor = [30, 30, 30]} = material;\n\n  return {\n    lighting_uAmbient: ambient,\n    lighting_uDiffuse: diffuse,\n    lighting_uShininess: shininess,\n    lighting_uSpecularColor: specularColor.map(x => x / 255)\n  };\n}\n\nfunction getUniforms(opts = INITIAL_MODULE_OPTIONS) {\n  if (!('material' in opts)) {\n    return {};\n  }\n\n  const {material} = opts;\n\n  if (!material) {\n    return {lighting_uEnabled: false};\n  }\n\n  return getMaterialUniforms(material);\n}\n\n/** @type {ShaderModule} */\nexport const gouraudLighting = {\n  name: 'gouraud-lighting',\n  dependencies: [lights],\n  vs: lightingShader,\n  defines: {\n    LIGHTING_VERTEX: 1\n  },\n  getUniforms\n};\n\n/** @type {ShaderModule} */\nexport const phongLighting = {\n  name: 'phong-lighting',\n  dependencies: [lights],\n  fs: lightingShader,\n  defines: {\n    LIGHTING_FRAGMENT: 1\n  },\n  getUniforms\n};\n"]},"metadata":{},"sourceType":"module"}