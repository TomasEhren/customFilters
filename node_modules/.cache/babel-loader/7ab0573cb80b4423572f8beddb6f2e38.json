{"ast":null,"code":"import _objectSpread from \"/Users/tomasehrenfeld/projs/se-team/tomas/react-apps/custom_filter/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _classCallCheck from \"/Users/tomasehrenfeld/projs/se-team/tomas/react-apps/custom_filter/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/tomasehrenfeld/projs/se-team/tomas/react-apps/custom_filter/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/Users/tomasehrenfeld/projs/se-team/tomas/react-apps/custom_filter/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/tomasehrenfeld/projs/se-team/tomas/react-apps/custom_filter/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport Controller from './controller';\nimport ViewState from './view-state';\nimport { mod } from '../utils/math-utils';\nimport { Vector3, _SphericalCoordinates as SphericalCoordinates, clamp } from '@math.gl/core';\nvar MOVEMENT_SPEED = 20;\nvar DEFAULT_STATE = {\n  position: [0, 0, 0],\n  pitch: 0,\n  bearing: 0,\n  maxPitch: 90,\n  minPitch: -90\n};\n\nvar FirstPersonState = /*#__PURE__*/function (_ViewState) {\n  _inherits(FirstPersonState, _ViewState);\n\n  var _super = _createSuper(FirstPersonState);\n\n  function FirstPersonState(_ref) {\n    var _this;\n\n    var width = _ref.width,\n        height = _ref.height,\n        _ref$position = _ref.position,\n        position = _ref$position === void 0 ? DEFAULT_STATE.position : _ref$position,\n        _ref$bearing = _ref.bearing,\n        bearing = _ref$bearing === void 0 ? DEFAULT_STATE.bearing : _ref$bearing,\n        _ref$pitch = _ref.pitch,\n        pitch = _ref$pitch === void 0 ? DEFAULT_STATE.pitch : _ref$pitch,\n        longitude = _ref.longitude,\n        latitude = _ref.latitude,\n        _ref$maxPitch = _ref.maxPitch,\n        maxPitch = _ref$maxPitch === void 0 ? DEFAULT_STATE.maxPitch : _ref$maxPitch,\n        _ref$minPitch = _ref.minPitch,\n        minPitch = _ref$minPitch === void 0 ? DEFAULT_STATE.minPitch : _ref$minPitch,\n        startRotatePos = _ref.startRotatePos,\n        startBearing = _ref.startBearing,\n        startPitch = _ref.startPitch,\n        startZoomPosition = _ref.startZoomPosition,\n        startZoom = _ref.startZoom;\n\n    _classCallCheck(this, FirstPersonState);\n\n    _this = _super.call(this, {\n      width: width,\n      height: height,\n      position: position,\n      bearing: bearing,\n      pitch: pitch,\n      longitude: longitude,\n      latitude: latitude,\n      maxPitch: maxPitch,\n      minPitch: minPitch\n    });\n    _this._state = {\n      startRotatePos: startRotatePos,\n      startBearing: startBearing,\n      startPitch: startPitch,\n      startZoomPosition: startZoomPosition,\n      startZoom: startZoom\n    };\n    return _this;\n  }\n\n  _createClass(FirstPersonState, [{\n    key: \"getDirection\",\n    value: function getDirection() {\n      var use2D = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      var spherical = new SphericalCoordinates({\n        bearing: this._viewportProps.bearing,\n        pitch: use2D ? 90 : 90 + this._viewportProps.pitch\n      });\n      var direction = spherical.toVector3().normalize();\n      return direction;\n    }\n  }, {\n    key: \"panStart\",\n    value: function panStart() {\n      return this;\n    }\n  }, {\n    key: \"pan\",\n    value: function pan() {\n      return this;\n    }\n  }, {\n    key: \"panEnd\",\n    value: function panEnd() {\n      return this;\n    }\n  }, {\n    key: \"rotateStart\",\n    value: function rotateStart(_ref2) {\n      var pos = _ref2.pos;\n      return this._getUpdatedState({\n        startRotatePos: pos,\n        startBearing: this._viewportProps.bearing,\n        startPitch: this._viewportProps.pitch\n      });\n    }\n  }, {\n    key: \"rotate\",\n    value: function rotate(_ref3) {\n      var pos = _ref3.pos,\n          _ref3$deltaAngleX = _ref3.deltaAngleX,\n          deltaAngleX = _ref3$deltaAngleX === void 0 ? 0 : _ref3$deltaAngleX,\n          _ref3$deltaAngleY = _ref3.deltaAngleY,\n          deltaAngleY = _ref3$deltaAngleY === void 0 ? 0 : _ref3$deltaAngleY;\n      var _this$_state = this._state,\n          startRotatePos = _this$_state.startRotatePos,\n          startBearing = _this$_state.startBearing,\n          startPitch = _this$_state.startPitch;\n      var _this$_viewportProps = this._viewportProps,\n          width = _this$_viewportProps.width,\n          height = _this$_viewportProps.height;\n\n      if (!startRotatePos || !Number.isFinite(startBearing) || !Number.isFinite(startPitch)) {\n        return this;\n      }\n\n      var newRotation;\n\n      if (pos) {\n        var deltaScaleX = (pos[0] - startRotatePos[0]) / width;\n        var deltaScaleY = (pos[1] - startRotatePos[1]) / height;\n        newRotation = {\n          bearing: startBearing - deltaScaleX * 180,\n          pitch: startPitch - deltaScaleY * 90\n        };\n      } else {\n        newRotation = {\n          bearing: startBearing - deltaAngleX,\n          pitch: startPitch - deltaAngleY\n        };\n      }\n\n      return this._getUpdatedState(newRotation);\n    }\n  }, {\n    key: \"rotateEnd\",\n    value: function rotateEnd() {\n      return this._getUpdatedState({\n        startRotatePos: null,\n        startBearing: null,\n        startPitch: null\n      });\n    }\n  }, {\n    key: \"zoomStart\",\n    value: function zoomStart() {\n      return this._getUpdatedState({\n        startZoomPosition: this._viewportProps.position,\n        startZoom: this._viewportProps.zoom\n      });\n    }\n  }, {\n    key: \"zoom\",\n    value: function zoom(_ref4) {\n      var scale = _ref4.scale;\n      var startZoomPosition = this._state.startZoomPosition;\n\n      if (!startZoomPosition) {\n        startZoomPosition = this._viewportProps.position;\n      }\n\n      var direction = this.getDirection();\n      return this._move(direction, Math.log2(scale) * MOVEMENT_SPEED, startZoomPosition);\n    }\n  }, {\n    key: \"zoomEnd\",\n    value: function zoomEnd() {\n      return this._getUpdatedState({\n        startZoomPosition: null,\n        startZoom: null\n      });\n    }\n  }, {\n    key: \"moveLeft\",\n    value: function moveLeft() {\n      var speed = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : MOVEMENT_SPEED;\n      var direction = this.getDirection(true);\n      return this._move(direction.rotateZ({\n        radians: Math.PI / 2\n      }), speed);\n    }\n  }, {\n    key: \"moveRight\",\n    value: function moveRight() {\n      var speed = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : MOVEMENT_SPEED;\n      var direction = this.getDirection(true);\n      return this._move(direction.rotateZ({\n        radians: -Math.PI / 2\n      }), speed);\n    }\n  }, {\n    key: \"moveUp\",\n    value: function moveUp() {\n      var speed = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : MOVEMENT_SPEED;\n      var direction = this.getDirection(true);\n      return this._move(direction, speed);\n    }\n  }, {\n    key: \"moveDown\",\n    value: function moveDown() {\n      var speed = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : MOVEMENT_SPEED;\n      var direction = this.getDirection(true);\n      return this._move(direction.negate(), speed);\n    }\n  }, {\n    key: \"rotateLeft\",\n    value: function rotateLeft() {\n      var speed = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 15;\n      return this._getUpdatedState({\n        bearing: this._viewportProps.bearing - speed\n      });\n    }\n  }, {\n    key: \"rotateRight\",\n    value: function rotateRight() {\n      var speed = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 15;\n      return this._getUpdatedState({\n        bearing: this._viewportProps.bearing + speed\n      });\n    }\n  }, {\n    key: \"rotateUp\",\n    value: function rotateUp() {\n      var speed = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 10;\n      return this._getUpdatedState({\n        pitch: this._viewportProps.pitch + speed\n      });\n    }\n  }, {\n    key: \"rotateDown\",\n    value: function rotateDown() {\n      var speed = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 10;\n      return this._getUpdatedState({\n        pitch: this._viewportProps.pitch - speed\n      });\n    }\n  }, {\n    key: \"zoomIn\",\n    value: function zoomIn() {\n      var speed = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 2;\n      return this.zoom({\n        scale: speed\n      });\n    }\n  }, {\n    key: \"zoomOut\",\n    value: function zoomOut() {\n      var speed = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 2;\n      return this.zoom({\n        scale: 1 / speed\n      });\n    }\n  }, {\n    key: \"shortestPathFrom\",\n    value: function shortestPathFrom(viewState) {\n      var fromProps = viewState.getViewportProps();\n\n      var props = _objectSpread({}, this._viewportProps);\n\n      var bearing = props.bearing,\n          longitude = props.longitude;\n\n      if (Math.abs(bearing - fromProps.bearing) > 180) {\n        props.bearing = bearing < 0 ? bearing + 360 : bearing - 360;\n      }\n\n      if (Math.abs(longitude - fromProps.longitude) > 180) {\n        props.longitude = longitude < 0 ? longitude + 360 : longitude - 360;\n      }\n\n      return props;\n    }\n  }, {\n    key: \"_move\",\n    value: function _move(direction, speed) {\n      var fromPosition = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : this._viewportProps.position;\n      var delta = direction.scale(speed);\n      return this._getUpdatedState({\n        position: new Vector3(fromPosition).add(delta)\n      });\n    }\n  }, {\n    key: \"_getUpdatedState\",\n    value: function _getUpdatedState(newProps) {\n      return new FirstPersonState(_objectSpread(_objectSpread(_objectSpread({}, this._viewportProps), this._state), newProps));\n    }\n  }, {\n    key: \"_applyConstraints\",\n    value: function _applyConstraints(props) {\n      var pitch = props.pitch,\n          maxPitch = props.maxPitch,\n          minPitch = props.minPitch,\n          longitude = props.longitude,\n          bearing = props.bearing;\n      props.pitch = clamp(pitch, minPitch, maxPitch);\n\n      if (longitude < -180 || longitude > 180) {\n        props.longitude = mod(longitude + 180, 360) - 180;\n      }\n\n      if (bearing < -180 || bearing > 180) {\n        props.bearing = mod(bearing + 180, 360) - 180;\n      }\n\n      return props;\n    }\n  }]);\n\n  return FirstPersonState;\n}(ViewState);\n\nvar FirstPersonController = /*#__PURE__*/function (_Controller) {\n  _inherits(FirstPersonController, _Controller);\n\n  var _super2 = _createSuper(FirstPersonController);\n\n  function FirstPersonController(props) {\n    _classCallCheck(this, FirstPersonController);\n\n    return _super2.call(this, FirstPersonState, props);\n  }\n\n  _createClass(FirstPersonController, [{\n    key: \"linearTransitionProps\",\n    get: function get() {\n      return ['position', 'pitch', 'bearing'];\n    }\n  }]);\n\n  return FirstPersonController;\n}(Controller);\n\nexport { FirstPersonController as default };","map":{"version":3,"mappings":"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","names":["Controller","ViewState","mod","Vector3","_SphericalCoordinates","SphericalCoordinates","clamp","MOVEMENT_SPEED","DEFAULT_STATE","position","pitch","bearing","maxPitch","minPitch","FirstPersonState","constructor","width","height","longitude","latitude","startRotatePos","startBearing","startPitch","startZoomPosition","startZoom","_state","getDirection","use2D","spherical","_viewportProps","direction","toVector3","normalize","panStart","pan","panEnd","rotateStart","pos","_getUpdatedState","rotate","deltaAngleX","deltaAngleY","Number","isFinite","newRotation","deltaScaleX","deltaScaleY","rotateEnd","zoomStart","zoom","scale","_move","Math","log2","zoomEnd","moveLeft","speed","rotateZ","radians","PI","moveRight","moveUp","moveDown","negate","rotateLeft","rotateRight","rotateUp","rotateDown","zoomIn","zoomOut","shortestPathFrom","viewState","fromProps","getViewportProps","props","abs","fromPosition","delta","add","newProps","_applyConstraints","FirstPersonController"],"sources":["../../../src/controllers/first-person-controller.ts"],"sourcesContent":["import Controller from './controller';\nimport ViewState from './view-state';\nimport {mod} from '../utils/math-utils';\n\nimport {Vector3, _SphericalCoordinates as SphericalCoordinates, clamp} from '@math.gl/core';\n\nconst MOVEMENT_SPEED = 20;\nconst DEFAULT_STATE = {\n  position: [0, 0, 0],\n  pitch: 0,\n  bearing: 0,\n  maxPitch: 90,\n  minPitch: -90\n};\n\nclass FirstPersonState extends ViewState {\n  constructor({\n    /* Viewport arguments */\n    width, // Width of viewport\n    height, // Height of viewport\n\n    // Position and orientation\n    position = DEFAULT_STATE.position, // typically in meters from anchor point\n\n    bearing = DEFAULT_STATE.bearing, // Rotation around y axis\n    pitch = DEFAULT_STATE.pitch, // Rotation around x axis\n\n    // Geospatial anchor\n    longitude,\n    latitude,\n\n    maxPitch = DEFAULT_STATE.maxPitch,\n    minPitch = DEFAULT_STATE.minPitch,\n\n    // Model state when the rotate operation first started\n    startRotatePos,\n    startBearing,\n    startPitch,\n    startZoomPosition,\n    startZoom\n  }) {\n    super({\n      width,\n      height,\n      position,\n      bearing,\n      pitch,\n      longitude,\n      latitude,\n      maxPitch,\n      minPitch\n    });\n\n    this._state = {\n      startRotatePos,\n      startBearing,\n      startPitch,\n      startZoomPosition,\n      startZoom\n    };\n  }\n\n  /* Public API */\n\n  getDirection(use2D = false) {\n    const spherical = new SphericalCoordinates({\n      bearing: this._viewportProps.bearing,\n      pitch: use2D ? 90 : 90 + this._viewportProps.pitch\n    });\n    const direction = spherical.toVector3().normalize();\n    return direction;\n  }\n\n  /**\n   * Start panning\n   * @param {[Number, Number]} pos - position on screen where the pointer grabs\n   */\n  panStart() {\n    return this;\n  }\n\n  /**\n   * Pan\n   * @param {[Number, Number]} pos - position on screen where the pointer is\n   */\n  pan() {\n    return this;\n  }\n\n  /**\n   * End panning\n   * Must call if `panStart()` was called\n   */\n  panEnd() {\n    return this;\n  }\n\n  /**\n   * Start rotating\n   * @param {[Number, Number]} pos - position on screen where the pointer grabs\n   */\n  rotateStart({pos}) {\n    return this._getUpdatedState({\n      startRotatePos: pos,\n      startBearing: this._viewportProps.bearing,\n      startPitch: this._viewportProps.pitch\n    });\n  }\n\n  /**\n   * Rotate\n   * @param {[Number, Number]} pos - position on screen where the pointer is\n   */\n  rotate({pos, deltaAngleX = 0, deltaAngleY = 0}) {\n    const {startRotatePos, startBearing, startPitch} = this._state;\n    const {width, height} = this._viewportProps;\n\n    if (!startRotatePos || !Number.isFinite(startBearing) || !Number.isFinite(startPitch)) {\n      return this;\n    }\n\n    let newRotation;\n    if (pos) {\n      const deltaScaleX = (pos[0] - startRotatePos[0]) / width;\n      const deltaScaleY = (pos[1] - startRotatePos[1]) / height;\n      newRotation = {\n        bearing: startBearing - deltaScaleX * 180,\n        pitch: startPitch - deltaScaleY * 90\n      };\n    } else {\n      newRotation = {\n        bearing: startBearing - deltaAngleX,\n        pitch: startPitch - deltaAngleY\n      };\n    }\n\n    return this._getUpdatedState(newRotation);\n  }\n\n  /**\n   * End rotating\n   * Must call if `rotateStart()` was called\n   */\n  rotateEnd() {\n    return this._getUpdatedState({\n      startRotatePos: null,\n      startBearing: null,\n      startPitch: null\n    });\n  }\n\n  /**\n   * Start zooming\n   * @param {[Number, Number]} pos - position on screen where the pointer grabs\n   */\n  zoomStart() {\n    return this._getUpdatedState({\n      startZoomPosition: this._viewportProps.position,\n      startZoom: this._viewportProps.zoom\n    });\n  }\n\n  /**\n   * Zoom\n   * @param {[Number, Number]} pos - position on screen where the current center is\n   * @param {[Number, Number]} startPos - the center position at\n   *   the start of the operation. Must be supplied of `zoomStart()` was not called\n   * @param {Number} scale - a number between [0, 1] specifying the accumulated\n   *   relative scale.\n   */\n  zoom({scale}) {\n    let {startZoomPosition} = this._state;\n    if (!startZoomPosition) {\n      startZoomPosition = this._viewportProps.position;\n    }\n\n    const direction = this.getDirection();\n    return this._move(direction, Math.log2(scale) * MOVEMENT_SPEED, startZoomPosition);\n  }\n\n  /**\n   * End zooming\n   * Must call if `zoomStart()` was called\n   */\n  zoomEnd() {\n    return this._getUpdatedState({\n      startZoomPosition: null,\n      startZoom: null\n    });\n  }\n\n  moveLeft(speed = MOVEMENT_SPEED) {\n    const direction = this.getDirection(true);\n    return this._move(direction.rotateZ({radians: Math.PI / 2}), speed);\n  }\n\n  moveRight(speed = MOVEMENT_SPEED) {\n    const direction = this.getDirection(true);\n    return this._move(direction.rotateZ({radians: -Math.PI / 2}), speed);\n  }\n\n  // forward\n  moveUp(speed = MOVEMENT_SPEED) {\n    const direction = this.getDirection(true);\n    return this._move(direction, speed);\n  }\n\n  // backward\n  moveDown(speed = MOVEMENT_SPEED) {\n    const direction = this.getDirection(true);\n    return this._move(direction.negate(), speed);\n  }\n\n  rotateLeft(speed = 15) {\n    return this._getUpdatedState({\n      bearing: this._viewportProps.bearing - speed\n    });\n  }\n\n  rotateRight(speed = 15) {\n    return this._getUpdatedState({\n      bearing: this._viewportProps.bearing + speed\n    });\n  }\n\n  rotateUp(speed = 10) {\n    return this._getUpdatedState({\n      pitch: this._viewportProps.pitch + speed\n    });\n  }\n\n  rotateDown(speed = 10) {\n    return this._getUpdatedState({\n      pitch: this._viewportProps.pitch - speed\n    });\n  }\n\n  zoomIn(speed = 2) {\n    return this.zoom({scale: speed});\n  }\n\n  zoomOut(speed = 2) {\n    return this.zoom({scale: 1 / speed});\n  }\n\n  // shortest path between two view states\n  shortestPathFrom(viewState) {\n    const fromProps = viewState.getViewportProps();\n    const props = {...this._viewportProps};\n    const {bearing, longitude} = props;\n\n    if (Math.abs(bearing - fromProps.bearing) > 180) {\n      props.bearing = bearing < 0 ? bearing + 360 : bearing - 360;\n    }\n    if (Math.abs(longitude - fromProps.longitude) > 180) {\n      props.longitude = longitude < 0 ? longitude + 360 : longitude - 360;\n    }\n    return props;\n  }\n\n  /* Private methods */\n  _move(direction, speed, fromPosition = this._viewportProps.position) {\n    const delta = direction.scale(speed);\n    return this._getUpdatedState({\n      position: new Vector3(fromPosition).add(delta)\n    });\n  }\n\n  _getUpdatedState(newProps) {\n    // Update _viewportProps\n    return new FirstPersonState({...this._viewportProps, ...this._state, ...newProps});\n  }\n\n  // Apply any constraints (mathematical or defined by _viewportProps) to map state\n  _applyConstraints(props) {\n    // Ensure pitch and zoom are within specified range\n    const {pitch, maxPitch, minPitch, longitude, bearing} = props;\n    props.pitch = clamp(pitch, minPitch, maxPitch);\n\n    // Normalize degrees\n    if (longitude < -180 || longitude > 180) {\n      props.longitude = mod(longitude + 180, 360) - 180;\n    }\n    if (bearing < -180 || bearing > 180) {\n      props.bearing = mod(bearing + 180, 360) - 180;\n    }\n\n    return props;\n  }\n}\n\nexport default class FirstPersonController extends Controller {\n  constructor(props) {\n    super(FirstPersonState, props);\n  }\n\n  get linearTransitionProps() {\n    return ['position', 'pitch', 'bearing'];\n  }\n}\n"]},"metadata":{},"sourceType":"module"}