{"ast":null,"code":"import { isKTX, parseKTX } from './parse-ktx';\nimport { isDDS, parseDDS } from './parse-dds';\nimport { isPVR, parsePVR } from './parse-pvr';\nexport function parseCompressedTexture(data) {\n  if (isKTX(data)) {\n    return parseKTX(data);\n  }\n\n  if (isDDS(data)) {\n    return parseDDS(data);\n  }\n\n  if (isPVR(data)) {\n    return parsePVR(data);\n  }\n\n  throw new Error('Texture container format not recognized');\n}","map":{"version":3,"mappings":"AACA,SAAQA,KAAR,EAAeC,QAAf,QAA8B,aAA9B;AACA,SAAQC,KAAR,EAAeC,QAAf,QAA8B,aAA9B;AACA,SAAQC,KAAR,EAAeC,QAAf,QAA8B,aAA9B;AAOA,OAAO,SAASC,sBAAT,CAAgCC,IAAhC,EAAmE;EACxE,IAAIP,KAAK,CAACO,IAAD,CAAT,EAAiB;IAGf,OAAON,QAAQ,CAACM,IAAD,CAAf;EACD;;EACD,IAAIL,KAAK,CAACK,IAAD,CAAT,EAAiB;IACf,OAAOJ,QAAQ,CAACI,IAAD,CAAf;EACD;;EACD,IAAIH,KAAK,CAACG,IAAD,CAAT,EAAiB;IACf,OAAOF,QAAQ,CAACE,IAAD,CAAf;EACD;;EACD,MAAM,IAAIC,KAAJ,CAAU,yCAAV,CAAN;AACD","names":["isKTX","parseKTX","isDDS","parseDDS","isPVR","parsePVR","parseCompressedTexture","data","Error"],"sources":["../../../../src/lib/parsers/parse-compressed-texture.ts"],"sourcesContent":["import type {TextureLevel} from '../../types';\nimport {isKTX, parseKTX} from './parse-ktx';\nimport {isDDS, parseDDS} from './parse-dds';\nimport {isPVR, parsePVR} from './parse-pvr';\n\n/**\n * Deduces format and parses compressed texture loaded in ArrayBuffer\n * @param data - binary data of compressed texture\n * @returns Array of the texture levels\n */\nexport function parseCompressedTexture(data: ArrayBuffer): TextureLevel[] {\n  if (isKTX(data)) {\n    // TODO: remove @ts-ignore when `parseKTX` output is normalized to loaders.gl texture format\n    // @ts-ignore\n    return parseKTX(data);\n  }\n  if (isDDS(data)) {\n    return parseDDS(data);\n  }\n  if (isPVR(data)) {\n    return parsePVR(data);\n  }\n  throw new Error('Texture container format not recognized');\n}\n"]},"metadata":{},"sourceType":"module"}