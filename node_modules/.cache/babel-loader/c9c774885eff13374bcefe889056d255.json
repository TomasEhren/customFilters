{"ast":null,"code":"import _classCallCheck from \"/Users/tomasehrenfeld/projs/se-team/tomas/react-apps/custom_filter/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/tomasehrenfeld/projs/se-team/tomas/react-apps/custom_filter/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/Users/tomasehrenfeld/projs/se-team/tomas/react-apps/custom_filter/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/tomasehrenfeld/projs/se-team/tomas/react-apps/custom_filter/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport Vector from './base/vector';\nimport { config, isArray } from '../lib/common';\nimport { checkNumber } from '../lib/validators';\nimport * as vec2 from 'gl-matrix/vec2';\nimport { vec2_transformMat4AsVector } from '../lib/gl-matrix-extras';\n\nvar Vector2 = /*#__PURE__*/function (_Vector) {\n  _inherits(Vector2, _Vector);\n\n  var _super = _createSuper(Vector2);\n\n  function Vector2() {\n    var _this;\n\n    var x = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    var y = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n    _classCallCheck(this, Vector2);\n\n    _this = _super.call(this, 2);\n\n    if (isArray(x) && arguments.length === 1) {\n      _this.copy(x);\n    } else {\n      if (config.debug) {\n        checkNumber(x);\n        checkNumber(y);\n      }\n\n      _this[0] = x;\n      _this[1] = y;\n    }\n\n    return _this;\n  }\n\n  _createClass(Vector2, [{\n    key: \"set\",\n    value: function set(x, y) {\n      this[0] = x;\n      this[1] = y;\n      return this.check();\n    }\n  }, {\n    key: \"copy\",\n    value: function copy(array) {\n      this[0] = array[0];\n      this[1] = array[1];\n      return this.check();\n    }\n  }, {\n    key: \"fromObject\",\n    value: function fromObject(object) {\n      if (config.debug) {\n        checkNumber(object.x);\n        checkNumber(object.y);\n      }\n\n      this[0] = object.x;\n      this[1] = object.y;\n      return this.check();\n    }\n  }, {\n    key: \"toObject\",\n    value: function toObject(object) {\n      object.x = this[0];\n      object.y = this[1];\n      return object;\n    }\n  }, {\n    key: \"ELEMENTS\",\n    get: function get() {\n      return 2;\n    }\n  }, {\n    key: \"horizontalAngle\",\n    value: function horizontalAngle() {\n      return Math.atan2(this.y, this.x);\n    }\n  }, {\n    key: \"verticalAngle\",\n    value: function verticalAngle() {\n      return Math.atan2(this.x, this.y);\n    }\n  }, {\n    key: \"transform\",\n    value: function transform(matrix4) {\n      return this.transformAsPoint(matrix4);\n    }\n  }, {\n    key: \"transformAsPoint\",\n    value: function transformAsPoint(matrix4) {\n      vec2.transformMat4(this, this, matrix4);\n      return this.check();\n    }\n  }, {\n    key: \"transformAsVector\",\n    value: function transformAsVector(matrix4) {\n      vec2_transformMat4AsVector(this, this, matrix4);\n      return this.check();\n    }\n  }, {\n    key: \"transformByMatrix3\",\n    value: function transformByMatrix3(matrix3) {\n      vec2.transformMat3(this, this, matrix3);\n      return this.check();\n    }\n  }, {\n    key: \"transformByMatrix2x3\",\n    value: function transformByMatrix2x3(matrix2x3) {\n      vec2.transformMat2d(this, this, matrix2x3);\n      return this.check();\n    }\n  }, {\n    key: \"transformByMatrix2\",\n    value: function transformByMatrix2(matrix2) {\n      vec2.transformMat2(this, this, matrix2);\n      return this.check();\n    }\n  }]);\n\n  return Vector2;\n}(Vector);\n\nexport { Vector2 as default };","map":{"version":3,"mappings":"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","names":["Vector","config","isArray","checkNumber","vec2","vec2_transformMat4AsVector","Vector2","constructor","x","y","arguments","length","copy","debug","set","check","array","fromObject","object","toObject","horizontalAngle","Math","atan2","verticalAngle","transform","matrix4","transformAsPoint","transformMat4","transformAsVector","transformByMatrix3","matrix3","transformMat3","transformByMatrix2x3","matrix2x3","transformMat2d","transformByMatrix2","matrix2","transformMat2"],"sources":["../../../src/classes/vector2.js"],"sourcesContent":["// Copyright (c) 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport Vector from './base/vector';\nimport {config, isArray} from '../lib/common';\nimport {checkNumber} from '../lib/validators';\n\n// @ts-ignore: error TS2307: Cannot find module 'gl-matrix/...'.\nimport * as vec2 from 'gl-matrix/vec2';\n// eslint-disable-next-line camelcase\nimport {vec2_transformMat4AsVector} from '../lib/gl-matrix-extras';\n\nexport default class Vector2 extends Vector {\n  // Creates a new, empty vec2\n  constructor(x = 0, y = 0) {\n    // PERF NOTE: initialize elements as double precision numbers\n    super(2); // -0, -0);\n    if (isArray(x) && arguments.length === 1) {\n      this.copy(x);\n    } else {\n      if (config.debug) {\n        checkNumber(x);\n        checkNumber(y);\n      }\n      this[0] = x;\n      this[1] = y;\n    }\n  }\n\n  set(x, y) {\n    this[0] = x;\n    this[1] = y;\n    return this.check();\n  }\n\n  copy(array) {\n    this[0] = array[0];\n    this[1] = array[1];\n    return this.check();\n  }\n\n  fromObject(object) {\n    if (config.debug) {\n      checkNumber(object.x);\n      checkNumber(object.y);\n    }\n    this[0] = object.x;\n    this[1] = object.y;\n    return this.check();\n  }\n\n  toObject(object) {\n    object.x = this[0];\n    object.y = this[1];\n    return object;\n  }\n\n  // Getters/setters\n  get ELEMENTS() {\n    return 2;\n  }\n\n  // x,y inherited from Vector\n\n  horizontalAngle() {\n    return Math.atan2(this.y, this.x);\n  }\n\n  verticalAngle() {\n    return Math.atan2(this.x, this.y);\n  }\n\n  // Transforms\n\n  transform(matrix4) {\n    return this.transformAsPoint(matrix4);\n  }\n\n  // transforms as point (4th component is implicitly 1)\n  transformAsPoint(matrix4) {\n    vec2.transformMat4(this, this, matrix4);\n    return this.check();\n  }\n\n  // transforms as vector  (4th component is implicitly 0, ignores translation. slightly faster)\n  transformAsVector(matrix4) {\n    vec2_transformMat4AsVector(this, this, matrix4);\n    return this.check();\n  }\n\n  transformByMatrix3(matrix3) {\n    vec2.transformMat3(this, this, matrix3);\n    return this.check();\n  }\n\n  transformByMatrix2x3(matrix2x3) {\n    vec2.transformMat2d(this, this, matrix2x3);\n    return this.check();\n  }\n\n  transformByMatrix2(matrix2) {\n    vec2.transformMat2(this, this, matrix2);\n    return this.check();\n  }\n}\n"]},"metadata":{},"sourceType":"module"}