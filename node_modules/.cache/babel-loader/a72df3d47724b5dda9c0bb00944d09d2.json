{"ast":null,"code":"import _objectSpread from \"/Users/tomasehrenfeld/projs/se-team/tomas/react-apps/custom_filter/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport { VERSION } from './lib/utils/version';\nimport parseBasis from './lib/parsers/parse-basis';\nexport var BasisWorkerLoader = {\n  name: 'Basis',\n  id: 'basis',\n  module: 'textures',\n  version: VERSION,\n  worker: true,\n  extensions: ['basis', 'ktx2'],\n  mimeTypes: ['application/octet-stream', 'image/ktx2'],\n  tests: ['sB'],\n  binary: true,\n  options: {\n    basis: {\n      format: 'auto',\n      libraryPath: 'libs/',\n      containerFormat: 'auto',\n      module: 'transcoder'\n    }\n  }\n};\nexport var BasisLoader = _objectSpread(_objectSpread({}, BasisWorkerLoader), {}, {\n  parse: parseBasis\n});\nexport var _TypecheckBasisWorkerLoader = BasisWorkerLoader;\nexport var _TypecheckBasisLoader = BasisLoader;","map":{"version":3,"mappings":";AACA,SAAQA,OAAR,QAAsB,qBAAtB;AACA,OAAOC,UAAP,MAAuB,2BAAvB;AAKA,OAAO,IAAMC,iBAAiB,GAAG;EAC/BC,IAAI,EAAE,OADyB;EAE/BC,EAAE,EAAE,OAF2B;EAG/BC,MAAM,EAAE,UAHuB;EAI/BC,OAAO,EAAEN,OAJsB;EAK/BO,MAAM,EAAE,IALuB;EAM/BC,UAAU,EAAE,CAAC,OAAD,EAAU,MAAV,CANmB;EAO/BC,SAAS,EAAE,CAAC,0BAAD,EAA6B,YAA7B,CAPoB;EAQ/BC,KAAK,EAAE,CAAC,IAAD,CARwB;EAS/BC,MAAM,EAAE,IATuB;EAU/BC,OAAO,EAAE;IACPC,KAAK,EAAE;MACLC,MAAM,EAAE,MADH;MAELC,WAAW,EAAE,OAFR;MAGLC,eAAe,EAAE,MAHZ;MAILX,MAAM,EAAE;IAJH;EADA;AAVsB,CAA1B;AAuBP,OAAO,IAAMY,WAAW,mCACnBf,iBADmB;EAEtBgB,KAAK,EAAEjB;AAFe,EAAjB;AAMP,OAAO,IAAMkB,2BAAmC,GAAGjB,iBAA5C;AACP,OAAO,IAAMkB,qBAAuC,GAAGH,WAAhD","names":["VERSION","parseBasis","BasisWorkerLoader","name","id","module","version","worker","extensions","mimeTypes","tests","binary","options","basis","format","libraryPath","containerFormat","BasisLoader","parse","_TypecheckBasisWorkerLoader","_TypecheckBasisLoader"],"sources":["../../src/basis-loader.ts"],"sourcesContent":["import type {Loader, LoaderWithParser} from '@loaders.gl/loader-utils';\nimport {VERSION} from './lib/utils/version';\nimport parseBasis from './lib/parsers/parse-basis';\n\n/**\n * Worker loader for Basis super compressed textures\n */\nexport const BasisWorkerLoader = {\n  name: 'Basis',\n  id: 'basis',\n  module: 'textures',\n  version: VERSION,\n  worker: true,\n  extensions: ['basis', 'ktx2'],\n  mimeTypes: ['application/octet-stream', 'image/ktx2'],\n  tests: ['sB'],\n  binary: true,\n  options: {\n    basis: {\n      format: 'auto', // gl context doesn't exist on a worker thread\n      libraryPath: 'libs/',\n      containerFormat: 'auto', // 'basis' || 'ktx2' || 'auto'\n      module: 'transcoder' // 'transcoder' || 'encoder'\n    }\n  }\n};\n\n/**\n * Loader for Basis super compressed textures\n */\nexport const BasisLoader = {\n  ...BasisWorkerLoader,\n  parse: parseBasis\n};\n\n// TYPE TESTS - TODO find a better way than exporting junk\nexport const _TypecheckBasisWorkerLoader: Loader = BasisWorkerLoader;\nexport const _TypecheckBasisLoader: LoaderWithParser = BasisLoader;\n"]},"metadata":{},"sourceType":"module"}