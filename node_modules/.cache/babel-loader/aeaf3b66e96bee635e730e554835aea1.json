{"ast":null,"code":"import { Matrix4 } from '@math.gl/core';\nimport { log } from '@luma.gl/webgl';\nimport ScenegraphNode from './scenegraph-node';\nexport default class GroupNode extends ScenegraphNode {\n  constructor() {\n    let props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    props = Array.isArray(props) ? {\n      children: props\n    } : props;\n    const {\n      children = []\n    } = props;\n    log.assert(children.every(child => child instanceof ScenegraphNode), 'every child must an instance of ScenegraphNode');\n    super(props);\n    this.children = children;\n  }\n\n  add() {\n    for (var _len = arguments.length, children = new Array(_len), _key = 0; _key < _len; _key++) {\n      children[_key] = arguments[_key];\n    }\n\n    for (const child of children) {\n      if (Array.isArray(child)) {\n        this.add(...child);\n      } else {\n        this.children.push(child);\n      }\n    }\n\n    return this;\n  }\n\n  remove(child) {\n    const children = this.children;\n    const indexOf = children.indexOf(child);\n\n    if (indexOf > -1) {\n      children.splice(indexOf, 1);\n    }\n\n    return this;\n  }\n\n  removeAll() {\n    this.children = [];\n    return this;\n  }\n\n  delete() {\n    this.children.forEach(child => child.delete());\n    this.removeAll();\n    super.delete();\n  }\n\n  traverse(visitor) {\n    let {\n      worldMatrix = new Matrix4()\n    } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    const modelMatrix = new Matrix4(worldMatrix).multiplyRight(this.matrix);\n\n    for (const child of this.children) {\n      if (child instanceof GroupNode) {\n        child.traverse(visitor, {\n          worldMatrix: modelMatrix\n        });\n      } else {\n        visitor(child, {\n          worldMatrix: modelMatrix\n        });\n      }\n    }\n  }\n\n}","map":{"version":3,"mappings":"AAAA,SAAQA,OAAR,QAAsB,eAAtB;AACA,SAAQC,GAAR,QAAkB,gBAAlB;AACA,OAAOC,cAAP,MAA2B,mBAA3B;AAEA,eAAe,MAAMC,SAAN,SAAwBD,cAAxB,CAAuC;EACpDE,WAAW,GAAa;IAAA,IAAZC,KAAY,uEAAJ,EAAI;IACtBA,KAAK,GAAGC,KAAK,CAACC,OAAND,CAAcD,KAAdC,IAAuB;MAACE,QAAQ,EAAEH;IAAX,CAAvBC,GAA2CD,KAAnDA;IACA,MAAM;MAACG,QAAQ,GAAG;IAAZ,IAAkBH,KAAxB;IACAJ,GAAG,CAACQ,MAAJR,CACEO,QAAQ,CAACE,KAATF,CAAeG,KAAK,IAAIA,KAAK,YAAYT,cAAzCM,CADFP,EAEE,gDAFFA;IAIA,MAAMI,KAAN;IACA,KAAKG,QAAL,GAAgBA,QAAhB;EACD;;EAGDI,GAAG,GAAc;IAAA,kCAAVJ,QAAU;MAAVA,QAAU;IAAA;;IACf,KAAK,MAAMG,KAAX,IAAoBH,QAApB,EAA8B;MAC5B,IAAIF,KAAK,CAACC,OAAND,CAAcK,KAAdL,CAAJ,EAA0B;QACxB,KAAKM,GAAL,CAAS,GAAGD,KAAZ;MADF,OAEO;QACL,KAAKH,QAAL,CAAcK,IAAd,CAAmBF,KAAnB;MACD;IACF;;IACD,OAAO,IAAP;EACD;;EAEDG,MAAM,CAACH,KAAD,EAAQ;IACZ,MAAMH,QAAQ,GAAG,KAAKA,QAAtB;IACA,MAAMO,OAAO,GAAGP,QAAQ,CAACO,OAATP,CAAiBG,KAAjBH,CAAhB;;IACA,IAAIO,OAAO,GAAG,CAAC,CAAf,EAAkB;MAChBP,QAAQ,CAACQ,MAATR,CAAgBO,OAAhBP,EAAyB,CAAzBA;IACD;;IACD,OAAO,IAAP;EACD;;EAEDS,SAAS,GAAG;IACV,KAAKT,QAAL,GAAgB,EAAhB;IACA,OAAO,IAAP;EACD;;EAEDU,MAAM,GAAG;IACP,KAAKV,QAAL,CAAcW,OAAd,CAAsBR,KAAK,IAAIA,KAAK,CAACO,MAANP,EAA/B;IACA,KAAKM,SAAL;IACA,MAAMC,MAAN;EACD;;EAEDE,QAAQ,CAACC,OAAD,EAA8C;IAAA,IAApC;MAACC,WAAW,GAAG,IAAItB,OAAJ;IAAf,CAAoC,uEAAJ,EAAI;IACpD,MAAMuB,WAAW,GAAG,IAAIvB,OAAJ,CAAYsB,WAAZ,EAAyBE,aAAzB,CAAuC,KAAKC,MAA5C,CAApB;;IAEA,KAAK,MAAMd,KAAX,IAAoB,KAAKH,QAAzB,EAAmC;MACjC,IAAIG,KAAK,YAAYR,SAArB,EAAgC;QAC9BQ,KAAK,CAACS,QAANT,CAAeU,OAAfV,EAAwB;UAACW,WAAW,EAAEC;QAAd,CAAxBZ;MADF,OAEO;QACLU,OAAO,CAACV,KAAD,EAAQ;UAACW,WAAW,EAAEC;QAAd,CAAR,CAAPF;MACD;IACF;EACF;;AAtDmD","names":["Matrix4","log","ScenegraphNode","GroupNode","constructor","props","Array","isArray","children","assert","every","child","add","push","remove","indexOf","splice","removeAll","delete","forEach","traverse","visitor","worldMatrix","modelMatrix","multiplyRight","matrix"],"sources":["../../../src/scenegraph/group-node.js"],"sourcesContent":["import {Matrix4} from '@math.gl/core';\nimport {log} from '@luma.gl/webgl';\nimport ScenegraphNode from './scenegraph-node';\n\nexport default class GroupNode extends ScenegraphNode {\n  constructor(props = {}) {\n    props = Array.isArray(props) ? {children: props} : props;\n    const {children = []} = props;\n    log.assert(\n      children.every(child => child instanceof ScenegraphNode),\n      'every child must an instance of ScenegraphNode'\n    );\n    super(props);\n    this.children = children;\n  }\n\n  // Unpacks arrays and nested arrays of children\n  add(...children) {\n    for (const child of children) {\n      if (Array.isArray(child)) {\n        this.add(...child);\n      } else {\n        this.children.push(child);\n      }\n    }\n    return this;\n  }\n\n  remove(child) {\n    const children = this.children;\n    const indexOf = children.indexOf(child);\n    if (indexOf > -1) {\n      children.splice(indexOf, 1);\n    }\n    return this;\n  }\n\n  removeAll() {\n    this.children = [];\n    return this;\n  }\n\n  delete() {\n    this.children.forEach(child => child.delete());\n    this.removeAll();\n    super.delete();\n  }\n\n  traverse(visitor, {worldMatrix = new Matrix4()} = {}) {\n    const modelMatrix = new Matrix4(worldMatrix).multiplyRight(this.matrix);\n\n    for (const child of this.children) {\n      if (child instanceof GroupNode) {\n        child.traverse(visitor, {worldMatrix: modelMatrix});\n      } else {\n        visitor(child, {worldMatrix: modelMatrix});\n      }\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}