{"ast":null,"code":"import { window, process, isBrowser } from '@probe.gl/env';\nexport function getHiResTimestamp() {\n  var timestamp;\n\n  if (isBrowser && 'performance' in window) {\n    var _window$performance, _window$performance$n;\n\n    timestamp = window === null || window === void 0 ? void 0 : (_window$performance = window.performance) === null || _window$performance === void 0 ? void 0 : (_window$performance$n = _window$performance.now) === null || _window$performance$n === void 0 ? void 0 : _window$performance$n.call(_window$performance);\n  } else if ('hrtime' in process) {\n    var _process$hrtime;\n\n    var timeParts = process === null || process === void 0 ? void 0 : (_process$hrtime = process.hrtime) === null || _process$hrtime === void 0 ? void 0 : _process$hrtime.call(process);\n    timestamp = timeParts[0] * 1000 + timeParts[1] / 1e6;\n  } else {\n    timestamp = Date.now();\n  }\n\n  return timestamp;\n}","map":{"version":3,"mappings":"AAEA,SAAQA,MAAR,EAAgBC,OAAhB,EAAyBC,SAAzB,QAAyC,eAAzC;AAGA,OAAO,SAASC,iBAAT,GAA6B;EAClC,IAAIC,SAAJ;;EACA,IAAIF,SAAS,IAAI,iBAAiBF,MAAlC,EAA0C;IAAA;;IACxCI,SAAS,GAAGJ,MAAH,SAAGA,UAAH,WAAGA,GAAH,MAAGA,GAAH,uBAAGA,MAAM,CAAEK,WAAX,iFAAGC,oBAAqBC,GAAxB,0DAAGC,+CAAZJ;EADF,OAEO,IAAI,YAAYH,OAAhB,EAAyB;IAAA;;IAE9B,IAAMQ,SAAS,GAAGR,OAAH,SAAGA,WAAH,WAAGA,GAAH,MAAGA,GAAH,mBAAGA,OAAO,CAAES,MAAZ,oDAAGC,6BAAlB;IACAP,SAAS,GAAGK,SAAS,CAAC,CAAD,CAATA,GAAe,IAAfA,GAAsBA,SAAS,CAAC,CAAD,CAATA,GAAe,GAAjDL;EAHK,OAIA;IACLA,SAAS,GAAGQ,IAAI,CAACL,GAALK,EAAZR;EACD;;EAED,OAAOA,SAAP;AACD","names":["window","process","isBrowser","getHiResTimestamp","timestamp","performance","_window$performance","now","_window$performance$n","timeParts","hrtime","_process$hrtime","Date"],"sources":["../../../src/utils/hi-res-timestamp.ts"],"sourcesContent":["// probe.gl, MIT license\n\nimport {window, process, isBrowser} from '@probe.gl/env';\n\n/** Get best timer available. */\nexport function getHiResTimestamp() {\n  let timestamp;\n  if (isBrowser && 'performance' in window) {\n    timestamp = window?.performance?.now?.();\n  } else if ('hrtime' in process) {\n    // @ts-ignore\n    const timeParts = process?.hrtime?.();\n    timestamp = timeParts[0] * 1000 + timeParts[1] / 1e6;\n  } else {\n    timestamp = Date.now();\n  }\n\n  return timestamp;\n}\n"]},"metadata":{},"sourceType":"module"}