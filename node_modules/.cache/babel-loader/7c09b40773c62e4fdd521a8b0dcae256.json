{"ast":null,"code":"import _classCallCheck from \"/Users/tomasehrenfeld/projs/se-team/tomas/react-apps/custom_filter/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/tomasehrenfeld/projs/se-team/tomas/react-apps/custom_filter/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/Users/tomasehrenfeld/projs/se-team/tomas/react-apps/custom_filter/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/tomasehrenfeld/projs/se-team/tomas/react-apps/custom_filter/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport Matrix from './base/matrix';\nimport { checkVector, deprecated } from '../lib/validators';\nimport { vec4_transformMat3 } from '../lib/gl-matrix-extras';\nimport * as mat3 from 'gl-matrix/mat3';\nimport * as vec2 from 'gl-matrix/vec2';\nimport * as vec3 from 'gl-matrix/vec3';\nvar IDENTITY = Object.freeze([1, 0, 0, 0, 1, 0, 0, 0, 1]);\nvar ZERO = Object.freeze([0, 0, 0, 0, 0, 0, 0, 0, 0]);\nvar INDICES = Object.freeze({\n  COL0ROW0: 0,\n  COL0ROW1: 1,\n  COL0ROW2: 2,\n  COL1ROW0: 3,\n  COL1ROW1: 4,\n  COL1ROW2: 5,\n  COL2ROW0: 6,\n  COL2ROW1: 7,\n  COL2ROW2: 8\n});\nvar constants = {};\n\nvar Matrix3 = /*#__PURE__*/function (_Matrix) {\n  _inherits(Matrix3, _Matrix);\n\n  var _super = _createSuper(Matrix3);\n\n  function Matrix3(array) {\n    var _this;\n\n    _classCallCheck(this, Matrix3);\n\n    _this = _super.call(this, -0, -0, -0, -0, -0, -0, -0, -0, -0);\n\n    if (arguments.length === 1 && Array.isArray(array)) {\n      _this.copy(array);\n    } else {\n      _this.identity();\n    }\n\n    return _this;\n  }\n\n  _createClass(Matrix3, [{\n    key: \"ELEMENTS\",\n    get: function get() {\n      return 9;\n    }\n  }, {\n    key: \"RANK\",\n    get: function get() {\n      return 3;\n    }\n  }, {\n    key: \"INDICES\",\n    get: function get() {\n      return INDICES;\n    }\n  }, {\n    key: \"copy\",\n    value: function copy(array) {\n      this[0] = array[0];\n      this[1] = array[1];\n      this[2] = array[2];\n      this[3] = array[3];\n      this[4] = array[4];\n      this[5] = array[5];\n      this[6] = array[6];\n      this[7] = array[7];\n      this[8] = array[8];\n      return this.check();\n    }\n  }, {\n    key: \"set\",\n    value: function set(m00, m10, m20, m01, m11, m21, m02, m12, m22) {\n      this[0] = m00;\n      this[1] = m10;\n      this[2] = m20;\n      this[3] = m01;\n      this[4] = m11;\n      this[5] = m21;\n      this[6] = m02;\n      this[7] = m12;\n      this[8] = m22;\n      return this.check();\n    }\n  }, {\n    key: \"setRowMajor\",\n    value: function setRowMajor(m00, m01, m02, m10, m11, m12, m20, m21, m22) {\n      this[0] = m00;\n      this[1] = m10;\n      this[2] = m20;\n      this[3] = m01;\n      this[4] = m11;\n      this[5] = m21;\n      this[6] = m02;\n      this[7] = m12;\n      this[8] = m22;\n      return this.check();\n    }\n  }, {\n    key: \"determinant\",\n    value: function determinant() {\n      return mat3.determinant(this);\n    }\n  }, {\n    key: \"identity\",\n    value: function identity() {\n      return this.copy(IDENTITY);\n    }\n  }, {\n    key: \"fromQuaternion\",\n    value: function fromQuaternion(q) {\n      mat3.fromQuat(this, q);\n      return this.check();\n    }\n  }, {\n    key: \"transpose\",\n    value: function transpose() {\n      mat3.transpose(this, this);\n      return this.check();\n    }\n  }, {\n    key: \"invert\",\n    value: function invert() {\n      mat3.invert(this, this);\n      return this.check();\n    }\n  }, {\n    key: \"multiplyLeft\",\n    value: function multiplyLeft(a) {\n      mat3.multiply(this, a, this);\n      return this.check();\n    }\n  }, {\n    key: \"multiplyRight\",\n    value: function multiplyRight(a) {\n      mat3.multiply(this, this, a);\n      return this.check();\n    }\n  }, {\n    key: \"rotate\",\n    value: function rotate(radians) {\n      mat3.rotate(this, this, radians);\n      return this.check();\n    }\n  }, {\n    key: \"scale\",\n    value: function scale(factor) {\n      if (Array.isArray(factor)) {\n        mat3.scale(this, this, factor);\n      } else {\n        mat3.scale(this, this, [factor, factor, factor]);\n      }\n\n      return this.check();\n    }\n  }, {\n    key: \"translate\",\n    value: function translate(vec) {\n      mat3.translate(this, this, vec);\n      return this.check();\n    }\n  }, {\n    key: \"transform\",\n    value: function transform(vector, result) {\n      switch (vector.length) {\n        case 2:\n          result = vec2.transformMat3(result || [-0, -0], vector, this);\n          break;\n\n        case 3:\n          result = vec3.transformMat3(result || [-0, -0, -0], vector, this);\n          break;\n\n        case 4:\n          result = vec4_transformMat3(result || [-0, -0, -0, -0], vector, this);\n          break;\n\n        default:\n          throw new Error('Illegal vector');\n      }\n\n      checkVector(result, vector.length);\n      return result;\n    }\n  }, {\n    key: \"transformVector\",\n    value: function transformVector(vector, result) {\n      deprecated('Matrix3.transformVector');\n      return this.transform(vector, result);\n    }\n  }, {\n    key: \"transformVector2\",\n    value: function transformVector2(vector, result) {\n      deprecated('Matrix3.transformVector');\n      return this.transform(vector, result);\n    }\n  }, {\n    key: \"transformVector3\",\n    value: function transformVector3(vector, result) {\n      deprecated('Matrix3.transformVector');\n      return this.transform(vector, result);\n    }\n  }], [{\n    key: \"IDENTITY\",\n    get: function get() {\n      constants.IDENTITY = constants.IDENTITY || Object.freeze(new Matrix3(IDENTITY));\n      return constants.IDENTITY;\n    }\n  }, {\n    key: \"ZERO\",\n    get: function get() {\n      constants.ZERO = constants.ZERO || Object.freeze(new Matrix3(ZERO));\n      return constants.ZERO;\n    }\n  }]);\n\n  return Matrix3;\n}(Matrix);\n\nexport { Matrix3 as default };","map":{"version":3,"mappings":"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","names":["Matrix","checkVector","deprecated","vec4_transformMat3","mat3","vec2","vec3","IDENTITY","Object","freeze","ZERO","INDICES","COL0ROW0","COL0ROW1","COL0ROW2","COL1ROW0","COL1ROW1","COL1ROW2","COL2ROW0","COL2ROW1","COL2ROW2","constants","Matrix3","constructor","array","arguments","length","Array","isArray","copy","identity","check","set","m00","m10","m20","m01","m11","m21","m02","m12","m22","setRowMajor","determinant","fromQuaternion","q","fromQuat","transpose","invert","multiplyLeft","a","multiply","multiplyRight","rotate","radians","scale","factor","translate","vec","transform","vector","result","transformMat3","Error","transformVector","transformVector2","transformVector3"],"sources":["../../../src/classes/matrix3.js"],"sourcesContent":["// Copyright (c) 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport Matrix from './base/matrix';\nimport {checkVector, deprecated} from '../lib/validators';\n// eslint-disable-next-line camelcase\nimport {vec4_transformMat3} from '../lib/gl-matrix-extras';\n\n// @ts-ignore: error TS2307: Cannot find module 'gl-matrix/...'.\nimport * as mat3 from 'gl-matrix/mat3';\n// @ts-ignore: error TS2307: Cannot find module 'gl-matrix/...'.\nimport * as vec2 from 'gl-matrix/vec2';\n// @ts-ignore: error TS2307: Cannot find module 'gl-matrix/...'.\nimport * as vec3 from 'gl-matrix/vec3';\n\nconst IDENTITY = Object.freeze([1, 0, 0, 0, 1, 0, 0, 0, 1]);\nconst ZERO = Object.freeze([0, 0, 0, 0, 0, 0, 0, 0, 0]);\n\nconst INDICES = Object.freeze({\n  COL0ROW0: 0,\n  COL0ROW1: 1,\n  COL0ROW2: 2,\n  COL1ROW0: 3,\n  COL1ROW1: 4,\n  COL1ROW2: 5,\n  COL2ROW0: 6,\n  COL2ROW1: 7,\n  COL2ROW2: 8\n});\n\nconst constants = {};\n\nexport default class Matrix3 extends Matrix {\n  static get IDENTITY() {\n    constants.IDENTITY = constants.IDENTITY || Object.freeze(new Matrix3(IDENTITY));\n    return constants.IDENTITY;\n  }\n\n  static get ZERO() {\n    constants.ZERO = constants.ZERO || Object.freeze(new Matrix3(ZERO));\n    return constants.ZERO;\n  }\n\n  get ELEMENTS() {\n    return 9;\n  }\n\n  get RANK() {\n    return 3;\n  }\n\n  get INDICES() {\n    return INDICES;\n  }\n\n  constructor(array) {\n    // PERF NOTE: initialize elements as double precision numbers\n    super(-0, -0, -0, -0, -0, -0, -0, -0, -0);\n    if (arguments.length === 1 && Array.isArray(array)) {\n      this.copy(array);\n    } else {\n      this.identity();\n    }\n  }\n\n  copy(array) {\n    this[0] = array[0];\n    this[1] = array[1];\n    this[2] = array[2];\n    this[3] = array[3];\n    this[4] = array[4];\n    this[5] = array[5];\n    this[6] = array[6];\n    this[7] = array[7];\n    this[8] = array[8];\n    return this.check();\n  }\n\n  // accepts column major order, stores in column major order\n  // eslint-disable-next-line max-params\n  set(m00, m10, m20, m01, m11, m21, m02, m12, m22) {\n    this[0] = m00;\n    this[1] = m10;\n    this[2] = m20;\n    this[3] = m01;\n    this[4] = m11;\n    this[5] = m21;\n    this[6] = m02;\n    this[7] = m12;\n    this[8] = m22;\n    return this.check();\n  }\n\n  // accepts row major order, stores as column major\n  // eslint-disable-next-line max-params\n  setRowMajor(m00, m01, m02, m10, m11, m12, m20, m21, m22) {\n    this[0] = m00;\n    this[1] = m10;\n    this[2] = m20;\n    this[3] = m01;\n    this[4] = m11;\n    this[5] = m21;\n    this[6] = m02;\n    this[7] = m12;\n    this[8] = m22;\n    return this.check();\n  }\n\n  // Accessors\n\n  determinant() {\n    return mat3.determinant(this);\n  }\n\n  // Constructors\n\n  identity() {\n    return this.copy(IDENTITY);\n  }\n\n  // Calculates a 3x3 matrix from the given quaternion\n  // q quat  Quaternion to create matrix from\n  fromQuaternion(q) {\n    mat3.fromQuat(this, q);\n    return this.check();\n  }\n\n  // Modifiers\n\n  transpose() {\n    mat3.transpose(this, this);\n    return this.check();\n  }\n\n  invert() {\n    mat3.invert(this, this);\n    return this.check();\n  }\n\n  // Operations\n\n  multiplyLeft(a) {\n    mat3.multiply(this, a, this);\n    return this.check();\n  }\n\n  multiplyRight(a) {\n    mat3.multiply(this, this, a);\n    return this.check();\n  }\n\n  rotate(radians) {\n    mat3.rotate(this, this, radians);\n    return this.check();\n  }\n\n  scale(factor) {\n    if (Array.isArray(factor)) {\n      mat3.scale(this, this, factor);\n    } else {\n      mat3.scale(this, this, [factor, factor, factor]);\n    }\n\n    return this.check();\n  }\n\n  translate(vec) {\n    mat3.translate(this, this, vec);\n    return this.check();\n  }\n\n  // Transforms\n\n  transform(vector, result) {\n    switch (vector.length) {\n      case 2:\n        result = vec2.transformMat3(result || [-0, -0], vector, this);\n        break;\n      case 3:\n        result = vec3.transformMat3(result || [-0, -0, -0], vector, this);\n        break;\n      case 4:\n        result = vec4_transformMat3(result || [-0, -0, -0, -0], vector, this);\n        break;\n      default:\n        throw new Error('Illegal vector');\n    }\n    checkVector(result, vector.length);\n    return result;\n  }\n\n  // DEPRECATED IN 3.0\n\n  transformVector(vector, result) {\n    deprecated('Matrix3.transformVector');\n    return this.transform(vector, result);\n  }\n\n  transformVector2(vector, result) {\n    deprecated('Matrix3.transformVector');\n    return this.transform(vector, result);\n  }\n\n  transformVector3(vector, result) {\n    deprecated('Matrix3.transformVector');\n    return this.transform(vector, result);\n  }\n}\n"]},"metadata":{},"sourceType":"module"}