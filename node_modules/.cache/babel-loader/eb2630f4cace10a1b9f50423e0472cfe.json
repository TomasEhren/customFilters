{"ast":null,"code":"var _jsxFileName = \"/Users/tomasehrenfeld/projs/se-team/tomas/react-apps/custom_filter/src/components/views/Filters.js\";\nimport { useEffect } from 'react';\nimport populationSource from 'data/sources/populationSource';\nimport { POPULATION_LAYER_ID } from 'components/layers/PopulationLayer';\nimport countiesSource from 'data/sources/countiesSource';\nimport { COUNTIES_LAYER_ID } from 'components/layers/CountiesLayer';\nimport { useDispatch } from 'react-redux';\nimport { addLayer, removeLayer, addSource, removeSource } from '@carto/react-redux';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Grid } from '@material-ui/core'; //import { CategoryWidget } from '@carto/react-widgets';\n\nimport { AggregationTypes } from '@carto/react-core';\nimport CustomCategoryWidget from 'components/widgets/CustomCategoryWidget';\nimport { FormulaWidget } from '@carto/react-widgets';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(() => ({\n  filters: {}\n}));\nexport default function Filters() {\n  const dispatch = useDispatch();\n  const classes = useStyles();\n  useEffect(() => {\n    dispatch(addSource(populationSource));\n    dispatch(addLayer({\n      id: POPULATION_LAYER_ID,\n      source: populationSource.id\n    }));\n    return () => {\n      dispatch(removeLayer(POPULATION_LAYER_ID));\n      dispatch(removeSource(populationSource.id));\n    };\n  }, [dispatch]);\n  useEffect(() => {\n    dispatch(addSource(countiesSource));\n    dispatch(addLayer({\n      id: COUNTIES_LAYER_ID,\n      source: countiesSource.id\n    }));\n    return () => {\n      dispatch(removeLayer(COUNTIES_LAYER_ID));\n      dispatch(removeSource(countiesSource.id));\n    };\n  }, [dispatch]); // [hygen] Add useEffect\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    direction: \"column\",\n    className: classes.filters,\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      children: [/*#__PURE__*/_jsxDEV(FormulaWidget, {\n        id: \"totPop\",\n        title: \"Total Population\",\n        dataSource: countiesSource.id,\n        column: \"pop\",\n        operation: AggregationTypes.SUM,\n        onError: console.error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CustomCategoryWidget, {\n        id: \"stateCategory\",\n        title: \"State Name\",\n        dataSource: countiesSource.id,\n        column: \"state\",\n        operation: AggregationTypes.COUNT,\n        onError: console.error,\n        otherSources: [{\n          id: populationSource.id,\n          column: 'state'\n        }]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CustomCategoryWidget, {\n        id: \"countyCategory\",\n        title: \"County Name\",\n        dataSource: countiesSource.id,\n        column: \"county\",\n        operation: AggregationTypes.COUNT,\n        onError: console.error,\n        otherSources: [{\n          id: populationSource.id,\n          column: 'county'\n        }]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"names":["useEffect","populationSource","POPULATION_LAYER_ID","countiesSource","COUNTIES_LAYER_ID","useDispatch","addLayer","removeLayer","addSource","removeSource","makeStyles","Grid","AggregationTypes","CustomCategoryWidget","FormulaWidget","useStyles","filters","Filters","dispatch","classes","id","source","SUM","console","error","COUNT","column"],"sources":["/Users/tomasehrenfeld/projs/se-team/tomas/react-apps/custom_filter/src/components/views/Filters.js"],"sourcesContent":["import { useEffect } from 'react';\nimport populationSource from 'data/sources/populationSource';\nimport { POPULATION_LAYER_ID } from 'components/layers/PopulationLayer';\nimport countiesSource from 'data/sources/countiesSource';\nimport { COUNTIES_LAYER_ID } from 'components/layers/CountiesLayer';\nimport { useDispatch } from 'react-redux';\nimport { addLayer, removeLayer, addSource, removeSource } from '@carto/react-redux';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Grid } from '@material-ui/core';\n\n//import { CategoryWidget } from '@carto/react-widgets';\nimport { AggregationTypes } from '@carto/react-core';\n\nimport CustomCategoryWidget from 'components/widgets/CustomCategoryWidget';\nimport { FormulaWidget } from '@carto/react-widgets';\n\nconst useStyles = makeStyles(() => ({\n  filters: {},\n}));\n\nexport default function Filters() {\n  const dispatch = useDispatch();\n  const classes = useStyles();\n\n  useEffect(() => {\n    dispatch(addSource(populationSource));\n\n    dispatch(\n      addLayer({\n        id: POPULATION_LAYER_ID,\n        source: populationSource.id,\n      })\n    );\n\n    return () => {\n      dispatch(removeLayer(POPULATION_LAYER_ID));\n      dispatch(removeSource(populationSource.id));\n    };\n  }, [dispatch]);\n\n  useEffect(() => {\n    dispatch(addSource(countiesSource));\n\n    dispatch(\n      addLayer({\n        id: COUNTIES_LAYER_ID,\n        source: countiesSource.id,\n      })\n    );\n\n    return () => {\n      dispatch(removeLayer(COUNTIES_LAYER_ID));\n      dispatch(removeSource(countiesSource.id));\n    };\n  }, [dispatch]);\n\n  // [hygen] Add useEffect\n\n  return (\n    <Grid container direction='column' className={classes.filters}>\n      <Grid item>\n        <FormulaWidget\n          id='totPop'\n          title='Total Population'\n          dataSource={countiesSource.id}\n          column='pop'\n          operation={AggregationTypes.SUM}\n          onError={console.error}\n        />\n        <CustomCategoryWidget\n          id='stateCategory'\n          title='State Name'\n          dataSource={countiesSource.id}\n          column='state'\n          operation={AggregationTypes.COUNT}\n          onError={console.error}\n          otherSources={[{ id: populationSource.id, column: 'state' }]}\n        />\n        <CustomCategoryWidget\n          id='countyCategory'\n          title='County Name'\n          dataSource={countiesSource.id}\n          column='county'\n          operation={AggregationTypes.COUNT}\n          onError={console.error}\n          otherSources={[{ id: populationSource.id, column: 'county' }]}\n        />\n      </Grid>\n    </Grid>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}