{"ast":null,"code":"import { getCompositeGLType } from '../webgl-utils/attribute-utils';\nexport function getDebugTableForProgramConfiguration(config) {\n  const table = {};\n  const header = `Accessors for ${config.id}`;\n\n  for (const attributeInfo of config.attributeInfos) {\n    if (attributeInfo) {\n      const glslDeclaration = getGLSLDeclaration(attributeInfo);\n      table[`in ${glslDeclaration}`] = {\n        [header]: JSON.stringify(attributeInfo.accessor)\n      };\n    }\n  }\n\n  for (const varyingInfo of config.varyingInfos) {\n    if (varyingInfo) {\n      const glslDeclaration = getGLSLDeclaration(varyingInfo);\n      table[`out ${glslDeclaration}`] = {\n        [header]: JSON.stringify(varyingInfo.accessor)\n      };\n    }\n  }\n\n  return table;\n}\n\nfunction getGLSLDeclaration(attributeInfo) {\n  const {\n    type,\n    size\n  } = attributeInfo.accessor;\n  const typeAndName = getCompositeGLType(type, size);\n\n  if (typeAndName) {\n    return `${typeAndName.name} ${attributeInfo.name}`;\n  }\n\n  return attributeInfo.name;\n}","map":{"version":3,"mappings":"AAAA,SAAQA,kBAAR,QAAiC,gCAAjC;AAEA,OAAO,SAASC,oCAAT,CAA8CC,MAA9C,EAAsD;EAC3D,MAAMC,KAAK,GAAG,EAAd;EAEA,MAAMC,MAAM,GAAI,iBAAgBF,MAAM,CAACG,EAAG,EAA1C;;EAEA,KAAK,MAAMC,aAAX,IAA4BJ,MAAM,CAACK,cAAnC,EAAmD;IACjD,IAAID,aAAJ,EAAmB;MACjB,MAAME,eAAe,GAAGC,kBAAkB,CAACH,aAAD,CAA1C;MACAH,KAAK,CAAE,MAAKK,eAAgB,EAAvB,CAALL,GAAiC;QAAC,CAACC,MAAD,GAAUM,IAAI,CAACC,SAALD,CAAeJ,aAAa,CAACM,QAA7BF;MAAX,CAAjCP;IACD;EACF;;EAED,KAAK,MAAMU,WAAX,IAA0BX,MAAM,CAACY,YAAjC,EAA+C;IAC7C,IAAID,WAAJ,EAAiB;MACf,MAAML,eAAe,GAAGC,kBAAkB,CAACI,WAAD,CAA1C;MACAV,KAAK,CAAE,OAAMK,eAAgB,EAAxB,CAALL,GAAkC;QAAC,CAACC,MAAD,GAAUM,IAAI,CAACC,SAALD,CAAeG,WAAW,CAACD,QAA3BF;MAAX,CAAlCP;IACD;EACF;;EAED,OAAOA,KAAP;AACD;;AAED,SAASM,kBAAT,CAA4BH,aAA5B,EAA2C;EACzC,MAAM;IAACS,IAAD;IAAOC;EAAP,IAAeV,aAAa,CAACM,QAAnC;EACA,MAAMK,WAAW,GAAGjB,kBAAkB,CAACe,IAAD,EAAOC,IAAP,CAAtC;;EACA,IAAIC,WAAJ,EAAiB;IACf,OAAQ,GAAEA,WAAW,CAACC,IAAK,IAAGZ,aAAa,CAACY,IAAK,EAAjD;EACD;;EACD,OAAOZ,aAAa,CAACY,IAArB;AACD","names":["getCompositeGLType","getDebugTableForProgramConfiguration","config","table","header","id","attributeInfo","attributeInfos","glslDeclaration","getGLSLDeclaration","JSON","stringify","accessor","varyingInfo","varyingInfos","type","size","typeAndName","name"],"sources":["../../../src/debug/debug-program-configuration.js"],"sourcesContent":["import {getCompositeGLType} from '../webgl-utils/attribute-utils';\n\nexport function getDebugTableForProgramConfiguration(config) {\n  const table = {};\n\n  const header = `Accessors for ${config.id}`;\n\n  for (const attributeInfo of config.attributeInfos) {\n    if (attributeInfo) {\n      const glslDeclaration = getGLSLDeclaration(attributeInfo);\n      table[`in ${glslDeclaration}`] = {[header]: JSON.stringify(attributeInfo.accessor)};\n    }\n  }\n\n  for (const varyingInfo of config.varyingInfos) {\n    if (varyingInfo) {\n      const glslDeclaration = getGLSLDeclaration(varyingInfo);\n      table[`out ${glslDeclaration}`] = {[header]: JSON.stringify(varyingInfo.accessor)};\n    }\n  }\n\n  return table;\n}\n\nfunction getGLSLDeclaration(attributeInfo) {\n  const {type, size} = attributeInfo.accessor;\n  const typeAndName = getCompositeGLType(type, size);\n  if (typeAndName) {\n    return `${typeAndName.name} ${attributeInfo.name}`;\n  }\n  return attributeInfo.name;\n}\n"]},"metadata":{},"sourceType":"module"}