{"ast":null,"code":"// int-numberformat dependencies (support for ios v13)\nimport'@formatjs/intl-locale/polyfill';import'@formatjs/intl-getcanonicallocales/polyfill';// int-pluralrules dependencies (support for ios v12)\nimport'@formatjs/intl-pluralrules/polyfill';import'@formatjs/intl-pluralrules/locale-data/en';/*\n  Note: `notation` & `compactDisplay` properties are not supported yet by Safari.\n  Those require the use of a polyfill: https://www.npmjs.com/package/@formatjs/intl-numberformat\n*/import'@formatjs/intl-numberformat/polyfill';import'@formatjs/intl-numberformat/locale-data/en';var DEFAULT_LOCALE='en-US';var CIRCLE_SVG=\"<svg width=\\\"10px\\\" height=\\\"10px\\\" fill=\\\"#47db99\\\" viewBox=\\\"0 0 10 10\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\">\\n  <circle cx=\\\"5\\\" cy=\\\"5\\\" r=\\\"5\\\"/>\\n</svg>\";export var currencyFormatter=function currencyFormatter(value){var _value=parseLogicalOperation(value);return{prefix:\"\".concat(_value.operation,\" $\"),value:Intl.NumberFormat(DEFAULT_LOCALE,{maximumFractionDigits:2,minimumFractionDigits:2,notation:'compact',compactDisplay:'short'}).format(_value.value)};};export var numberFormatter=function numberFormatter(value){var _value=parseLogicalOperation(value);return _value.operation+Intl.NumberFormat(DEFAULT_LOCALE,{maximumFractionDigits:1,minimumFractionDigits:0,notation:'compact',compactDisplay:'short'}).format(_value.value);};export var intervalsFormatter=function intervalsFormatter(value,dataIndex,ticks){var _value=numberFormatter(value);if(!ticks||dataIndex===undefined)return _value;var intervals=moneyInterval(dataIndex,ticks);return\"\".concat(intervals,\" <br/> \").concat(CIRCLE_SVG,\" \").concat(_value);};var parseLogicalOperation=function parseLogicalOperation(value){if(!isNaN(value))return{value:value,operation:''};try{// To allow formatting even values after a comparison operator\nvar numberWithComparisonOperators=/([<>]=?)[^$]?(\\d+)/gm;// eg. < 2, <2, >= 3\nvar regExp=new RegExp(numberWithComparisonOperators);var match=regExp.exec(value);var operation;if(match){operation=match[1];value=Number(match[2]);}return isNaN(value)?{value:0,operation:''}:{value:value,operation:operation};}catch(_unused){throw new Error(\"You are using a numberFormatter on a not valid value: \".concat(value));}};var moneyInterval=function moneyInterval(dataIndex,ticks){var isFirst=dataIndex===0;try{if(isFirst||dataIndex===ticks.length){var comparison=isFirst?'<':'≥';var formattedValue=isFirst?currencyFormatter(ticks[dataIndex]):currencyFormatter(ticks[dataIndex-1]);return\"\".concat(comparison,\" \").concat(formattedValue.prefix).concat(formattedValue.value);}else{dataIndex=dataIndex-1;var prevTick=currencyFormatter(ticks[dataIndex]);var nextTick=currencyFormatter(ticks[dataIndex+1]);return\"\".concat(prevTick.prefix).concat(prevTick.value,\" \\u2014 \").concat(nextTick.prefix).concat(nextTick.value);}}catch(_unused2){throw new Error(\"You are using an \\\"intervalsFormatter\\\" on a not valid index: \".concat(dataIndex,\" & for the ticks \").concat(ticks));}};","map":{"version":3,"names":["DEFAULT_LOCALE","CIRCLE_SVG","currencyFormatter","value","_value","parseLogicalOperation","prefix","operation","Intl","NumberFormat","maximumFractionDigits","minimumFractionDigits","notation","compactDisplay","format","numberFormatter","intervalsFormatter","dataIndex","ticks","undefined","intervals","moneyInterval","isNaN","numberWithComparisonOperators","regExp","RegExp","match","exec","Number","Error","isFirst","length","comparison","formattedValue","prevTick","nextTick"],"sources":["/Users/tomasehrenfeld/projs/se-team/tomas/react-apps/custom_filter/src/utils/formatter.js"],"sourcesContent":["// int-numberformat dependencies (support for ios v13)\nimport '@formatjs/intl-locale/polyfill';\nimport '@formatjs/intl-getcanonicallocales/polyfill';\n\n// int-pluralrules dependencies (support for ios v12)\nimport '@formatjs/intl-pluralrules/polyfill';\nimport '@formatjs/intl-pluralrules/locale-data/en';\n\n/*\n  Note: `notation` & `compactDisplay` properties are not supported yet by Safari.\n  Those require the use of a polyfill: https://www.npmjs.com/package/@formatjs/intl-numberformat\n*/\nimport '@formatjs/intl-numberformat/polyfill';\nimport '@formatjs/intl-numberformat/locale-data/en';\n\nconst DEFAULT_LOCALE = 'en-US';\nconst CIRCLE_SVG = `<svg width=\"10px\" height=\"10px\" fill=\"#47db99\" viewBox=\"0 0 10 10\" xmlns=\"http://www.w3.org/2000/svg\">\n  <circle cx=\"5\" cy=\"5\" r=\"5\"/>\n</svg>`;\n\nexport const currencyFormatter = (value) => {\n  const _value = parseLogicalOperation(value);\n  return {\n    prefix: `${_value.operation} $`,\n    value: Intl.NumberFormat(DEFAULT_LOCALE, {\n      maximumFractionDigits: 2,\n      minimumFractionDigits: 2,\n      notation: 'compact',\n      compactDisplay: 'short',\n    }).format(_value.value),\n  };\n};\n\nexport const numberFormatter = (value) => {\n  const _value = parseLogicalOperation(value);\n  return (\n    _value.operation +\n    Intl.NumberFormat(DEFAULT_LOCALE, {\n      maximumFractionDigits: 1,\n      minimumFractionDigits: 0,\n      notation: 'compact',\n      compactDisplay: 'short',\n    }).format(_value.value)\n  );\n};\n\nexport const intervalsFormatter = (value, dataIndex, ticks) => {\n  const _value = numberFormatter(value);\n  if (!ticks || dataIndex === undefined) return _value;\n  const intervals = moneyInterval(dataIndex, ticks);\n  return `${intervals} <br/> ${CIRCLE_SVG} ${_value}`;\n};\n\nconst parseLogicalOperation = (value) => {\n  if (!isNaN(value)) return { value, operation: '' };\n\n  try {\n    // To allow formatting even values after a comparison operator\n    const numberWithComparisonOperators = /([<>]=?)[^$]?(\\d+)/gm; // eg. < 2, <2, >= 3\n    const regExp = new RegExp(numberWithComparisonOperators);\n    const match = regExp.exec(value);\n\n    let operation;\n    if (match) {\n      operation = match[1];\n      value = Number(match[2]);\n    }\n\n    return isNaN(value) ? { value: 0, operation: '' } : { value, operation };\n  } catch {\n    throw new Error(`You are using a numberFormatter on a not valid value: ${value}`);\n  }\n};\n\nconst moneyInterval = (dataIndex, ticks) => {\n  const isFirst = dataIndex === 0;\n  try {\n    if (isFirst || dataIndex === ticks.length) {\n      const comparison = isFirst ? '<' : '≥';\n      const formattedValue = isFirst\n        ? currencyFormatter(ticks[dataIndex])\n        : currencyFormatter(ticks[dataIndex - 1]);\n      return `${comparison} ${formattedValue.prefix}${formattedValue.value}`;\n    } else {\n      dataIndex = dataIndex - 1;\n      const prevTick = currencyFormatter(ticks[dataIndex]);\n      const nextTick = currencyFormatter(ticks[dataIndex + 1]);\n      return `${prevTick.prefix}${prevTick.value} — ${nextTick.prefix}${nextTick.value}`;\n    }\n  } catch {\n    throw new Error(\n      `You are using an \"intervalsFormatter\" on a not valid index: ${dataIndex} & for the ticks ${ticks}`\n    );\n  }\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}