{"ast":null,"code":"import _objectSpread from \"/Users/tomasehrenfeld/projs/se-team/tomas/react-apps/custom_filter/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _classCallCheck from \"/Users/tomasehrenfeld/projs/se-team/tomas/react-apps/custom_filter/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/tomasehrenfeld/projs/se-team/tomas/react-apps/custom_filter/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar Effect = /*#__PURE__*/function () {\n  function Effect() {\n    var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, Effect);\n\n    _defineProperty(this, \"id\", void 0);\n\n    _defineProperty(this, \"props\", void 0);\n\n    _defineProperty(this, \"useInPicking\", void 0);\n\n    var _props$id = props.id,\n        id = _props$id === void 0 ? 'effect' : _props$id;\n    this.id = id;\n    this.props = _objectSpread({}, props);\n    this.useInPicking = false;\n  }\n\n  _createClass(Effect, [{\n    key: \"preRender\",\n    value: function preRender() {}\n  }, {\n    key: \"getModuleParameters\",\n    value: function getModuleParameters(layer) {}\n  }, {\n    key: \"cleanup\",\n    value: function cleanup() {}\n  }]);\n\n  return Effect;\n}();\n\nexport { Effect as default };","map":{"version":3,"mappings":";;;;;IAEqBA,M;EAKnBC,kBAAuC;IAAA,IAA3BC,KAA2B,uEAAJ,EAAI;;IAAA;;IAAAC;;IAAAA;;IAAAA;;IACrC,gBAAwBD,KAAxB,CAAOE,EAAP;IAAA,IAAOA,EAAP,0BAAY,QAAZ;IACA,KAAKA,EAAL,GAAUA,EAAV;IACA,KAAKF,KAAL,qBAAiBA,KAAjB;IACA,KAAKG,YAAL,GAAoB,KAApB;EACD;;;;WAEDC,qBAAY,CAAE;;;WAEdC,6BAAoBC,KAApBD,EAAuC,CAAE;;;WAEzCE,mBAAU,CAAE;;;;;;SAhBOT,M","names":["Effect","constructor","props","_defineProperty","id","useInPicking","preRender","getModuleParameters","layer","cleanup"],"sources":["../../../src/lib/effect.ts"],"sourcesContent":["import type Layer from './layer';\n\nexport default class Effect {\n  id: string;\n  props: any;\n  useInPicking: boolean;\n\n  constructor(props: {id?: string} = {}) {\n    const {id = 'effect'} = props;\n    this.id = id;\n    this.props = {...props};\n    this.useInPicking = false;\n  }\n\n  preRender() {} // eslint-disable-line @typescript-eslint/no-empty-function\n\n  getModuleParameters(layer: Layer): any {} // eslint-disable-line @typescript-eslint/no-empty-function\n\n  cleanup() {} // eslint-disable-line @typescript-eslint/no-empty-function\n}\n"]},"metadata":{},"sourceType":"module"}