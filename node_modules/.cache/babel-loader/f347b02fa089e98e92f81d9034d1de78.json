{"ast":null,"code":"import _createForOfIteratorHelper from\"/Users/tomasehrenfeld/projs/se-team/tomas/react-apps/custom_filter/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";import _objectSpread from\"/Users/tomasehrenfeld/projs/se-team/tomas/react-apps/custom_filter/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import{combineReducers,configureStore,getDefaultMiddleware}from'@reduxjs/toolkit';import noop from'utils/noop';import appSlice from'./appSlice';var store={};function createReducerManager(initialReducers){// Create an object which maps keys to reducers\nvar reducers=_objectSpread({},initialReducers);// Create the initial combinedReducer\nvar combinedReducer=Object.keys(reducers).length?combineReducers(reducers):noop;// An array which is used to delete state keys when reducers are removed\nvar keysToRemove=[];return{getReducerMap:function getReducerMap(){return reducers;},// The root reducer function exposed by this object\n// This will be passed to the store\nreduce:function reduce(state,action){// If any reducers have been removed, clean up their state first\nif(keysToRemove.length>0){state=_objectSpread({},state);var _iterator=_createForOfIteratorHelper(keysToRemove),_step;try{for(_iterator.s();!(_step=_iterator.n()).done;){var key=_step.value;delete state[key];}}catch(err){_iterator.e(err);}finally{_iterator.f();}keysToRemove=[];}// Delegate to the combined reducer\nreturn combinedReducer(state,action);},// Adds a new reducer with the specified key\nadd:function add(key,reducer){if(!key||reducers[key]){return;}// Add the reducer to the reducer mapping\nreducers[key]=reducer;// Generate a new combined reducer\ncombinedReducer=combineReducers(reducers);store.replaceReducer(combinedReducer);},// Removes a reducer with the specified key\nremove:function remove(key){if(!key||!reducers[key]){return;}// Remove it from the reducer mapping\ndelete reducers[key];// Add the key to the list of keys to clean up\nkeysToRemove.push(key);// Generate a new combined reducer\ncombinedReducer=combineReducers(reducers);store.replaceReducer(combinedReducer);}};}var staticReducers={app:appSlice};function getCustomMiddleware(){var devConfig={immutableCheck:{ignoredPaths:['carto.viewportFeatures']},serializableCheck:{ignoredPaths:['carto.viewportFeatures'],ignoredActions:['carto/setViewportFeatures']}};var prodConfig={immutableCheck:false,serializableCheck:false};var isProductionEnv=process.env.NODE_ENV==='production';return getDefaultMiddleware(isProductionEnv?prodConfig:devConfig);}// Configure the store\nexport default function configureAppStore(){var reducerManager=createReducerManager(staticReducers);store=configureStore({reducer:reducerManager.reduce,middleware:getCustomMiddleware()});store.reducerManager=reducerManager;return store;}","map":{"version":3,"names":["combineReducers","configureStore","getDefaultMiddleware","noop","appSlice","store","createReducerManager","initialReducers","reducers","combinedReducer","Object","keys","length","keysToRemove","getReducerMap","reduce","state","action","key","add","reducer","replaceReducer","remove","push","staticReducers","app","getCustomMiddleware","devConfig","immutableCheck","ignoredPaths","serializableCheck","ignoredActions","prodConfig","isProductionEnv","process","env","NODE_ENV","configureAppStore","reducerManager","middleware"],"sources":["/Users/tomasehrenfeld/projs/se-team/tomas/react-apps/custom_filter/src/store/store.js"],"sourcesContent":["import { combineReducers, configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport noop from 'utils/noop';\nimport appSlice from './appSlice';\n\nlet store = {};\n\nfunction createReducerManager(initialReducers) {\n  // Create an object which maps keys to reducers\n  const reducers = { ...initialReducers };\n\n  // Create the initial combinedReducer\n  let combinedReducer = Object.keys(reducers).length ? combineReducers(reducers) : noop;\n\n  // An array which is used to delete state keys when reducers are removed\n  let keysToRemove = [];\n\n  return {\n    getReducerMap: () => reducers,\n\n    // The root reducer function exposed by this object\n    // This will be passed to the store\n    reduce: (state, action) => {\n      // If any reducers have been removed, clean up their state first\n      if (keysToRemove.length > 0) {\n        state = { ...state };\n        for (let key of keysToRemove) {\n          delete state[key];\n        }\n        keysToRemove = [];\n      }\n\n      // Delegate to the combined reducer\n      return combinedReducer(state, action);\n    },\n\n    // Adds a new reducer with the specified key\n    add: (key, reducer) => {\n      if (!key || reducers[key]) {\n        return;\n      }\n\n      // Add the reducer to the reducer mapping\n      reducers[key] = reducer;\n\n      // Generate a new combined reducer\n      combinedReducer = combineReducers(reducers);\n      store.replaceReducer(combinedReducer);\n    },\n\n    // Removes a reducer with the specified key\n    remove: (key) => {\n      if (!key || !reducers[key]) {\n        return;\n      }\n\n      // Remove it from the reducer mapping\n      delete reducers[key];\n\n      // Add the key to the list of keys to clean up\n      keysToRemove.push(key);\n\n      // Generate a new combined reducer\n      combinedReducer = combineReducers(reducers);\n      store.replaceReducer(combinedReducer);\n    },\n  };\n}\n\nconst staticReducers = {\n  app: appSlice,\n};\n\nfunction getCustomMiddleware() {\n  const devConfig = {\n    immutableCheck: {\n      ignoredPaths: ['carto.viewportFeatures'],\n    },\n    serializableCheck: {\n      ignoredPaths: ['carto.viewportFeatures'],\n      ignoredActions: ['carto/setViewportFeatures'],\n    },\n  };\n\n  const prodConfig = {\n    immutableCheck: false,\n    serializableCheck: false,\n  };\n\n  const isProductionEnv = process.env.NODE_ENV === 'production';\n\n  return getDefaultMiddleware(isProductionEnv ? prodConfig : devConfig);\n}\n\n// Configure the store\nexport default function configureAppStore() {\n  const reducerManager = createReducerManager(staticReducers);\n  store = configureStore({\n    reducer: reducerManager.reduce,\n    middleware: getCustomMiddleware(),\n  });\n\n  store.reducerManager = reducerManager;\n\n  return store;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}