{"ast":null,"code":"import _objectSpread from \"/Users/tomasehrenfeld/projs/se-team/tomas/react-apps/custom_filter/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport { resolvePath, assert } from '@loaders.gl/loader-utils';\nexport function generateUrl(getUrl, options, urlOptions) {\n  var url = getUrl;\n\n  if (typeof getUrl === 'function') {\n    url = getUrl(_objectSpread(_objectSpread({}, options), urlOptions));\n  }\n\n  assert(typeof url === 'string');\n  var baseUrl = options.baseUrl;\n\n  if (baseUrl) {\n    url = baseUrl[baseUrl.length - 1] === '/' ? \"\".concat(baseUrl).concat(url) : \"\".concat(baseUrl, \"/\").concat(url);\n  }\n\n  return resolvePath(url);\n}","map":{"version":3,"mappings":";AAAA,SAAQA,WAAR,EAAqBC,MAArB,QAAkC,0BAAlC;AAGA,OAAO,SAASC,WAAT,CAAqBC,MAArB,EAA6BC,OAA7B,EAAsCC,UAAtC,EAAkD;EAEvD,IAAIC,GAAG,GAAGH,MAAV;;EACA,IAAI,OAAOA,MAAP,KAAkB,UAAtB,EAAkC;IAChCG,GAAG,GAAGH,MAAM,iCAAKC,OAAL,GAAiBC,UAAjB,EAAZC;EACD;;EACDL,MAAM,CAAC,OAAOK,GAAP,KAAe,QAAhB,CAANL;EAGA,IAAOM,OAAP,GAAkBH,OAAlB,CAAOG,OAAP;;EACA,IAAIA,OAAJ,EAAa;IACXD,GAAG,GAAGC,OAAO,CAACA,OAAO,CAACC,MAARD,GAAiB,CAAlB,CAAPA,KAAgC,GAAhCA,aAAyCA,OAAzC,SAAmDD,GAAnD,cAA8DC,OAA9D,cAAyED,GAAzE,CAANA;EACD;;EAED,OAAON,WAAW,CAACM,GAAD,CAAlB;AACD","names":["resolvePath","assert","generateUrl","getUrl","options","urlOptions","url","baseUrl","length"],"sources":["../../../../src/lib/texture-api/generate-url.ts"],"sourcesContent":["import {resolvePath, assert} from '@loaders.gl/loader-utils';\n\n// Generate a url by calling getUrl with mix of options, applying options.baseUrl\nexport function generateUrl(getUrl, options, urlOptions) {\n  // Get url\n  let url = getUrl;\n  if (typeof getUrl === 'function') {\n    url = getUrl({...options, ...urlOptions});\n  }\n  assert(typeof url === 'string');\n\n  // Apply options.baseUrl\n  const {baseUrl} = options;\n  if (baseUrl) {\n    url = baseUrl[baseUrl.length - 1] === '/' ? `${baseUrl}${url}` : `${baseUrl}/${url}`;\n  }\n\n  return resolvePath(url);\n}\n"]},"metadata":{},"sourceType":"module"}