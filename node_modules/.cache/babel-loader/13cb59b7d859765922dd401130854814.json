{"ast":null,"code":"export function isImage(image) {\n  return Boolean(getImageTypeOrNull(image));\n}\nexport function deleteImage(image) {\n  switch (getImageType(image)) {\n    case 'imagebitmap':\n      image.close();\n      break;\n\n    default:\n  }\n}\nexport function getImageType(image) {\n  const format = getImageTypeOrNull(image);\n\n  if (!format) {\n    throw new Error('Not an image');\n  }\n\n  return format;\n}\nexport function getImageSize(image) {\n  return getImageData(image);\n}\nexport function getImageData(image) {\n  switch (getImageType(image)) {\n    case 'data':\n      return image;\n\n    case 'image':\n    case 'imagebitmap':\n      const canvas = document.createElement('canvas');\n      const context = canvas.getContext('2d');\n\n      if (!context) {\n        throw new Error('getImageData');\n      }\n\n      canvas.width = image.width;\n      canvas.height = image.height;\n      context.drawImage(image, 0, 0);\n      return context.getImageData(0, 0, image.width, image.height);\n\n    default:\n      throw new Error('getImageData');\n  }\n}\n\nfunction getImageTypeOrNull(image) {\n  if (typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap) {\n    return 'imagebitmap';\n  }\n\n  if (typeof Image !== 'undefined' && image instanceof Image) {\n    return 'image';\n  }\n\n  if (image && typeof image === 'object' && image.data && image.width && image.height) {\n    return 'data';\n  }\n\n  return null;\n}","map":{"version":3,"mappings":"AAEA,OAAO,SAASA,OAAT,CAAiBC,KAAjB,EAA4C;EACjD,OAAOC,OAAO,CAACC,kBAAkB,CAACF,KAAD,CAAnB,CAAd;AACD;AAED,OAAO,SAASG,WAAT,CAAqBH,KAArB,EAA6C;EAClD,QAAQI,YAAY,CAACJ,KAAD,CAApB;IACE,KAAK,aAAL;MACGA,KAAD,CAAuBK,KAAtBL;MACD;;IACF;EAJF;AAOD;AAED,OAAO,SAASI,YAAT,CAAsBJ,KAAtB,EAAuD;EAC5D,MAAMM,MAAM,GAAGJ,kBAAkB,CAACF,KAAD,CAAjC;;EACA,IAAI,CAACM,MAAL,EAAa;IACX,MAAM,IAAIC,KAAJ,CAAU,cAAV,CAAN;EACD;;EACD,OAAOD,MAAP;AACD;AAED,OAAO,SAASE,YAAT,CAAsBR,KAAtB,EAAyE;EAC9E,OAAOS,YAAY,CAACT,KAAD,CAAnB;AACD;AAED,OAAO,SAASS,YAAT,CAAsBT,KAAtB,EAAmE;EACxE,QAAQI,YAAY,CAACJ,KAAD,CAApB;IACE,KAAK,MAAL;MACE,OAAOA,KAAP;;IAEF,KAAK,OAAL;IACA,KAAK,aAAL;MAEE,MAAMU,MAAM,GAAGC,QAAQ,CAACC,aAATD,CAAuB,QAAvBA,CAAf;MAEA,MAAME,OAAO,GAAGH,MAAM,CAACI,UAAPJ,CAAkB,IAAlBA,CAAhB;;MACA,IAAI,CAACG,OAAL,EAAc;QACZ,MAAM,IAAIN,KAAJ,CAAU,cAAV,CAAN;MACD;;MAEDG,MAAM,CAACK,KAAPL,GAAeV,KAAK,CAACe,KAArBL;MAEAA,MAAM,CAACM,MAAPN,GAAgBV,KAAK,CAACgB,MAAtBN;MAEAG,OAAO,CAACI,SAARJ,CAAkBb,KAAlBa,EAAyB,CAAzBA,EAA4B,CAA5BA;MAEA,OAAOA,OAAO,CAACJ,YAARI,CAAqB,CAArBA,EAAwB,CAAxBA,EAA2Bb,KAAK,CAACe,KAAjCF,EAAwCb,KAAK,CAACgB,MAA9CH,CAAP;;IAEF;MACE,MAAM,IAAIN,KAAJ,CAAU,cAAV,CAAN;EAvBJ;AAyBD;;AAKD,SAASL,kBAAT,CAA4BF,KAA5B,EAAmC;EACjC,IAAI,OAAOkB,WAAP,KAAuB,WAAvB,IAAsClB,KAAK,YAAYkB,WAA3D,EAAwE;IACtE,OAAO,aAAP;EACD;;EACD,IAAI,OAAOC,KAAP,KAAiB,WAAjB,IAAgCnB,KAAK,YAAYmB,KAArD,EAA4D;IAC1D,OAAO,OAAP;EACD;;EACD,IAAInB,KAAK,IAAI,OAAOA,KAAP,KAAiB,QAA1BA,IAAsCA,KAAK,CAACoB,IAA5CpB,IAAoDA,KAAK,CAACe,KAA1Df,IAAmEA,KAAK,CAACgB,MAA7E,EAAqF;IACnF,OAAO,MAAP;EACD;;EACD,OAAO,IAAP;AACD","names":["isImage","image","Boolean","getImageTypeOrNull","deleteImage","getImageType","close","format","Error","getImageSize","getImageData","canvas","document","createElement","context","getContext","width","height","drawImage","ImageBitmap","Image","data"],"sources":["../../../../src/lib/category-api/parsed-image-api.ts"],"sourcesContent":["import type {ImageType, ImageTypeEnum, ImageDataType} from '../../types';\n\nexport function isImage(image: ImageType): boolean {\n  return Boolean(getImageTypeOrNull(image));\n}\n\nexport function deleteImage(image: ImageType): void {\n  switch (getImageType(image)) {\n    case 'imagebitmap':\n      (image as ImageBitmap).close();\n      break;\n    default:\n    // Nothing to do for images and image data objects\n  }\n}\n\nexport function getImageType(image: ImageType): ImageTypeEnum {\n  const format = getImageTypeOrNull(image);\n  if (!format) {\n    throw new Error('Not an image');\n  }\n  return format;\n}\n\nexport function getImageSize(image: ImageType): {width: number; height: number} {\n  return getImageData(image);\n}\n\nexport function getImageData(image: ImageType): ImageDataType | ImageData {\n  switch (getImageType(image)) {\n    case 'data':\n      return image as unknown as ImageData;\n\n    case 'image':\n    case 'imagebitmap':\n      // Extract the image data from the image via a canvas\n      const canvas = document.createElement('canvas');\n      // TODO - reuse the canvas?\n      const context = canvas.getContext('2d');\n      if (!context) {\n        throw new Error('getImageData');\n      }\n      // @ts-ignore\n      canvas.width = image.width;\n      // @ts-ignore\n      canvas.height = image.height;\n      // @ts-ignore\n      context.drawImage(image, 0, 0);\n      // @ts-ignore\n      return context.getImageData(0, 0, image.width, image.height);\n\n    default:\n      throw new Error('getImageData');\n  }\n}\n\n// PRIVATE\n\n// eslint-disable-next-line complexity\nfunction getImageTypeOrNull(image) {\n  if (typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap) {\n    return 'imagebitmap';\n  }\n  if (typeof Image !== 'undefined' && image instanceof Image) {\n    return 'image';\n  }\n  if (image && typeof image === 'object' && image.data && image.width && image.height) {\n    return 'data';\n  }\n  return null;\n}\n"]},"metadata":{},"sourceType":"module"}