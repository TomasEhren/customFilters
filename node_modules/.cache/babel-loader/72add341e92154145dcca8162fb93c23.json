{"ast":null,"code":"import { assertWebGLContext } from '@luma.gl/gltools';\nimport Texture from './texture';\nimport { loadImage } from '../utils/load-file';\nexport default class Texture2D extends Texture {\n  static isSupported(gl, opts) {\n    return Texture.isSupported(gl, opts);\n  }\n\n  constructor(gl) {\n    let props = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    assertWebGLContext(gl);\n\n    if (props instanceof Promise || typeof props === 'string') {\n      props = {\n        data: props\n      };\n    }\n\n    if (typeof props.data === 'string') {\n      props = Object.assign({}, props, {\n        data: loadImage(props.data)\n      });\n    }\n\n    super(gl, Object.assign({}, props, {\n      target: 3553\n    }));\n    this.initialize(props);\n    Object.seal(this);\n  }\n\n}","map":{"version":3,"mappings":"AACA,SAAQA,kBAAR,QAAiC,kBAAjC;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAAQC,SAAR,QAAwB,oBAAxB;AAEA,eAAe,MAAMC,SAAN,SAAwBF,OAAxB,CAAgC;EAC7C,OAAOG,WAAP,CAAmBC,EAAnB,EAAuBC,IAAvB,EAA6B;IAC3B,OAAOL,OAAO,CAACG,WAARH,CAAoBI,EAApBJ,EAAwBK,IAAxBL,CAAP;EACD;;EAEDM,WAAW,CAACF,EAAD,EAAiB;IAAA,IAAZG,KAAY,uEAAJ,EAAI;IAC1BR,kBAAkB,CAACK,EAAD,CAAlBL;;IAGA,IAAIQ,KAAK,YAAYC,OAAjBD,IAA4B,OAAOA,KAAP,KAAiB,QAAjD,EAA2D;MACzDA,KAAK,GAAG;QAACE,IAAI,EAAEF;MAAP,CAARA;IACD;;IAGD,IAAI,OAAOA,KAAK,CAACE,IAAb,KAAsB,QAA1B,EAAoC;MAClCF,KAAK,GAAGG,MAAM,CAACC,MAAPD,CAAc,EAAdA,EAAkBH,KAAlBG,EAAyB;QAACD,IAAI,EAAER,SAAS,CAACM,KAAK,CAACE,IAAP;MAAhB,CAAzBC,CAARH;IACD;;IAED,MAAMH,EAAN,EAAUM,MAAM,CAACC,MAAPD,CAAc,EAAdA,EAAkBH,KAAlBG,EAAyB;MAACE,MAAM;IAAP,CAAzBF,CAAV;IAEA,KAAKG,UAAL,CAAgBN,KAAhB;IAEAG,MAAM,CAACI,IAAPJ,CAAY,IAAZA;EACD;;AAvB4C","names":["assertWebGLContext","Texture","loadImage","Texture2D","isSupported","gl","opts","constructor","props","Promise","data","Object","assign","target","initialize","seal"],"sources":["../../../src/classes/texture-2d.js"],"sourcesContent":["import GL from '@luma.gl/constants';\nimport {assertWebGLContext} from '@luma.gl/gltools';\nimport Texture from './texture';\nimport {loadImage} from '../utils/load-file';\n\nexport default class Texture2D extends Texture {\n  static isSupported(gl, opts) {\n    return Texture.isSupported(gl, opts);\n  }\n\n  constructor(gl, props = {}) {\n    assertWebGLContext(gl);\n\n    // Signature: new Texture2D(gl, url | Promise)\n    if (props instanceof Promise || typeof props === 'string') {\n      props = {data: props};\n    }\n\n    // Signature: new Texture2D(gl, {data: url})\n    if (typeof props.data === 'string') {\n      props = Object.assign({}, props, {data: loadImage(props.data)});\n    }\n\n    super(gl, Object.assign({}, props, {target: GL.TEXTURE_2D}));\n\n    this.initialize(props);\n\n    Object.seal(this);\n  }\n}\n"]},"metadata":{},"sourceType":"module"}