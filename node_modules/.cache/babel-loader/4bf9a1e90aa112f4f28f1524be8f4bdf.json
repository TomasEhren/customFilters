{"ast":null,"code":"import _classCallCheck from \"/Users/tomasehrenfeld/projs/se-team/tomas/react-apps/custom_filter/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/tomasehrenfeld/projs/se-team/tomas/react-apps/custom_filter/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/Users/tomasehrenfeld/projs/se-team/tomas/react-apps/custom_filter/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/tomasehrenfeld/projs/se-team/tomas/react-apps/custom_filter/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\n\nfunction _extendableBuiltin(cls) {\n  function ExtendableBuiltin() {\n    var instance = Reflect.construct(cls, Array.from(arguments));\n    Object.setPrototypeOf(instance, Object.getPrototypeOf(this));\n    return instance;\n  }\n\n  ExtendableBuiltin.prototype = Object.create(cls.prototype, {\n    constructor: {\n      value: cls,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n\n  if (Object.setPrototypeOf) {\n    Object.setPrototypeOf(ExtendableBuiltin, cls);\n  } else {\n    ExtendableBuiltin.__proto__ = cls;\n  }\n\n  return ExtendableBuiltin;\n}\n\nimport { config, formatValue, equals as _equals, isArray } from '../../lib/common';\nimport assert from '../../lib/assert';\n\nvar MathArray = /*#__PURE__*/function (_extendableBuiltin2) {\n  _inherits(MathArray, _extendableBuiltin2);\n\n  var _super = _createSuper(MathArray);\n\n  function MathArray() {\n    _classCallCheck(this, MathArray);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(MathArray, [{\n    key: \"ELEMENTS\",\n    get: function get() {\n      assert(false);\n      return 0;\n    }\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      return new this.constructor().copy(this);\n    }\n  }, {\n    key: \"from\",\n    value: function from(arrayOrObject) {\n      return Array.isArray(arrayOrObject) ? this.copy(arrayOrObject) : this.fromObject(arrayOrObject);\n    }\n  }, {\n    key: \"fromArray\",\n    value: function fromArray(array) {\n      var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n      for (var i = 0; i < this.ELEMENTS; ++i) {\n        this[i] = array[i + offset];\n      }\n\n      return this.check();\n    }\n  }, {\n    key: \"to\",\n    value: function to(arrayOrObject) {\n      if (arrayOrObject === this) {\n        return this;\n      }\n\n      return isArray(arrayOrObject) ? this.toArray(arrayOrObject) : this.toObject(arrayOrObject);\n    }\n  }, {\n    key: \"toTarget\",\n    value: function toTarget(target) {\n      return target ? this.to(target) : this;\n    }\n  }, {\n    key: \"toArray\",\n    value: function toArray() {\n      var array = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n      var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n      for (var i = 0; i < this.ELEMENTS; ++i) {\n        array[offset + i] = this[i];\n      }\n\n      return array;\n    }\n  }, {\n    key: \"toFloat32Array\",\n    value: function toFloat32Array() {\n      return new Float32Array(this);\n    }\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return this.formatString(config);\n    }\n  }, {\n    key: \"formatString\",\n    value: function formatString(opts) {\n      var string = '';\n\n      for (var i = 0; i < this.ELEMENTS; ++i) {\n        string += (i > 0 ? ', ' : '') + formatValue(this[i], opts);\n      }\n\n      return \"\".concat(opts.printTypes ? this.constructor.name : '', \"[\").concat(string, \"]\");\n    }\n  }, {\n    key: \"equals\",\n    value: function equals(array) {\n      if (!array || this.length !== array.length) {\n        return false;\n      }\n\n      for (var i = 0; i < this.ELEMENTS; ++i) {\n        if (!_equals(this[i], array[i])) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n  }, {\n    key: \"exactEquals\",\n    value: function exactEquals(array) {\n      if (!array || this.length !== array.length) {\n        return false;\n      }\n\n      for (var i = 0; i < this.ELEMENTS; ++i) {\n        if (this[i] !== array[i]) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n  }, {\n    key: \"negate\",\n    value: function negate() {\n      for (var i = 0; i < this.ELEMENTS; ++i) {\n        this[i] = -this[i];\n      }\n\n      return this.check();\n    }\n  }, {\n    key: \"lerp\",\n    value: function lerp(a, b, t) {\n      if (t === undefined) {\n        t = b;\n        b = a;\n        a = this;\n      }\n\n      for (var i = 0; i < this.ELEMENTS; ++i) {\n        var ai = a[i];\n        this[i] = ai + t * (b[i] - ai);\n      }\n\n      return this.check();\n    }\n  }, {\n    key: \"min\",\n    value: function min(vector) {\n      for (var i = 0; i < this.ELEMENTS; ++i) {\n        this[i] = Math.min(vector[i], this[i]);\n      }\n\n      return this.check();\n    }\n  }, {\n    key: \"max\",\n    value: function max(vector) {\n      for (var i = 0; i < this.ELEMENTS; ++i) {\n        this[i] = Math.max(vector[i], this[i]);\n      }\n\n      return this.check();\n    }\n  }, {\n    key: \"clamp\",\n    value: function clamp(minVector, maxVector) {\n      for (var i = 0; i < this.ELEMENTS; ++i) {\n        this[i] = Math.min(Math.max(this[i], minVector[i]), maxVector[i]);\n      }\n\n      return this.check();\n    }\n  }, {\n    key: \"add\",\n    value: function add() {\n      for (var _len = arguments.length, vectors = new Array(_len), _key = 0; _key < _len; _key++) {\n        vectors[_key] = arguments[_key];\n      }\n\n      for (var _i = 0, _vectors = vectors; _i < _vectors.length; _i++) {\n        var vector = _vectors[_i];\n\n        for (var i = 0; i < this.ELEMENTS; ++i) {\n          this[i] += vector[i];\n        }\n      }\n\n      return this.check();\n    }\n  }, {\n    key: \"subtract\",\n    value: function subtract() {\n      for (var _len2 = arguments.length, vectors = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        vectors[_key2] = arguments[_key2];\n      }\n\n      for (var _i2 = 0, _vectors2 = vectors; _i2 < _vectors2.length; _i2++) {\n        var vector = _vectors2[_i2];\n\n        for (var i = 0; i < this.ELEMENTS; ++i) {\n          this[i] -= vector[i];\n        }\n      }\n\n      return this.check();\n    }\n  }, {\n    key: \"scale\",\n    value: function scale(_scale) {\n      if (Array.isArray(_scale)) {\n        return this.multiply(_scale);\n      }\n\n      for (var i = 0; i < this.ELEMENTS; ++i) {\n        this[i] *= _scale;\n      }\n\n      return this.check();\n    }\n  }, {\n    key: \"sub\",\n    value: function sub(a) {\n      return this.subtract(a);\n    }\n  }, {\n    key: \"setScalar\",\n    value: function setScalar(a) {\n      for (var i = 0; i < this.ELEMENTS; ++i) {\n        this[i] = a;\n      }\n\n      return this.check();\n    }\n  }, {\n    key: \"addScalar\",\n    value: function addScalar(a) {\n      for (var i = 0; i < this.ELEMENTS; ++i) {\n        this[i] += a;\n      }\n\n      return this.check();\n    }\n  }, {\n    key: \"subScalar\",\n    value: function subScalar(a) {\n      return this.addScalar(-a);\n    }\n  }, {\n    key: \"multiplyScalar\",\n    value: function multiplyScalar(scalar) {\n      for (var i = 0; i < this.ELEMENTS; ++i) {\n        this[i] *= scalar;\n      }\n\n      return this.check();\n    }\n  }, {\n    key: \"divideScalar\",\n    value: function divideScalar(a) {\n      return this.scale(1 / a);\n    }\n  }, {\n    key: \"clampScalar\",\n    value: function clampScalar(min, max) {\n      for (var i = 0; i < this.ELEMENTS; ++i) {\n        this[i] = Math.min(Math.max(this[i], min), max);\n      }\n\n      return this.check();\n    }\n  }, {\n    key: \"multiplyByScalar\",\n    value: function multiplyByScalar(scalar) {\n      return this.scale(scalar);\n    }\n  }, {\n    key: \"elements\",\n    get: function get() {\n      return this;\n    }\n  }, {\n    key: \"check\",\n    value: function check() {\n      if (config.debug && !this.validate()) {\n        throw new Error(\"math.gl: \".concat(this.constructor.name, \" some fields set to invalid numbers'\"));\n      }\n\n      return this;\n    }\n  }, {\n    key: \"validate\",\n    value: function validate() {\n      var valid = this.length === this.ELEMENTS;\n\n      for (var i = 0; i < this.ELEMENTS; ++i) {\n        valid = valid && Number.isFinite(this[i]);\n      }\n\n      return valid;\n    }\n  }]);\n\n  return MathArray;\n}(_extendableBuiltin(Array));\n\nexport { MathArray as default };","map":{"version":3,"mappings":"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","names":["config","formatValue","equals","isArray","assert","MathArray","clone","constructor","copy","from","arrayOrObject","Array","fromObject","fromArray","array","offset","i","ELEMENTS","check","to","toArray","toObject","toTarget","target","toFloat32Array","Float32Array","toString","formatString","opts","string","printTypes","name","length","exactEquals","negate","lerp","a","b","t","undefined","ai","min","vector","Math","max","clamp","minVector","maxVector","add","vectors","subtract","scale","multiply","sub","setScalar","addScalar","subScalar","multiplyScalar","scalar","divideScalar","clampScalar","multiplyByScalar","debug","validate","Error","valid","Number","isFinite","_extendableBuiltin"],"sources":["../../../../src/classes/base/math-array.js"],"sourcesContent":["// Copyright (c) 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport {config, formatValue, equals, isArray} from '../../lib/common';\nimport assert from '../../lib/assert';\n\nexport default class MathArray extends Array {\n  // Defined by derived class\n  get ELEMENTS() {\n    assert(false);\n    return 0;\n  }\n\n  clone() {\n    // @ts-ignore error TS2351: Cannot use 'new' with an expression whose type lacks a call or construct signature.\n    return new this.constructor().copy(this);\n  }\n\n  from(arrayOrObject) {\n    // @ts-ignore error TS2339: Property 'copy' does not exist on type 'MathArray'.\n    return Array.isArray(arrayOrObject) ? this.copy(arrayOrObject) : this.fromObject(arrayOrObject);\n  }\n\n  fromArray(array, offset = 0) {\n    for (let i = 0; i < this.ELEMENTS; ++i) {\n      this[i] = array[i + offset];\n    }\n    return this.check();\n  }\n\n  to(arrayOrObject) {\n    if (arrayOrObject === this) {\n      return this;\n    }\n    // @ts-ignore error TS2339: Property 'toObject' does not exist on type 'MathArray'.\n    return isArray(arrayOrObject) ? this.toArray(arrayOrObject) : this.toObject(arrayOrObject);\n  }\n\n  toTarget(target) {\n    return target ? this.to(target) : this;\n  }\n\n  toArray(array = [], offset = 0) {\n    for (let i = 0; i < this.ELEMENTS; ++i) {\n      array[offset + i] = this[i];\n    }\n    return array;\n  }\n\n  toFloat32Array() {\n    return new Float32Array(this);\n  }\n\n  toString() {\n    return this.formatString(config);\n  }\n\n  formatString(opts) {\n    let string = '';\n    for (let i = 0; i < this.ELEMENTS; ++i) {\n      string += (i > 0 ? ', ' : '') + formatValue(this[i], opts);\n    }\n    return `${opts.printTypes ? this.constructor.name : ''}[${string}]`;\n  }\n\n  equals(array) {\n    if (!array || this.length !== array.length) {\n      return false;\n    }\n    for (let i = 0; i < this.ELEMENTS; ++i) {\n      if (!equals(this[i], array[i])) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  exactEquals(array) {\n    if (!array || this.length !== array.length) {\n      return false;\n    }\n    for (let i = 0; i < this.ELEMENTS; ++i) {\n      if (this[i] !== array[i]) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  // Modifiers\n\n  negate() {\n    for (let i = 0; i < this.ELEMENTS; ++i) {\n      this[i] = -this[i];\n    }\n    return this.check();\n  }\n\n  lerp(a, b, t) {\n    if (t === undefined) {\n      t = b;\n      b = a;\n      a = this; // eslint-disable-line\n    }\n    for (let i = 0; i < this.ELEMENTS; ++i) {\n      const ai = a[i];\n      this[i] = ai + t * (b[i] - ai);\n    }\n    return this.check();\n  }\n\n  min(vector) {\n    for (let i = 0; i < this.ELEMENTS; ++i) {\n      this[i] = Math.min(vector[i], this[i]);\n    }\n    return this.check();\n  }\n\n  max(vector) {\n    for (let i = 0; i < this.ELEMENTS; ++i) {\n      this[i] = Math.max(vector[i], this[i]);\n    }\n    return this.check();\n  }\n\n  clamp(minVector, maxVector) {\n    for (let i = 0; i < this.ELEMENTS; ++i) {\n      this[i] = Math.min(Math.max(this[i], minVector[i]), maxVector[i]);\n    }\n    return this.check();\n  }\n\n  add(...vectors) {\n    for (const vector of vectors) {\n      for (let i = 0; i < this.ELEMENTS; ++i) {\n        this[i] += vector[i];\n      }\n    }\n    return this.check();\n  }\n\n  subtract(...vectors) {\n    for (const vector of vectors) {\n      for (let i = 0; i < this.ELEMENTS; ++i) {\n        this[i] -= vector[i];\n      }\n    }\n    return this.check();\n  }\n\n  scale(scale) {\n    if (Array.isArray(scale)) {\n      // @ts-ignore error TS2339: Property 'multiply' does not exist on type 'MathArray'.\n      return this.multiply(scale);\n    }\n    for (let i = 0; i < this.ELEMENTS; ++i) {\n      this[i] *= scale;\n    }\n    return this.check();\n  }\n\n  // three.js compatibility\n\n  sub(a) {\n    return this.subtract(a);\n  }\n\n  setScalar(a) {\n    for (let i = 0; i < this.ELEMENTS; ++i) {\n      this[i] = a;\n    }\n    return this.check();\n  }\n\n  addScalar(a) {\n    for (let i = 0; i < this.ELEMENTS; ++i) {\n      this[i] += a;\n    }\n    return this.check();\n  }\n\n  subScalar(a) {\n    return this.addScalar(-a);\n  }\n\n  multiplyScalar(scalar) {\n    // Multiplies all elements\n    // `Matrix4.scale` only scales its 3x3 \"minor\"\n    for (let i = 0; i < this.ELEMENTS; ++i) {\n      this[i] *= scalar;\n    }\n    return this.check();\n  }\n\n  divideScalar(a) {\n    return this.scale(1 / a);\n  }\n\n  clampScalar(min, max) {\n    for (let i = 0; i < this.ELEMENTS; ++i) {\n      this[i] = Math.min(Math.max(this[i], min), max);\n    }\n    return this.check();\n  }\n\n  // Cesium compatibility\n\n  multiplyByScalar(scalar) {\n    return this.scale(scalar);\n  }\n\n  // THREE.js compatibility\n  get elements() {\n    return this;\n  }\n\n  // Debug checks\n\n  check() {\n    if (config.debug && !this.validate()) {\n      throw new Error(`math.gl: ${this.constructor.name} some fields set to invalid numbers'`);\n    }\n    return this;\n  }\n\n  validate() {\n    let valid = this.length === this.ELEMENTS;\n    for (let i = 0; i < this.ELEMENTS; ++i) {\n      valid = valid && Number.isFinite(this[i]);\n    }\n    return valid;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}