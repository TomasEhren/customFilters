{"ast":null,"code":"import _objectSpread from \"/Users/tomasehrenfeld/projs/se-team/tomas/react-apps/custom_filter/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _defineProperty2 from \"/Users/tomasehrenfeld/projs/se-team/tomas/react-apps/custom_filter/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _classCallCheck from \"/Users/tomasehrenfeld/projs/se-team/tomas/react-apps/custom_filter/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/tomasehrenfeld/projs/se-team/tomas/react-apps/custom_filter/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _assertThisInitialized from \"/Users/tomasehrenfeld/projs/se-team/tomas/react-apps/custom_filter/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _get from \"/Users/tomasehrenfeld/projs/se-team/tomas/react-apps/custom_filter/node_modules/@babel/runtime/helpers/esm/get.js\";\nimport _getPrototypeOf from \"/Users/tomasehrenfeld/projs/se-team/tomas/react-apps/custom_filter/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _inherits from \"/Users/tomasehrenfeld/projs/se-team/tomas/react-apps/custom_filter/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/tomasehrenfeld/projs/se-team/tomas/react-apps/custom_filter/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { Framebuffer, Texture2D, withParameters } from '@luma.gl/core';\nimport { OPERATION } from '../lib/constants';\nimport LayersPass from './layers-pass';\n\nvar MaskPass = /*#__PURE__*/function (_LayersPass) {\n  _inherits(MaskPass, _LayersPass);\n\n  var _super = _createSuper(MaskPass);\n\n  function MaskPass(gl, props) {\n    var _parameters;\n\n    var _this;\n\n    _classCallCheck(this, MaskPass);\n\n    _this = _super.call(this, gl, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"maskMap\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"fbo\", void 0);\n\n    var _props$mapSize = props.mapSize,\n        mapSize = _props$mapSize === void 0 ? 2048 : _props$mapSize;\n    _this.maskMap = new Texture2D(gl, {\n      width: mapSize,\n      height: mapSize,\n      parameters: (_parameters = {}, _defineProperty2(_parameters, 10241, 9729), _defineProperty2(_parameters, 10240, 9729), _defineProperty2(_parameters, 10242, 33071), _defineProperty2(_parameters, 10243, 33071), _parameters)\n    });\n    _this.fbo = new Framebuffer(gl, {\n      id: 'maskmap',\n      width: mapSize,\n      height: mapSize,\n      attachments: _defineProperty2({}, 36064, _this.maskMap)\n    });\n    return _this;\n  }\n\n  _createClass(MaskPass, [{\n    key: \"render\",\n    value: function render(options) {\n      var _this2 = this;\n\n      var gl = this.gl;\n      var colorMask = [false, false, false, false];\n      colorMask[options.channel] = true;\n      return withParameters(gl, {\n        clearColor: [255, 255, 255, 255],\n        blend: true,\n        blendFunc: [0, 1],\n        blendEquation: 32778,\n        colorMask: colorMask,\n        depthTest: false\n      }, function () {\n        return _get(_getPrototypeOf(MaskPass.prototype), \"render\", _this2).call(_this2, _objectSpread(_objectSpread({}, options), {}, {\n          target: _this2.fbo,\n          pass: 'mask'\n        }));\n      });\n    }\n  }, {\n    key: \"shouldDrawLayer\",\n    value: function shouldDrawLayer(layer) {\n      return layer.props.operation === OPERATION.MASK;\n    }\n  }, {\n    key: \"delete\",\n    value: function _delete() {\n      this.fbo.delete();\n      this.maskMap.delete();\n    }\n  }]);\n\n  return MaskPass;\n}(LayersPass);\n\nexport { MaskPass as default };","map":{"version":3,"mappings":";;;;;;;;;;AAAA,SAAQA,WAAR,EAAqBC,SAArB,EAAgCC,cAAhC,QAAqD,eAArD;AACA,SAAQC,SAAR,QAAwB,kBAAxB;AACA,OAAOC,UAAP,MAAuB,eAAvB;;IASqBC,Q;;;;;EAInBC,kBAAYC,EAAZD,EAAgBE,KAAhBF,EAAuD;IAAA;;IAAA;;IAAA;;IACrD,0BAAMC,EAAN,EAAUC,KAAV;;IADqDC;;IAAAA;;IAGrD,qBAAyBD,KAAzB,CAAOE,OAAP;IAAA,IAAOA,OAAP,+BAAiB,IAAjB;IAEA,MAAKC,OAAL,GAAe,IAAIV,SAAJ,CAAcM,EAAd,EAAkB;MAC/BK,KAAK,EAAEF,OADwB;MAE/BG,MAAM,EAAEH,OAFuB;MAG/BI,UAAU,mDACR,KADQ,EACR,IADQ,iCAER,KAFQ,EAER,IAFQ,iCAGR,KAHQ,EAGR,KAHQ,iCAIR,KAJQ,EAIR,KAJQ;IAHqB,CAAlB,CAAf;IAWA,MAAKC,GAAL,GAAW,IAAIf,WAAJ,CAAgBO,EAAhB,EAAoB;MAC7BS,EAAE,EAAE,SADyB;MAE7BJ,KAAK,EAAEF,OAFsB;MAG7BG,MAAM,EAAEH,OAHqB;MAI7BO,WAAW,uBACT,KADS,EACe,MAAKN,OADpB;IAJkB,CAApB,CAAX;IAhBqD;EAwBtD;;;;WAEDO,gBAAOC,OAAPD,EAAuC;MAAA;;MACrC,IAAMX,EAAE,GAAG,KAAKA,EAAhB;MAEA,IAAMa,SAAS,GAAG,CAAC,KAAD,EAAQ,KAAR,EAAe,KAAf,EAAsB,KAAtB,CAAlB;MACAA,SAAS,CAACD,OAAO,CAACE,OAAT,CAATD,GAA6B,IAA7BA;MAEA,OAAOlB,cAAc,CACnBK,EADmB,EAEnB;QACEe,UAAU,EAAE,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,CADd;QAEEC,KAAK,EAAE,IAFT;QAGEC,SAAS,EAAE,MAHb;QAIEC,aAAa,OAJf;QAKEL,SALF,EAKEA,SALF;QAMEM,SAAS,EAAE;MANb,CAFmB,EAUnB;QAAA,gHAAuBP,OAAvB;UAAgCQ,MAAM,EAAE,OAAKZ,GAA7C;UAAkDa,IAAI,EAAE;QAAxD;MAAA,CAVmB,CAArB;IAYD;;;WAEDC,yBAAgBC,KAAhBD,EAAuB;MACrB,OAAOC,KAAK,CAACtB,KAANsB,CAAYC,SAAZD,KAA0B3B,SAAS,CAAC6B,IAA3C;IACD;;;WAEDC,mBAAS;MACP,KAAKlB,GAAL,CAASkB,MAAT;MACA,KAAKtB,OAAL,CAAasB,MAAb;IACD;;;;EAzDmC7B,U;;SAAjBC,Q","names":["Framebuffer","Texture2D","withParameters","OPERATION","LayersPass","MaskPass","constructor","gl","props","_defineProperty","mapSize","maskMap","width","height","parameters","fbo","id","attachments","render","options","colorMask","channel","clearColor","blend","blendFunc","blendEquation","depthTest","target","pass","shouldDrawLayer","layer","operation","MASK","delete"],"sources":["../../../src/passes/mask-pass.ts"],"sourcesContent":["import {Framebuffer, Texture2D, withParameters} from '@luma.gl/core';\nimport {OPERATION} from '../lib/constants';\nimport LayersPass from './layers-pass';\n\nimport type {LayersPassRenderOptions} from './layers-pass';\n\ntype MaskPassRenderOptions = LayersPassRenderOptions & {\n  /** The channel to render into, 0:red, 1:green, 2:blue, 3:alpha */\n  channel: number;\n};\n\nexport default class MaskPass extends LayersPass {\n  maskMap: Texture2D;\n  fbo: Framebuffer;\n\n  constructor(gl, props: {id: string; mapSize?: number}) {\n    super(gl, props);\n\n    const {mapSize = 2048} = props;\n\n    this.maskMap = new Texture2D(gl, {\n      width: mapSize,\n      height: mapSize,\n      parameters: {\n        [gl.TEXTURE_MIN_FILTER]: gl.LINEAR,\n        [gl.TEXTURE_MAG_FILTER]: gl.LINEAR,\n        [gl.TEXTURE_WRAP_S]: gl.CLAMP_TO_EDGE,\n        [gl.TEXTURE_WRAP_T]: gl.CLAMP_TO_EDGE\n      }\n    });\n\n    this.fbo = new Framebuffer(gl, {\n      id: 'maskmap',\n      width: mapSize,\n      height: mapSize,\n      attachments: {\n        [gl.COLOR_ATTACHMENT0]: this.maskMap\n      }\n    });\n  }\n\n  render(options: MaskPassRenderOptions) {\n    const gl = this.gl;\n\n    const colorMask = [false, false, false, false];\n    colorMask[options.channel] = true;\n\n    return withParameters(\n      gl,\n      {\n        clearColor: [255, 255, 255, 255],\n        blend: true,\n        blendFunc: [gl.ZERO, gl.ONE],\n        blendEquation: gl.FUNC_SUBTRACT,\n        colorMask,\n        depthTest: false\n      },\n      () => super.render({...options, target: this.fbo, pass: 'mask'})\n    );\n  }\n\n  shouldDrawLayer(layer) {\n    return layer.props.operation === OPERATION.MASK;\n  }\n\n  delete() {\n    this.fbo.delete();\n    this.maskMap.delete();\n  }\n}\n"]},"metadata":{},"sourceType":"module"}