{"ast":null,"code":"import _createForOfIteratorHelper from \"/Users/tomasehrenfeld/projs/se-team/tomas/react-apps/custom_filter/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _classCallCheck from \"/Users/tomasehrenfeld/projs/se-team/tomas/react-apps/custom_filter/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/tomasehrenfeld/projs/se-team/tomas/react-apps/custom_filter/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/Users/tomasehrenfeld/projs/se-team/tomas/react-apps/custom_filter/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/tomasehrenfeld/projs/se-team/tomas/react-apps/custom_filter/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { Texture2D, ProgramManager } from '@luma.gl/core';\nimport { AmbientLight } from './ambient-light';\nimport { DirectionalLight } from './directional-light';\nimport Effect from '../../lib/effect';\nimport { Matrix4, Vector3 } from '@math.gl/core';\nimport ShadowPass from '../../passes/shadow-pass';\nimport { default as shadow } from '../../shaderlib/shadow/shadow';\nvar DEFAULT_AMBIENT_LIGHT_PROPS = {\n  color: [255, 255, 255],\n  intensity: 1.0\n};\nvar DEFAULT_DIRECTIONAL_LIGHT_PROPS = [{\n  color: [255, 255, 255],\n  intensity: 1.0,\n  direction: [-1, 3, -1]\n}, {\n  color: [255, 255, 255],\n  intensity: 0.9,\n  direction: [1, -8, -2.5]\n}];\nvar DEFAULT_SHADOW_COLOR = [0, 0, 0, 200 / 255];\n\nvar LightingEffect = /*#__PURE__*/function (_Effect) {\n  _inherits(LightingEffect, _Effect);\n\n  var _super = _createSuper(LightingEffect);\n\n  function LightingEffect(props) {\n    var _this;\n\n    _classCallCheck(this, LightingEffect);\n\n    _this = _super.call(this, props);\n    _this.ambientLight = null;\n    _this.directionalLights = [];\n    _this.pointLights = [];\n    _this.shadowColor = DEFAULT_SHADOW_COLOR;\n    _this.shadowPasses = [];\n    _this.shadowMaps = [];\n    _this.dummyShadowMap = null;\n    _this.shadow = false;\n    _this.programManager = null;\n\n    for (var key in props) {\n      var lightSource = props[key];\n\n      switch (lightSource.type) {\n        case 'ambient':\n          _this.ambientLight = lightSource;\n          break;\n\n        case 'directional':\n          _this.directionalLights.push(lightSource);\n\n          break;\n\n        case 'point':\n          _this.pointLights.push(lightSource);\n\n          break;\n\n        default:\n      }\n    }\n\n    _this._applyDefaultLights();\n\n    _this.shadow = _this.directionalLights.some(function (light) {\n      return light.shadow;\n    });\n    return _this;\n  }\n\n  _createClass(LightingEffect, [{\n    key: \"preRender\",\n    value: function preRender(gl, _ref) {\n      var layers = _ref.layers,\n          layerFilter = _ref.layerFilter,\n          viewports = _ref.viewports,\n          onViewportActive = _ref.onViewportActive,\n          views = _ref.views;\n      if (!this.shadow) return;\n      this.shadowMatrices = this._createLightMatrix();\n\n      if (this.shadowPasses.length === 0) {\n        this._createShadowPasses(gl);\n      }\n\n      if (!this.programManager) {\n        this.programManager = ProgramManager.getDefaultProgramManager(gl);\n\n        if (shadow) {\n          this.programManager.addDefaultModule(shadow);\n        }\n      }\n\n      if (!this.dummyShadowMap) {\n        this.dummyShadowMap = new Texture2D(gl, {\n          width: 1,\n          height: 1\n        });\n      }\n\n      for (var i = 0; i < this.shadowPasses.length; i++) {\n        var shadowPass = this.shadowPasses[i];\n        shadowPass.render({\n          layers: layers,\n          layerFilter: layerFilter,\n          viewports: viewports,\n          onViewportActive: onViewportActive,\n          views: views,\n          moduleParameters: {\n            shadowLightId: i,\n            dummyShadowMap: this.dummyShadowMap,\n            shadowMatrices: this.shadowMatrices\n          }\n        });\n      }\n    }\n  }, {\n    key: \"getModuleParameters\",\n    value: function getModuleParameters(layer) {\n      var parameters = this.shadow ? {\n        shadowMaps: this.shadowMaps,\n        dummyShadowMap: this.dummyShadowMap,\n        shadowColor: this.shadowColor,\n        shadowMatrices: this.shadowMatrices\n      } : {};\n      parameters.lightSources = {\n        ambientLight: this.ambientLight,\n        directionalLights: this.directionalLights.map(function (directionalLight) {\n          return directionalLight.getProjectedLight({\n            layer: layer\n          });\n        }),\n        pointLights: this.pointLights.map(function (pointLight) {\n          return pointLight.getProjectedLight({\n            layer: layer\n          });\n        })\n      };\n      return parameters;\n    }\n  }, {\n    key: \"cleanup\",\n    value: function cleanup() {\n      var _iterator = _createForOfIteratorHelper(this.shadowPasses),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var shadowPass = _step.value;\n          shadowPass.delete();\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      this.shadowPasses.length = 0;\n      this.shadowMaps.length = 0;\n\n      if (this.dummyShadowMap) {\n        this.dummyShadowMap.delete();\n        this.dummyShadowMap = null;\n      }\n\n      if (this.shadow && this.programManager) {\n        this.programManager.removeDefaultModule(shadow);\n        this.programManager = null;\n      }\n    }\n  }, {\n    key: \"_createLightMatrix\",\n    value: function _createLightMatrix() {\n      var lightMatrices = [];\n\n      var _iterator2 = _createForOfIteratorHelper(this.directionalLights),\n          _step2;\n\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var light = _step2.value;\n          var viewMatrix = new Matrix4().lookAt({\n            eye: new Vector3(light.direction).negate()\n          });\n          lightMatrices.push(viewMatrix);\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n\n      return lightMatrices;\n    }\n  }, {\n    key: \"_createShadowPasses\",\n    value: function _createShadowPasses(gl) {\n      for (var i = 0; i < this.directionalLights.length; i++) {\n        var shadowPass = new ShadowPass(gl);\n        this.shadowPasses[i] = shadowPass;\n        this.shadowMaps[i] = shadowPass.shadowMap;\n      }\n    }\n  }, {\n    key: \"_applyDefaultLights\",\n    value: function _applyDefaultLights() {\n      var ambientLight = this.ambientLight,\n          pointLights = this.pointLights,\n          directionalLights = this.directionalLights;\n\n      if (!ambientLight && pointLights.length === 0 && directionalLights.length === 0) {\n        this.ambientLight = new AmbientLight(DEFAULT_AMBIENT_LIGHT_PROPS);\n        this.directionalLights.push(new DirectionalLight(DEFAULT_DIRECTIONAL_LIGHT_PROPS[0]), new DirectionalLight(DEFAULT_DIRECTIONAL_LIGHT_PROPS[1]));\n      }\n    }\n  }]);\n\n  return LightingEffect;\n}(Effect);\n\nexport { LightingEffect as default };","map":{"version":3,"mappings":";;;;;AAAA,SAAQA,SAAR,EAAmBC,cAAnB,QAAwC,eAAxC;AACA,SAAQC,YAAR,QAA2B,iBAA3B;AACA,SAAQC,gBAAR,QAA+B,qBAA/B;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,SAAQC,OAAR,EAAiBC,OAAjB,QAA+B,eAA/B;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,SAAQC,OAAO,IAAIC,MAAnB,QAAgC,+BAAhC;AAEA,IAAMC,2BAA2B,GAAG;EAACC,KAAK,EAAE,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,CAAR;EAAyBC,SAAS,EAAE;AAApC,CAApC;AACA,IAAMC,+BAA+B,GAAG,CACtC;EACEF,KAAK,EAAE,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,CADT;EAEEC,SAAS,EAAE,GAFb;EAGEE,SAAS,EAAE,CAAC,CAAC,CAAF,EAAK,CAAL,EAAQ,CAAC,CAAT;AAHb,CADsC,EAMtC;EACEH,KAAK,EAAE,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,CADT;EAEEC,SAAS,EAAE,GAFb;EAGEE,SAAS,EAAE,CAAC,CAAD,EAAI,CAAC,CAAL,EAAQ,CAAC,GAAT;AAHb,CANsC,CAAxC;AAYA,IAAMC,oBAAoB,GAAG,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,MAAM,GAAhB,CAA7B;;IAGqBC,c;;;;;EACnBC,wBAAYC,KAAZD,EAAmB;IAAA;;IAAA;;IACjB,0BAAMC,KAAN;IACA,MAAKC,YAAL,GAAoB,IAApB;IACA,MAAKC,iBAAL,GAAyB,EAAzB;IACA,MAAKC,WAAL,GAAmB,EAAnB;IAEA,MAAKC,WAAL,GAAmBP,oBAAnB;IACA,MAAKQ,YAAL,GAAoB,EAApB;IACA,MAAKC,UAAL,GAAkB,EAAlB;IACA,MAAKC,cAAL,GAAsB,IAAtB;IACA,MAAKhB,MAAL,GAAc,KAAd;IACA,MAAKiB,cAAL,GAAsB,IAAtB;;IAEA,KAAK,IAAMC,GAAX,IAAkBT,KAAlB,EAAyB;MACvB,IAAMU,WAAW,GAAGV,KAAK,CAACS,GAAD,CAAzB;;MAEA,QAAQC,WAAW,CAACC,IAApB;QACE,KAAK,SAAL;UACE,MAAKV,YAAL,GAAoBS,WAApB;UACA;;QAEF,KAAK,aAAL;UACE,MAAKR,iBAAL,CAAuBU,IAAvB,CAA4BF,WAA5B;;UACA;;QAEF,KAAK,OAAL;UACE,MAAKP,WAAL,CAAiBS,IAAjB,CAAsBF,WAAtB;;UACA;;QACF;MAZF;IAcD;;IACD,MAAKG,mBAAL;;IAEA,MAAKtB,MAAL,GAAc,MAAKW,iBAAL,CAAuBY,IAAvB,CAA4BC,eAAK;MAAA,OAAIA,KAAK,CAACxB,MAAV;IAAA,CAAjC,CAAd;IAjCiB;EAkClB;;;;WAEDyB,mBAAUC,EAAVD,QAAyE;MAAA,IAA1DE,MAA0D,QAA1DA,MAA0D;MAAA,IAAlDC,WAAkD,QAAlDA,WAAkD;MAAA,IAArCC,SAAqC,QAArCA,SAAqC;MAAA,IAA1BC,gBAA0B,QAA1BA,gBAA0B;MAAA,IAARC,KAAQ,QAARA,KAAQ;MACvE,IAAI,CAAC,KAAK/B,MAAV,EAAkB;MAGlB,KAAKgC,cAAL,GAAsB,KAAKC,kBAAL,EAAtB;;MAEA,IAAI,KAAKnB,YAAL,CAAkBoB,MAAlB,KAA6B,CAAjC,EAAoC;QAClC,KAAKC,mBAAL,CAAyBT,EAAzB;MACD;;MACD,IAAI,CAAC,KAAKT,cAAV,EAA0B;QAExB,KAAKA,cAAL,GAAsBzB,cAAc,CAAC4C,wBAAf5C,CAAwCkC,EAAxClC,CAAtB;;QACA,IAAIQ,MAAJ,EAAY;UACV,KAAKiB,cAAL,CAAoBoB,gBAApB,CAAqCrC,MAArC;QACD;MACF;;MAED,IAAI,CAAC,KAAKgB,cAAV,EAA0B;QACxB,KAAKA,cAAL,GAAsB,IAAIzB,SAAJ,CAAcmC,EAAd,EAAkB;UACtCY,KAAK,EAAE,CAD+B;UAEtCC,MAAM,EAAE;QAF8B,CAAlB,CAAtB;MAID;;MAED,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAK1B,YAAL,CAAkBoB,MAAtC,EAA8CM,CAAC,EAA/C,EAAmD;QACjD,IAAMC,UAAU,GAAG,KAAK3B,YAAL,CAAkB0B,CAAlB,CAAnB;QACAC,UAAU,CAACC,MAAXD,CAAkB;UAChBd,MADgB,EAChBA,MADgB;UAEhBC,WAFgB,EAEhBA,WAFgB;UAGhBC,SAHgB,EAGhBA,SAHgB;UAIhBC,gBAJgB,EAIhBA,gBAJgB;UAKhBC,KALgB,EAKhBA,KALgB;UAMhBY,gBAAgB,EAAE;YAChBC,aAAa,EAAEJ,CADC;YAEhBxB,cAAc,EAAE,KAAKA,cAFL;YAGhBgB,cAAc,EAAE,KAAKA;UAHL;QANF,CAAlBS;MAYD;IACF;;;WAEDI,6BAAoBC,KAApBD,EAA2B;MACzB,IAAME,UAAU,GAAG,KAAK/C,MAAL,GACf;QACEe,UAAU,EAAE,KAAKA,UADnB;QAEEC,cAAc,EAAE,KAAKA,cAFvB;QAGEH,WAAW,EAAE,KAAKA,WAHpB;QAIEmB,cAAc,EAAE,KAAKA;MAJvB,CADe,GAOf,EAPJ;MAWAe,UAAU,CAACC,YAAXD,GAA0B;QACxBrC,YAAY,EAAE,KAAKA,YADK;QAExBC,iBAAiB,EAAE,KAAKA,iBAAL,CAAuBsC,GAAvB,CAA2BC,0BAAgB;UAAA,OAC5DA,gBAAgB,CAACC,iBAAjBD,CAAmC;YAACJ;UAAD,CAAnCI,CAD4D;QAAA,CAA3C,CAFK;QAKxBtC,WAAW,EAAE,KAAKA,WAAL,CAAiBqC,GAAjB,CAAqBG,oBAAU;UAAA,OAAIA,UAAU,CAACD,iBAAXC,CAA6B;YAACN;UAAD,CAA7BM,CAAJ;QAAA,CAA/B;MALW,CAA1BL;MAQA,OAAOA,UAAP;IACD;;;WAEDM,mBAAU;MAAA,2CACiB,KAAKvC,YADtB;MAAA;;MAAA;QACR,oDAA4C;UAAA,IAAjC2B,UAAiC;UAC1CA,UAAU,CAACa,MAAXb;QACD;MAHO;QAAA;MAAA;QAAA;MAAA;;MAIR,KAAK3B,YAAL,CAAkBoB,MAAlB,GAA2B,CAA3B;MACA,KAAKnB,UAAL,CAAgBmB,MAAhB,GAAyB,CAAzB;;MAEA,IAAI,KAAKlB,cAAT,EAAyB;QACvB,KAAKA,cAAL,CAAoBsC,MAApB;QACA,KAAKtC,cAAL,GAAsB,IAAtB;MACD;;MAED,IAAI,KAAKhB,MAAL,IAAe,KAAKiB,cAAxB,EAAwC;QACtC,KAAKA,cAAL,CAAoBsC,mBAApB,CAAwCvD,MAAxC;QACA,KAAKiB,cAAL,GAAsB,IAAtB;MACD;IACF;;;WAEDgB,8BAAqB;MACnB,IAAMuB,aAAa,GAAG,EAAtB;;MADmB,4CAEC,KAAK7C,iBAFN;MAAA;;MAAA;QAEnB,uDAA4C;UAAA,IAAjCa,KAAiC;UAC1C,IAAMiC,UAAU,GAAG,IAAI7D,OAAJ,GAAc8D,MAAd,CAAqB;YACtCC,GAAG,EAAE,IAAI9D,OAAJ,CAAY2B,KAAK,CAACnB,SAAlB,EAA6BuD,MAA7B;UADiC,CAArB,CAAnB;UAIAJ,aAAa,CAACnC,IAAdmC,CAAmBC,UAAnBD;QACD;MARkB;QAAA;MAAA;QAAA;MAAA;;MASnB,OAAOA,aAAP;IACD;;;WAEDrB,6BAAoBT,EAApBS,EAAwB;MACtB,KAAK,IAAIK,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAK7B,iBAAL,CAAuBuB,MAA3C,EAAmDM,CAAC,EAApD,EAAwD;QACtD,IAAMC,UAAU,GAAG,IAAI3C,UAAJ,CAAe4B,EAAf,CAAnB;QACA,KAAKZ,YAAL,CAAkB0B,CAAlB,IAAuBC,UAAvB;QACA,KAAK1B,UAAL,CAAgByB,CAAhB,IAAqBC,UAAU,CAACoB,SAAhC;MACD;IACF;;;WAEDvC,+BAAsB;MACpB,IAAOZ,YAAP,GAAuD,IAAvD,CAAOA,YAAP;MAAA,IAAqBE,WAArB,GAAuD,IAAvD,CAAqBA,WAArB;MAAA,IAAkCD,iBAAlC,GAAuD,IAAvD,CAAkCA,iBAAlC;;MACA,IAAI,CAACD,YAAD,IAAiBE,WAAW,CAACsB,MAAZtB,KAAuB,CAAxC,IAA6CD,iBAAiB,CAACuB,MAAlBvB,KAA6B,CAA9E,EAAiF;QAC/E,KAAKD,YAAL,GAAoB,IAAIjB,YAAJ,CAAiBQ,2BAAjB,CAApB;QACA,KAAKU,iBAAL,CAAuBU,IAAvB,CACE,IAAI3B,gBAAJ,CAAqBU,+BAA+B,CAAC,CAAD,CAApD,CADF,EAEE,IAAIV,gBAAJ,CAAqBU,+BAA+B,CAAC,CAAD,CAApD,CAFF;MAID;IACF;;;;EApJyCT,M;;SAAvBY,c","names":["Texture2D","ProgramManager","AmbientLight","DirectionalLight","Effect","Matrix4","Vector3","ShadowPass","default","shadow","DEFAULT_AMBIENT_LIGHT_PROPS","color","intensity","DEFAULT_DIRECTIONAL_LIGHT_PROPS","direction","DEFAULT_SHADOW_COLOR","LightingEffect","constructor","props","ambientLight","directionalLights","pointLights","shadowColor","shadowPasses","shadowMaps","dummyShadowMap","programManager","key","lightSource","type","push","_applyDefaultLights","some","light","preRender","gl","layers","layerFilter","viewports","onViewportActive","views","shadowMatrices","_createLightMatrix","length","_createShadowPasses","getDefaultProgramManager","addDefaultModule","width","height","i","shadowPass","render","moduleParameters","shadowLightId","getModuleParameters","layer","parameters","lightSources","map","directionalLight","getProjectedLight","pointLight","cleanup","delete","removeDefaultModule","lightMatrices","viewMatrix","lookAt","eye","negate","shadowMap"],"sources":["../../../../src/effects/lighting/lighting-effect.js"],"sourcesContent":["import {Texture2D, ProgramManager} from '@luma.gl/core';\nimport {AmbientLight} from './ambient-light';\nimport {DirectionalLight} from './directional-light';\nimport Effect from '../../lib/effect';\nimport {Matrix4, Vector3} from '@math.gl/core';\nimport ShadowPass from '../../passes/shadow-pass';\nimport {default as shadow} from '../../shaderlib/shadow/shadow';\n\nconst DEFAULT_AMBIENT_LIGHT_PROPS = {color: [255, 255, 255], intensity: 1.0};\nconst DEFAULT_DIRECTIONAL_LIGHT_PROPS = [\n  {\n    color: [255, 255, 255],\n    intensity: 1.0,\n    direction: [-1, 3, -1]\n  },\n  {\n    color: [255, 255, 255],\n    intensity: 0.9,\n    direction: [1, -8, -2.5]\n  }\n];\nconst DEFAULT_SHADOW_COLOR = [0, 0, 0, 200 / 255];\n\n// Class to manage ambient, point and directional light sources in deck\nexport default class LightingEffect extends Effect {\n  constructor(props) {\n    super(props);\n    this.ambientLight = null;\n    this.directionalLights = [];\n    this.pointLights = [];\n\n    this.shadowColor = DEFAULT_SHADOW_COLOR;\n    this.shadowPasses = [];\n    this.shadowMaps = [];\n    this.dummyShadowMap = null;\n    this.shadow = false;\n    this.programManager = null;\n\n    for (const key in props) {\n      const lightSource = props[key];\n\n      switch (lightSource.type) {\n        case 'ambient':\n          this.ambientLight = lightSource;\n          break;\n\n        case 'directional':\n          this.directionalLights.push(lightSource);\n          break;\n\n        case 'point':\n          this.pointLights.push(lightSource);\n          break;\n        default:\n      }\n    }\n    this._applyDefaultLights();\n\n    this.shadow = this.directionalLights.some(light => light.shadow);\n  }\n\n  preRender(gl, {layers, layerFilter, viewports, onViewportActive, views}) {\n    if (!this.shadow) return;\n\n    // create light matrix every frame to make sure always updated from light source\n    this.shadowMatrices = this._createLightMatrix();\n\n    if (this.shadowPasses.length === 0) {\n      this._createShadowPasses(gl);\n    }\n    if (!this.programManager) {\n      // TODO - support multiple contexts\n      this.programManager = ProgramManager.getDefaultProgramManager(gl);\n      if (shadow) {\n        this.programManager.addDefaultModule(shadow);\n      }\n    }\n\n    if (!this.dummyShadowMap) {\n      this.dummyShadowMap = new Texture2D(gl, {\n        width: 1,\n        height: 1\n      });\n    }\n\n    for (let i = 0; i < this.shadowPasses.length; i++) {\n      const shadowPass = this.shadowPasses[i];\n      shadowPass.render({\n        layers,\n        layerFilter,\n        viewports,\n        onViewportActive,\n        views,\n        moduleParameters: {\n          shadowLightId: i,\n          dummyShadowMap: this.dummyShadowMap,\n          shadowMatrices: this.shadowMatrices\n        }\n      });\n    }\n  }\n\n  getModuleParameters(layer) {\n    const parameters = this.shadow\n      ? {\n          shadowMaps: this.shadowMaps,\n          dummyShadowMap: this.dummyShadowMap,\n          shadowColor: this.shadowColor,\n          shadowMatrices: this.shadowMatrices\n        }\n      : {};\n\n    // when not rendering to screen, turn off lighting by adding empty light source object\n    // lights shader module relies on the `lightSources` to turn on/off lighting\n    parameters.lightSources = {\n      ambientLight: this.ambientLight,\n      directionalLights: this.directionalLights.map(directionalLight =>\n        directionalLight.getProjectedLight({layer})\n      ),\n      pointLights: this.pointLights.map(pointLight => pointLight.getProjectedLight({layer}))\n    };\n\n    return parameters;\n  }\n\n  cleanup() {\n    for (const shadowPass of this.shadowPasses) {\n      shadowPass.delete();\n    }\n    this.shadowPasses.length = 0;\n    this.shadowMaps.length = 0;\n\n    if (this.dummyShadowMap) {\n      this.dummyShadowMap.delete();\n      this.dummyShadowMap = null;\n    }\n\n    if (this.shadow && this.programManager) {\n      this.programManager.removeDefaultModule(shadow);\n      this.programManager = null;\n    }\n  }\n\n  _createLightMatrix() {\n    const lightMatrices = [];\n    for (const light of this.directionalLights) {\n      const viewMatrix = new Matrix4().lookAt({\n        eye: new Vector3(light.direction).negate()\n      });\n\n      lightMatrices.push(viewMatrix);\n    }\n    return lightMatrices;\n  }\n\n  _createShadowPasses(gl) {\n    for (let i = 0; i < this.directionalLights.length; i++) {\n      const shadowPass = new ShadowPass(gl);\n      this.shadowPasses[i] = shadowPass;\n      this.shadowMaps[i] = shadowPass.shadowMap;\n    }\n  }\n\n  _applyDefaultLights() {\n    const {ambientLight, pointLights, directionalLights} = this;\n    if (!ambientLight && pointLights.length === 0 && directionalLights.length === 0) {\n      this.ambientLight = new AmbientLight(DEFAULT_AMBIENT_LIGHT_PROPS);\n      this.directionalLights.push(\n        new DirectionalLight(DEFAULT_DIRECTIONAL_LIGHT_PROPS[0]),\n        new DirectionalLight(DEFAULT_DIRECTIONAL_LIGHT_PROPS[1])\n      );\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}