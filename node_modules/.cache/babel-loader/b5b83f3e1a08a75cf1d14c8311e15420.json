{"ast":null,"code":"import _classCallCheck from \"/Users/tomasehrenfeld/projs/se-team/tomas/react-apps/custom_filter/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/tomasehrenfeld/projs/se-team/tomas/react-apps/custom_filter/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { isArray } from '@math.gl/core';\nimport { getPolygonSignedArea, forEachSegmentInPolygon, modifyPolygonWindingDirection, getPolygonSignedAreaPoints, forEachSegmentInPolygonPoints, modifyPolygonWindingDirectionPoints } from './polygon-utils';\n\nvar Polygon = /*#__PURE__*/function () {\n  function Polygon(points) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    _classCallCheck(this, Polygon);\n\n    this.points = points;\n    this.isFlatArray = !isArray(points[0]);\n    this.options = {\n      start: options.start || 0,\n      end: options.end || points.length,\n      size: options.size || 2,\n      isClosed: options.isClosed\n    };\n    Object.freeze(this);\n  }\n\n  _createClass(Polygon, [{\n    key: \"getSignedArea\",\n    value: function getSignedArea() {\n      if (this.isFlatArray) return getPolygonSignedArea(this.points, this.options);\n      return getPolygonSignedAreaPoints(this.points, this.options);\n    }\n  }, {\n    key: \"getArea\",\n    value: function getArea() {\n      return Math.abs(this.getSignedArea());\n    }\n  }, {\n    key: \"getWindingDirection\",\n    value: function getWindingDirection() {\n      return Math.sign(this.getSignedArea());\n    }\n  }, {\n    key: \"forEachSegment\",\n    value: function forEachSegment(visitor) {\n      if (this.isFlatArray) {\n        forEachSegmentInPolygon(this.points, function (x1, y1, x2, y2, i1, i2) {\n          visitor([x1, y1], [x2, y2], i1, i2);\n        }, this.options);\n      } else {\n        forEachSegmentInPolygonPoints(this.points, visitor, this.options);\n      }\n    }\n  }, {\n    key: \"modifyWindingDirection\",\n    value: function modifyWindingDirection(direction) {\n      if (this.isFlatArray) {\n        return modifyPolygonWindingDirection(this.points, direction, this.options);\n      }\n\n      return modifyPolygonWindingDirectionPoints(this.points, direction, this.options);\n    }\n  }]);\n\n  return Polygon;\n}();\n\nexport { Polygon as default };","map":{"version":3,"mappings":";;AAGA,SAAQA,OAAR,QAAsB,eAAtB;AAEA,SACEC,oBADF,EAEEC,uBAFF,EAGEC,6BAHF,EAIEC,0BAJF,EAKEC,6BALF,EAMEC,mCANF,QAOO,iBAPP;;IASqBC,O;EACnBC,iBAAYC,MAAZD,EAAkC;IAAA,IAAdE,OAAc,uEAAJ,EAAI;;IAAA;;IAChC,KAAKD,MAAL,GAAcA,MAAd;IACA,KAAKE,WAAL,GAAmB,CAACX,OAAO,CAACS,MAAM,CAAC,CAAD,CAAP,CAA3B;IAEA,KAAKC,OAAL,GAAe;MACbE,KAAK,EAAEF,OAAO,CAACE,KAARF,IAAiB,CADX;MAEbG,GAAG,EAAEH,OAAO,CAACG,GAARH,IAAeD,MAAM,CAACK,MAFd;MAGbC,IAAI,EAAEL,OAAO,CAACK,IAARL,IAAgB,CAHT;MAIbM,QAAQ,EAAEN,OAAO,CAACM;IAJL,CAAf;IAOAC,MAAM,CAACC,MAAPD,CAAc,IAAdA;EACD;;;;WAEDE,yBAAgB;MACd,IAAI,KAAKR,WAAT,EAAsB,OAAOV,oBAAoB,CAAC,KAAKQ,MAAN,EAAc,KAAKC,OAAnB,CAA3B;MAEtB,OAAON,0BAA0B,CAAC,KAAKK,MAAN,EAAc,KAAKC,OAAnB,CAAjC;IACD;;;WAEDU,mBAAU;MACR,OAAOC,IAAI,CAACC,GAALD,CAAS,KAAKF,aAAL,EAATE,CAAP;IACD;;;WAEDE,+BAAsB;MACpB,OAAOF,IAAI,CAACG,IAALH,CAAU,KAAKF,aAAL,EAAVE,CAAP;IACD;;;WAEDI,wBAAeC,OAAfD,EAAwB;MACtB,IAAI,KAAKd,WAAT,EAAsB;QACpBT,uBAAuB,CACrB,KAAKO,MADgB,EAGrB,UAACkB,EAAD,EAAKC,EAAL,EAASC,EAAT,EAAaC,EAAb,EAAiBC,EAAjB,EAAqBC,EAArB,EAA4B;UAE1BN,OAAO,CAAC,CAACC,EAAD,EAAKC,EAAL,CAAD,EAAW,CAACC,EAAD,EAAKC,EAAL,CAAX,EAAqBC,EAArB,EAAyBC,EAAzB,CAAPN;QALmB,GAOrB,KAAKhB,OAPgB,CAAvBR;MADF,OAUO;QACLG,6BAA6B,CAAC,KAAKI,MAAN,EAAciB,OAAd,EAAuB,KAAKhB,OAA5B,CAA7BL;MACD;IACF;;;WAED4B,gCAAuBC,SAAvBD,EAAkC;MAChC,IAAI,KAAKtB,WAAT,EAAsB;QACpB,OAAOR,6BAA6B,CAAC,KAAKM,MAAN,EAAcyB,SAAd,EAAyB,KAAKxB,OAA9B,CAApC;MACD;;MACD,OAAOJ,mCAAmC,CAAC,KAAKG,MAAN,EAAcyB,SAAd,EAAyB,KAAKxB,OAA9B,CAA1C;IACD;;;;;;SAlDkBH,O","names":["isArray","getPolygonSignedArea","forEachSegmentInPolygon","modifyPolygonWindingDirection","getPolygonSignedAreaPoints","forEachSegmentInPolygonPoints","modifyPolygonWindingDirectionPoints","Polygon","constructor","points","options","isFlatArray","start","end","length","size","isClosed","Object","freeze","getSignedArea","getArea","Math","abs","getWindingDirection","sign","forEachSegment","visitor","x1","y1","x2","y2","i1","i2","modifyWindingDirection","direction"],"sources":["../../src/polygon.js"],"sourcesContent":["/* eslint-disable no-undef */\n/* eslint-disable no-console */\n\nimport {isArray} from '@math.gl/core';\n\nimport {\n  getPolygonSignedArea,\n  forEachSegmentInPolygon,\n  modifyPolygonWindingDirection,\n  getPolygonSignedAreaPoints,\n  forEachSegmentInPolygonPoints,\n  modifyPolygonWindingDirectionPoints\n} from './polygon-utils';\n\nexport default class Polygon {\n  constructor(points, options = {}) {\n    this.points = points;\n    this.isFlatArray = !isArray(points[0]);\n\n    this.options = {\n      start: options.start || 0,\n      end: options.end || points.length,\n      size: options.size || 2,\n      isClosed: options.isClosed\n    };\n\n    Object.freeze(this);\n  }\n\n  getSignedArea() {\n    if (this.isFlatArray) return getPolygonSignedArea(this.points, this.options);\n\n    return getPolygonSignedAreaPoints(this.points, this.options);\n  }\n\n  getArea() {\n    return Math.abs(this.getSignedArea());\n  }\n\n  getWindingDirection() {\n    return Math.sign(this.getSignedArea());\n  }\n\n  forEachSegment(visitor) {\n    if (this.isFlatArray) {\n      forEachSegmentInPolygon(\n        this.points,\n        // eslint-disable-next-line max-params\n        (x1, y1, x2, y2, i1, i2) => {\n          // TODO @igorDykhta original visitor uses arrays for each point, but with flat arrays performance degrades if we allocate points for each segment\n          visitor([x1, y1], [x2, y2], i1, i2);\n        },\n        this.options\n      );\n    } else {\n      forEachSegmentInPolygonPoints(this.points, visitor, this.options);\n    }\n  }\n\n  modifyWindingDirection(direction) {\n    if (this.isFlatArray) {\n      return modifyPolygonWindingDirection(this.points, direction, this.options);\n    }\n    return modifyPolygonWindingDirectionPoints(this.points, direction, this.options);\n  }\n}\n"]},"metadata":{},"sourceType":"module"}