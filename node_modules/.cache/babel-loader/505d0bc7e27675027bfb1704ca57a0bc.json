{"ast":null,"code":"import _objectSpread from\"/Users/tomasehrenfeld/projs/se-team/tomas/react-apps/custom_filter/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import{useSelector,useDispatch}from'react-redux';import{CartoLayer}from'@deck.gl/carto';import{selectSourceById,updateLayer}from'@carto/react-redux';import{useCartoLayerProps}from'@carto/react-api';import htmlForFeature from'utils/htmlForFeature';import GL from'@luma.gl/constants';export var POPULATION_LAYER_ID='populationLayer';var layerConfig={title:'Population',visible:true,legend:{}};export default function PopulationLayer(){var _useSelector=useSelector(function(state){return state.carto.layers;}),populationLayer=_useSelector.populationLayer;var source=useSelector(function(state){return selectSourceById(state,populationLayer===null||populationLayer===void 0?void 0:populationLayer.source);});var cartoLayerProps=useCartoLayerProps({source:source});var dispatch=useDispatch();if(populationLayer&&source){return new CartoLayer(_objectSpread(_objectSpread({},cartoLayerProps),{},{id:POPULATION_LAYER_ID,getFillColor:[217,219,94],pointRadiusMinPixels:0.8,getLineColor:[0,0,0],lineWidthMinPixels:1,pickable:true,parameters:{blendFunc:[GL.SRC_ALPHA,GL.DST_ALPHA],blendEquation:GL.FUNC_ADD},visible:populationLayer.visible,onDataLoad:function onDataLoad(data){dispatch(updateLayer({id:POPULATION_LAYER_ID,layerAttributes:_objectSpread({},layerConfig)}));cartoLayerProps.onDataLoad(data);},onHover:function onHover(info){if(info!==null&&info!==void 0&&info.object){info.object={html:htmlForFeature({feature:info.object}),style:{}};}}}));}}","map":{"version":3,"names":["useSelector","useDispatch","CartoLayer","selectSourceById","updateLayer","useCartoLayerProps","htmlForFeature","GL","POPULATION_LAYER_ID","layerConfig","title","visible","legend","PopulationLayer","state","carto","layers","populationLayer","source","cartoLayerProps","dispatch","id","getFillColor","pointRadiusMinPixels","getLineColor","lineWidthMinPixels","pickable","parameters","blendFunc","SRC_ALPHA","DST_ALPHA","blendEquation","FUNC_ADD","onDataLoad","data","layerAttributes","onHover","info","object","html","feature","style"],"sources":["/Users/tomasehrenfeld/projs/se-team/tomas/react-apps/custom_filter/src/components/layers/PopulationLayer.js"],"sourcesContent":["import { useSelector, useDispatch } from 'react-redux';\nimport { CartoLayer } from '@deck.gl/carto';\nimport { selectSourceById, updateLayer } from '@carto/react-redux';\nimport { useCartoLayerProps } from '@carto/react-api';\nimport htmlForFeature from 'utils/htmlForFeature';\nimport GL from '@luma.gl/constants';\n\nexport const POPULATION_LAYER_ID = 'populationLayer';\nconst layerConfig = {\n  title: 'Population',\n  visible: true,\n  legend: {},\n};\n\nexport default function PopulationLayer() {\n  const { populationLayer } = useSelector((state) => state.carto.layers);\n  const source = useSelector((state) => selectSourceById(state, populationLayer?.source));\n  const cartoLayerProps = useCartoLayerProps({ source });\n  const dispatch = useDispatch();\n\n  if (populationLayer && source) {\n    return new CartoLayer({\n      ...cartoLayerProps,\n      id: POPULATION_LAYER_ID,\n      getFillColor: [217, 219, 94],\n      pointRadiusMinPixels: 0.8,\n      getLineColor: [0, 0, 0],\n      lineWidthMinPixels: 1,\n      pickable: true,\n      parameters: {\n        blendFunc: [GL.SRC_ALPHA, GL.DST_ALPHA],\n        blendEquation: GL.FUNC_ADD,\n      },\n      visible: populationLayer.visible,\n      onDataLoad: (data) => {\n        dispatch(\n          updateLayer({\n            id: POPULATION_LAYER_ID,\n            layerAttributes: { ...layerConfig },\n          })\n        );\n        cartoLayerProps.onDataLoad(data);\n      },\n      onHover: (info) => {\n        if (info?.object) {\n          info.object = {\n            html: htmlForFeature({ feature: info.object }),\n            style: {},\n          };\n        }\n      },\n    });\n  }\n}\n"],"mappings":"uJAAA,OAASA,WAAT,CAAsBC,WAAtB,KAAyC,aAAzC,CACA,OAASC,UAAT,KAA2B,gBAA3B,CACA,OAASC,gBAAT,CAA2BC,WAA3B,KAA8C,oBAA9C,CACA,OAASC,kBAAT,KAAmC,kBAAnC,CACA,MAAOC,CAAAA,cAAP,KAA2B,sBAA3B,CACA,MAAOC,CAAAA,EAAP,KAAe,oBAAf,CAEA,MAAO,IAAMC,CAAAA,mBAAmB,CAAG,iBAA5B,CACP,GAAMC,CAAAA,WAAW,CAAG,CAClBC,KAAK,CAAE,YADW,CAElBC,OAAO,CAAE,IAFS,CAGlBC,MAAM,CAAE,EAHU,CAApB,CAMA,cAAe,SAASC,CAAAA,eAAT,EAA2B,CACxC,iBAA4Bb,WAAW,CAAC,SAACc,KAAD,QAAWA,CAAAA,KAAK,CAACC,KAAN,CAAYC,MAAvB,EAAD,CAAvC,CAAQC,eAAR,cAAQA,eAAR,CACA,GAAMC,CAAAA,MAAM,CAAGlB,WAAW,CAAC,SAACc,KAAD,QAAWX,CAAAA,gBAAgB,CAACW,KAAD,CAAQG,eAAR,SAAQA,eAAR,iBAAQA,eAAe,CAAEC,MAAzB,CAA3B,EAAD,CAA1B,CACA,GAAMC,CAAAA,eAAe,CAAGd,kBAAkB,CAAC,CAAEa,MAAM,CAANA,MAAF,CAAD,CAA1C,CACA,GAAME,CAAAA,QAAQ,CAAGnB,WAAW,EAA5B,CAEA,GAAIgB,eAAe,EAAIC,MAAvB,CAA+B,CAC7B,MAAO,IAAIhB,CAAAA,UAAJ,gCACFiB,eADE,MAELE,EAAE,CAAEb,mBAFC,CAGLc,YAAY,CAAE,CAAC,GAAD,CAAM,GAAN,CAAW,EAAX,CAHT,CAILC,oBAAoB,CAAE,GAJjB,CAKLC,YAAY,CAAE,CAAC,CAAD,CAAI,CAAJ,CAAO,CAAP,CALT,CAMLC,kBAAkB,CAAE,CANf,CAOLC,QAAQ,CAAE,IAPL,CAQLC,UAAU,CAAE,CACVC,SAAS,CAAE,CAACrB,EAAE,CAACsB,SAAJ,CAAetB,EAAE,CAACuB,SAAlB,CADD,CAEVC,aAAa,CAAExB,EAAE,CAACyB,QAFR,CARP,CAYLrB,OAAO,CAAEM,eAAe,CAACN,OAZpB,CAaLsB,UAAU,CAAE,oBAACC,IAAD,CAAU,CACpBd,QAAQ,CACNhB,WAAW,CAAC,CACViB,EAAE,CAAEb,mBADM,CAEV2B,eAAe,kBAAO1B,WAAP,CAFL,CAAD,CADL,CAAR,CAMAU,eAAe,CAACc,UAAhB,CAA2BC,IAA3B,EACD,CArBI,CAsBLE,OAAO,CAAE,iBAACC,IAAD,CAAU,CACjB,GAAIA,IAAJ,SAAIA,IAAJ,WAAIA,IAAI,CAAEC,MAAV,CAAkB,CAChBD,IAAI,CAACC,MAAL,CAAc,CACZC,IAAI,CAAEjC,cAAc,CAAC,CAAEkC,OAAO,CAAEH,IAAI,CAACC,MAAhB,CAAD,CADR,CAEZG,KAAK,CAAE,EAFK,CAAd,CAID,CACF,CA7BI,GAAP,CA+BD,CACF"},"metadata":{},"sourceType":"module"}