{"ast":null,"code":"import _classCallCheck from \"/Users/tomasehrenfeld/projs/se-team/tomas/react-apps/custom_filter/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/tomasehrenfeld/projs/se-team/tomas/react-apps/custom_filter/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { whichButtons, getOffsetPosition } from './event-utils';\nvar DEFAULT_OPTIONS = {\n  srcElement: 'root',\n  priority: 0\n};\n\nvar EventRegistrar = /*#__PURE__*/function () {\n  function EventRegistrar(eventManager) {\n    _classCallCheck(this, EventRegistrar);\n\n    this.eventManager = eventManager;\n    this.handlers = [];\n    this.handlersByElement = new Map();\n    this.handleEvent = this.handleEvent.bind(this);\n    this._active = false;\n  }\n\n  _createClass(EventRegistrar, [{\n    key: \"isEmpty\",\n    value: function isEmpty() {\n      return !this._active;\n    }\n  }, {\n    key: \"add\",\n    value: function add(type, handler, opts) {\n      var once = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n      var passive = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\n      var handlers = this.handlers,\n          handlersByElement = this.handlersByElement;\n\n      if (opts && (typeof opts !== 'object' || opts.addEventListener)) {\n        opts = {\n          srcElement: opts\n        };\n      }\n\n      opts = opts ? Object.assign({}, DEFAULT_OPTIONS, opts) : DEFAULT_OPTIONS;\n      var entries = handlersByElement.get(opts.srcElement);\n\n      if (!entries) {\n        entries = [];\n        handlersByElement.set(opts.srcElement, entries);\n      }\n\n      var entry = {\n        type: type,\n        handler: handler,\n        srcElement: opts.srcElement,\n        priority: opts.priority\n      };\n\n      if (once) {\n        entry.once = true;\n      }\n\n      if (passive) {\n        entry.passive = true;\n      }\n\n      handlers.push(entry);\n      this._active = this._active || !entry.passive;\n      var insertPosition = entries.length - 1;\n\n      while (insertPosition >= 0) {\n        if (entries[insertPosition].priority >= entry.priority) {\n          break;\n        }\n\n        insertPosition--;\n      }\n\n      entries.splice(insertPosition + 1, 0, entry);\n    }\n  }, {\n    key: \"remove\",\n    value: function remove(type, handler) {\n      var handlers = this.handlers,\n          handlersByElement = this.handlersByElement;\n\n      for (var i = handlers.length - 1; i >= 0; i--) {\n        var entry = handlers[i];\n\n        if (entry.type === type && entry.handler === handler) {\n          handlers.splice(i, 1);\n          var entries = handlersByElement.get(entry.srcElement);\n          entries.splice(entries.indexOf(entry), 1);\n\n          if (entries.length === 0) {\n            handlersByElement.delete(entry.srcElement);\n          }\n        }\n      }\n\n      this._active = handlers.some(function (entry) {\n        return !entry.passive;\n      });\n    }\n  }, {\n    key: \"handleEvent\",\n    value: function handleEvent(event) {\n      if (this.isEmpty()) {\n        return;\n      }\n\n      var mjolnirEvent = this._normalizeEvent(event);\n\n      var target = event.srcEvent.target;\n\n      while (target && target !== mjolnirEvent.rootElement) {\n        this._emit(mjolnirEvent, target);\n\n        if (mjolnirEvent.handled) {\n          return;\n        }\n\n        target = target.parentNode;\n      }\n\n      this._emit(mjolnirEvent, 'root');\n    }\n  }, {\n    key: \"_emit\",\n    value: function _emit(event, srcElement) {\n      var entries = this.handlersByElement.get(srcElement);\n\n      if (entries) {\n        var immediatePropagationStopped = false;\n\n        var stopPropagation = function stopPropagation() {\n          event.handled = true;\n        };\n\n        var stopImmediatePropagation = function stopImmediatePropagation() {\n          event.handled = true;\n          immediatePropagationStopped = true;\n        };\n\n        var entriesToRemove = [];\n\n        for (var i = 0; i < entries.length; i++) {\n          var _entries$i = entries[i],\n              type = _entries$i.type,\n              handler = _entries$i.handler,\n              once = _entries$i.once;\n          handler(Object.assign({}, event, {\n            type: type,\n            stopPropagation: stopPropagation,\n            stopImmediatePropagation: stopImmediatePropagation\n          }));\n\n          if (once) {\n            entriesToRemove.push(entries[i]);\n          }\n\n          if (immediatePropagationStopped) {\n            break;\n          }\n        }\n\n        for (var _i = 0; _i < entriesToRemove.length; _i++) {\n          var _entriesToRemove$_i = entriesToRemove[_i],\n              _type = _entriesToRemove$_i.type,\n              _handler = _entriesToRemove$_i.handler;\n          this.remove(_type, _handler);\n        }\n      }\n    }\n  }, {\n    key: \"_normalizeEvent\",\n    value: function _normalizeEvent(event) {\n      var rootElement = this.eventManager.element;\n      return Object.assign({}, event, whichButtons(event), getOffsetPosition(event, rootElement), {\n        handled: false,\n        rootElement: rootElement\n      });\n    }\n  }]);\n\n  return EventRegistrar;\n}();\n\nexport { EventRegistrar as default };","map":{"version":3,"mappings":"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","names":["whichButtons","getOffsetPosition","DEFAULT_OPTIONS","srcElement","priority","EventRegistrar","constructor","eventManager","handlers","handlersByElement","Map","handleEvent","bind","_active","isEmpty","add","type","handler","opts","once","passive","addEventListener","Object","assign","entries","get","set","entry","push","insertPosition","length","splice","remove","i","indexOf","delete","some","event","mjolnirEvent","_normalizeEvent","target","srcEvent","rootElement","_emit","handled","parentNode","immediatePropagationStopped","stopPropagation","stopImmediatePropagation","entriesToRemove","element"],"sources":["../../../src/utils/event-registrar.js"],"sourcesContent":["import {whichButtons, getOffsetPosition} from './event-utils';\n\nconst DEFAULT_OPTIONS = {\n  srcElement: 'root',\n  priority: 0\n};\n\nexport default class EventRegistrar {\n  constructor(eventManager) {\n    this.eventManager = eventManager;\n    this.handlers = [];\n    // Element -> handler map\n    this.handlersByElement = new Map();\n\n    this.handleEvent = this.handleEvent.bind(this);\n    this._active = false;\n  }\n\n  // Returns true if there are no non-passive handlers\n  isEmpty() {\n    return !this._active;\n  }\n\n  add(type, handler, opts, once = false, passive = false) {\n    const {handlers, handlersByElement} = this;\n\n    if (opts && (typeof opts !== 'object' || opts.addEventListener)) {\n      // is DOM element, backward compatibility\n      opts = {srcElement: opts};\n    }\n    opts = opts ? Object.assign({}, DEFAULT_OPTIONS, opts) : DEFAULT_OPTIONS;\n\n    let entries = handlersByElement.get(opts.srcElement);\n    if (!entries) {\n      entries = [];\n      handlersByElement.set(opts.srcElement, entries);\n    }\n    const entry = {type, handler, srcElement: opts.srcElement, priority: opts.priority};\n    if (once) {\n      entry.once = true;\n    }\n    if (passive) {\n      entry.passive = true;\n    }\n    handlers.push(entry);\n    this._active = this._active || !entry.passive;\n\n    // Sort handlers by descending priority\n    // Handlers with the same priority are excuted in the order of registration\n    let insertPosition = entries.length - 1;\n    while (insertPosition >= 0) {\n      if (entries[insertPosition].priority >= entry.priority) {\n        break;\n      }\n      insertPosition--;\n    }\n    entries.splice(insertPosition + 1, 0, entry);\n  }\n\n  remove(type, handler) {\n    const {handlers, handlersByElement} = this;\n\n    for (let i = handlers.length - 1; i >= 0; i--) {\n      const entry = handlers[i];\n\n      if (entry.type === type && entry.handler === handler) {\n        handlers.splice(i, 1);\n        const entries = handlersByElement.get(entry.srcElement);\n        entries.splice(entries.indexOf(entry), 1);\n        if (entries.length === 0) {\n          handlersByElement.delete(entry.srcElement);\n        }\n      }\n    }\n    this._active = handlers.some(entry => !entry.passive);\n  }\n\n  /**\n   * Handles hammerjs event\n   */\n  handleEvent(event) {\n    if (this.isEmpty()) {\n      return;\n    }\n\n    const mjolnirEvent = this._normalizeEvent(event);\n    let target = event.srcEvent.target;\n\n    while (target && target !== mjolnirEvent.rootElement) {\n      this._emit(mjolnirEvent, target);\n      if (mjolnirEvent.handled) {\n        return;\n      }\n      target = target.parentNode;\n    }\n    this._emit(mjolnirEvent, 'root');\n  }\n\n  /**\n   * Invoke handlers on a particular element\n   */\n  _emit(event, srcElement) {\n    const entries = this.handlersByElement.get(srcElement);\n\n    if (entries) {\n      let immediatePropagationStopped = false;\n\n      // Prevents the current event from bubbling up\n      const stopPropagation = () => {\n        event.handled = true;\n      };\n      // Prevent any remaining listeners from being called\n      const stopImmediatePropagation = () => {\n        event.handled = true;\n        immediatePropagationStopped = true;\n      };\n      const entriesToRemove = [];\n\n      for (let i = 0; i < entries.length; i++) {\n        const {type, handler, once} = entries[i];\n        handler(\n          Object.assign({}, event, {\n            type,\n            stopPropagation,\n            stopImmediatePropagation\n          })\n        );\n        if (once) {\n          entriesToRemove.push(entries[i]);\n        }\n        if (immediatePropagationStopped) {\n          break;\n        }\n      }\n\n      for (let i = 0; i < entriesToRemove.length; i++) {\n        const {type, handler} = entriesToRemove[i];\n        this.remove(type, handler);\n      }\n    }\n  }\n\n  /**\n   * Normalizes hammerjs and custom events to have predictable fields.\n   */\n  _normalizeEvent(event) {\n    const rootElement = this.eventManager.element;\n\n    return Object.assign({}, event, whichButtons(event), getOffsetPosition(event, rootElement), {\n      handled: false,\n      rootElement\n    });\n  }\n}\n"]},"metadata":{},"sourceType":"module"}