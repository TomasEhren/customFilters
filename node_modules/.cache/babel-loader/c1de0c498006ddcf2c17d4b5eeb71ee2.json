{"ast":null,"code":"import _asyncToGenerator from \"/Users/tomasehrenfeld/projs/se-team/tomas/react-apps/custom_filter/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _regeneratorRuntime from \"/Users/tomasehrenfeld/projs/se-team/tomas/react-apps/custom_filter/node_modules/@babel/runtime/regenerator/index.js\";\nvar VERSION = typeof \"3.1.8\" !== 'undefined' ? \"3.1.8\" : 'latest';\nexport var JSONLoader = {\n  name: 'JSON',\n  id: 'json',\n  module: 'json',\n  version: VERSION,\n  extensions: ['json', 'geojson'],\n  mimeTypes: ['application/json'],\n  category: 'json',\n  text: true,\n  parseTextSync: parseTextSync,\n  parse: function () {\n    var _parse = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(arrayBuffer) {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              return _context.abrupt(\"return\", parseTextSync(new TextDecoder().decode(arrayBuffer)));\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    function parse(_x) {\n      return _parse.apply(this, arguments);\n    }\n\n    return parse;\n  }(),\n  options: {}\n};\n\nfunction parseTextSync(text) {\n  return JSON.parse(text);\n}\n\nexport var _typecheckJSONLoader = JSONLoader;","map":{"version":3,"mappings":";;AAIA,IAAMA,OAAO,GAAG,mBAAuB,WAAvB,aAAmD,QAAnE;AAMA,OAAO,IAAMC,UAAU,GAAG;EACxBC,IAAI,EAAE,MADkB;EAExBC,EAAE,EAAE,MAFoB;EAGxBC,MAAM,EAAE,MAHgB;EAIxBC,OAAO,EAAEL,OAJe;EAKxBM,UAAU,EAAE,CAAC,MAAD,EAAS,SAAT,CALY;EAMxBC,SAAS,EAAE,CAAC,kBAAD,CANa;EAOxBC,QAAQ,EAAE,MAPc;EAQxBC,IAAI,EAAE,IARkB;EASxBC,aATwB,EASxBA,aATwB;EAUxBC,KAAK;IAAA,sEAAE,iBAAOC,WAAP;MAAA;QAAA;UAAA;YAAA;cAAA,iCAAuBF,aAAa,CAAC,IAAIG,WAAJ,GAAkBC,MAAlB,CAAyBF,WAAzB,CAAD,CAApC;;YAAA;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA,CAAF;;IAAA;MAAA;IAAA;;IAAA;EAAA,GAVmB;EAWxBG,OAAO,EAAE;AAXe,CAAnB;;AAeP,SAASL,aAAT,CAAuBD,IAAvB,EAA6B;EAC3B,OAAOO,IAAI,CAACL,KAALK,CAAWP,IAAXO,CAAP;AACD;;AAED,OAAO,IAAMC,oBAAsC,GAAGhB,UAA/C","names":["VERSION","JSONLoader","name","id","module","version","extensions","mimeTypes","category","text","parseTextSync","parse","arrayBuffer","TextDecoder","decode","options","JSON","_typecheckJSONLoader"],"sources":["../../src/json-loader.ts"],"sourcesContent":["import type {LoaderWithParser} from './types';\n\n// __VERSION__ is injected by babel-plugin-version-inline\n// @ts-ignore TS2304: Cannot find name '__VERSION__'.\nconst VERSION = typeof __VERSION__ !== 'undefined' ? __VERSION__ : 'latest';\n\n/**\n * A JSON Micro loader (minimal bundle size)\n * Alternative to `@loaders.gl/json`\n */\nexport const JSONLoader = {\n  name: 'JSON',\n  id: 'json',\n  module: 'json',\n  version: VERSION,\n  extensions: ['json', 'geojson'],\n  mimeTypes: ['application/json'],\n  category: 'json',\n  text: true,\n  parseTextSync,\n  parse: async (arrayBuffer) => parseTextSync(new TextDecoder().decode(arrayBuffer)),\n  options: {}\n};\n\n// TODO - deprecated\nfunction parseTextSync(text) {\n  return JSON.parse(text);\n}\n\nexport const _typecheckJSONLoader: LoaderWithParser = JSONLoader;\n"]},"metadata":{},"sourceType":"module"}