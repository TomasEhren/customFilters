{"ast":null,"code":"import _slicedToArray from \"/Users/tomasehrenfeld/projs/se-team/tomas/react-apps/custom_filter/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport { worldToLngLat } from '@math.gl/web-mercator';\nvar TILE_SIZE = 512;\nexport function quadkeyToWorldBounds(quadkey) {\n  var x = 0;\n  var y = 0;\n  var mask = 1 << quadkey.length;\n  var scale = mask / TILE_SIZE;\n\n  for (var i = 0; i < quadkey.length; i++) {\n    mask >>= 1;\n    var q = parseInt(quadkey[i]);\n    if (q % 2) x |= mask;\n    if (q > 1) y |= mask;\n  }\n\n  return [[x / scale, TILE_SIZE - y / scale], [(x + 0.99) / scale, TILE_SIZE - (y + 0.99) / scale]];\n}\nexport function getQuadkeyPolygon(quadkey) {\n  var _quadkeyToWorldBounds = quadkeyToWorldBounds(quadkey),\n      _quadkeyToWorldBounds2 = _slicedToArray(_quadkeyToWorldBounds, 2),\n      topLeft = _quadkeyToWorldBounds2[0],\n      bottomRight = _quadkeyToWorldBounds2[1];\n\n  var _worldToLngLat = worldToLngLat(topLeft),\n      _worldToLngLat2 = _slicedToArray(_worldToLngLat, 2),\n      w = _worldToLngLat2[0],\n      n = _worldToLngLat2[1];\n\n  var _worldToLngLat3 = worldToLngLat(bottomRight),\n      _worldToLngLat4 = _slicedToArray(_worldToLngLat3, 2),\n      e = _worldToLngLat4[0],\n      s = _worldToLngLat4[1];\n\n  return [e, n, e, s, w, s, w, n, e, n];\n}","map":{"version":3,"mappings":";AAAA,SAAQA,aAAR,QAA4B,uBAA5B;AAEA,IAAMC,SAAS,GAAG,GAAlB;AAEA,OAAO,SAASC,oBAAT,CAA8BC,OAA9B,EAAuC;EAC5C,IAAIC,CAAC,GAAG,CAAR;EACA,IAAIC,CAAC,GAAG,CAAR;EACA,IAAIC,IAAI,GAAG,KAAKH,OAAO,CAACI,MAAxB;EACA,IAAMC,KAAK,GAAGF,IAAI,GAAGL,SAArB;;EAEA,KAAK,IAAIQ,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGN,OAAO,CAACI,MAA5B,EAAoCE,CAAC,EAArC,EAAyC;IACvCH,IAAI,KAAK,CAATA;IACA,IAAMI,CAAC,GAAGC,QAAQ,CAACR,OAAO,CAACM,CAAD,CAAR,CAAlB;IACA,IAAIC,CAAC,GAAG,CAAR,EAAWN,CAAC,IAAIE,IAALF;IACX,IAAIM,CAAC,GAAG,CAAR,EAAWL,CAAC,IAAIC,IAALD;EACZ;;EACD,OAAO,CACL,CAACD,CAAC,GAAGI,KAAL,EAAYP,SAAS,GAAGI,CAAC,GAAGG,KAA5B,CADK,EAEL,CAAC,CAACJ,CAAC,GAAG,IAAL,IAAaI,KAAd,EAAqBP,SAAS,GAAG,CAACI,CAAC,GAAG,IAAL,IAAaG,KAA9C,CAFK,CAAP;AAID;AAED,OAAO,SAASI,iBAAT,CAA2BT,OAA3B,EAAoC;EACzC,4BAA+BD,oBAAoB,CAACC,OAAD,CAAnD;EAAA;EAAA,IAAOU,OAAP;EAAA,IAAgBC,WAAhB;;EACA,qBAAed,aAAa,CAACa,OAAD,CAA5B;EAAA;EAAA,IAAOE,CAAP;EAAA,IAAUC,CAAV;;EACA,sBAAehB,aAAa,CAACc,WAAD,CAA5B;EAAA;EAAA,IAAOG,CAAP;EAAA,IAAUC,CAAV;;EACA,OAAO,CAACD,CAAD,EAAID,CAAJ,EAAOC,CAAP,EAAUC,CAAV,EAAaH,CAAb,EAAgBG,CAAhB,EAAmBH,CAAnB,EAAsBC,CAAtB,EAAyBC,CAAzB,EAA4BD,CAA5B,CAAP;AACD","names":["worldToLngLat","TILE_SIZE","quadkeyToWorldBounds","quadkey","x","y","mask","length","scale","i","q","parseInt","getQuadkeyPolygon","topLeft","bottomRight","w","n","e","s"],"sources":["../../../src/quadkey-layer/quadkey-utils.js"],"sourcesContent":["import {worldToLngLat} from '@math.gl/web-mercator';\n\nconst TILE_SIZE = 512;\n\nexport function quadkeyToWorldBounds(quadkey) {\n  let x = 0;\n  let y = 0;\n  let mask = 1 << quadkey.length;\n  const scale = mask / TILE_SIZE;\n\n  for (let i = 0; i < quadkey.length; i++) {\n    mask >>= 1;\n    const q = parseInt(quadkey[i]);\n    if (q % 2) x |= mask;\n    if (q > 1) y |= mask;\n  }\n  return [\n    [x / scale, TILE_SIZE - y / scale],\n    [(x + 0.99) / scale, TILE_SIZE - (y + 0.99) / scale]\n  ];\n}\n\nexport function getQuadkeyPolygon(quadkey) {\n  const [topLeft, bottomRight] = quadkeyToWorldBounds(quadkey);\n  const [w, n] = worldToLngLat(topLeft);\n  const [e, s] = worldToLngLat(bottomRight);\n  return [e, n, e, s, w, s, w, n, e, n];\n}\n"]},"metadata":{},"sourceType":"module"}