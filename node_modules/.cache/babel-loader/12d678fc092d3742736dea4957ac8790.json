{"ast":null,"code":"import _objectSpread from\"/Users/tomasehrenfeld/projs/se-team/tomas/react-apps/custom_filter/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _slicedToArray from\"/Users/tomasehrenfeld/projs/se-team/tomas/react-apps/custom_filter/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState,useEffect,useCallback}from'react';import{useSelector,useDispatch}from'react-redux';import{addFilter,removeFilter}from'@carto/react-redux';import{WrapperWidgetUI,CategoryWidgetUI,NoDataAlert}from'@carto/react-ui';import{_FilterTypes as FilterTypes,AggregationTypes}from'@carto/react-core';import{getCategories}from'@carto/react-widgets';import{useSourceFilters}from'@carto/react-widgets';import{selectAreFeaturesReadyForSource}from'@carto/react-redux/';import{useWidgetFilterValues}from'./useWidgetFilterValues';import{jsx as _jsx}from\"react/jsx-runtime\";var EMPTY_ARRAY=[];/**\n * Renders a <CustomCategoryWidget /> component\n * @param  {object} props\n * @param  {string} props.id - ID for the widget instance.\n * @param  {string} props.title - Title to show in the widget header.\n * @param  {string} props.dataSource - ID of the data source to get the data from.\n * @param  {string} props.column - Name of the data source's column to get the data from.\n * @param  {string} [props.operationColumn] - Name of the data source's column to operate with. If not defined it will default to the one defined in `column`.\n * @param  {string} props.operation - Operation to apply to the operationColumn. Must be one of those defined in `AggregationTypes` object.\n * @param  {Function} [props.formatter] - Function to format each value returned.\n * @param  {Object} [props.labels] - Overwrite category labels.\n * @param  {boolean} [props.animation] - Enable/disable widget animations on data updates. Enabled by default.\n * @param  {boolean} [props.filterable] - Enable/disable widget filtering capabilities. Enabled by default.\n * @param  {boolean} [props.searchable] - Enable/disable widget searching capabilities. Enabled by default.\n * @param  {Function} [props.onError] - Function to handle error messages from the widget.\n * @param  {Object} [props.wrapperProps] - Extra props to pass to [WrapperWidgetUI](https://storybook-react.carto.com/?path=/docs/widgets-wrapperwidgetui--default)\n * @param  {Object} [props.noDataAlertProps] - Extra props to pass to [NoDataAlert]()\n * @param {Array} [props.otherSources] - Extra sources to filter based on the main source.\n */function CustomCategoryWidget(props){var id=props.id,title=props.title,dataSource=props.dataSource,column=props.column,operationColumn=props.operationColumn,operation=props.operation,formatter=props.formatter,labels=props.labels,animation=props.animation,filterable=props.filterable,searchable=props.searchable,onError=props.onError,wrapperProps=props.wrapperProps,noDataAlertProps=props.noDataAlertProps,otherSources=props.otherSources;var dispatch=useDispatch();var isSourceReady=useSelector(function(state){return selectAreFeaturesReadyForSource(state,dataSource);}// bool should\n);var _useState=useState([]),_useState2=_slicedToArray(_useState,2),categoryData=_useState2[0],setCategoryData=_useState2[1];var _useState3=useState(true),_useState4=_slicedToArray(_useState3,2),isLoading=_useState4[0],setIsLoading=_useState4[1];var filters=useSourceFilters({dataSource:dataSource,id:id});var selectedCategories=useWidgetFilterValues({dataSource:dataSource,id:id,column:column,type:FilterTypes.IN})||EMPTY_ARRAY;useEffect(function(){setIsLoading(true);if(isSourceReady){getCategories({column:column,operationColumn:operationColumn,operation:operation,filters:filters,dataSource:dataSource}).then(function(data){if(data){setIsLoading(false);setCategoryData(data);}}).catch(function(error){setIsLoading(false);if(onError)onError(error);});}},[id,column,operationColumn,operation,filters,dataSource,setIsLoading,onError,isSourceReady]);var handleSelectedCategoriesChange=useCallback(function(categories){if(categories&&categories.length){dispatch(addFilter({id:dataSource,column:column,type:FilterTypes.IN,values:categories,owner:id}));otherSources.forEach(function(e){dispatch(addFilter({id:e.id,column:e.column,type:FilterTypes.IN,values:categories,owner:id}));});}else{dispatch(removeFilter({id:dataSource,column:column}));otherSources.forEach(function(e){dispatch(removeFilter({id:e.id,column:e.column}));});}},[column,dataSource,id,dispatch]);return/*#__PURE__*/_jsx(WrapperWidgetUI,_objectSpread(_objectSpread({title:title,isLoading:isLoading},wrapperProps),{},{children:categoryData.length||isLoading?/*#__PURE__*/_jsx(CategoryWidgetUI,{data:categoryData,formatter:formatter,labels:labels,selectedCategories:selectedCategories,onSelectedCategoriesChange:handleSelectedCategoriesChange,animation:animation,filterable:filterable,searchable:searchable}):/*#__PURE__*/_jsx(NoDataAlert,_objectSpread({},noDataAlertProps))}));}CustomCategoryWidget.defaultProps={labels:{},animation:true,filterable:true,searchable:true,wrapperProps:{},noDataAlertProps:{}};export default CustomCategoryWidget;","map":{"version":3,"names":["React","useState","useEffect","useCallback","useSelector","useDispatch","addFilter","removeFilter","WrapperWidgetUI","CategoryWidgetUI","NoDataAlert","_FilterTypes","FilterTypes","AggregationTypes","getCategories","useSourceFilters","selectAreFeaturesReadyForSource","useWidgetFilterValues","EMPTY_ARRAY","CustomCategoryWidget","props","id","title","dataSource","column","operationColumn","operation","formatter","labels","animation","filterable","searchable","onError","wrapperProps","noDataAlertProps","otherSources","dispatch","isSourceReady","state","categoryData","setCategoryData","isLoading","setIsLoading","filters","selectedCategories","type","IN","then","data","catch","error","handleSelectedCategoriesChange","categories","length","values","owner","forEach","e","defaultProps"],"sources":["/Users/tomasehrenfeld/projs/se-team/tomas/react-apps/custom_filter/src/components/widgets/CustomCategoryWidget.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { addFilter, removeFilter } from '@carto/react-redux';\nimport { WrapperWidgetUI, CategoryWidgetUI, NoDataAlert } from '@carto/react-ui';\nimport { _FilterTypes as FilterTypes, AggregationTypes } from '@carto/react-core';\nimport { getCategories } from '@carto/react-widgets';\nimport { useSourceFilters } from '@carto/react-widgets';\nimport { selectAreFeaturesReadyForSource } from '@carto/react-redux/';\nimport { useWidgetFilterValues } from './useWidgetFilterValues';\n\nconst EMPTY_ARRAY = [];\n\n/**\n * Renders a <CustomCategoryWidget /> component\n * @param  {object} props\n * @param  {string} props.id - ID for the widget instance.\n * @param  {string} props.title - Title to show in the widget header.\n * @param  {string} props.dataSource - ID of the data source to get the data from.\n * @param  {string} props.column - Name of the data source's column to get the data from.\n * @param  {string} [props.operationColumn] - Name of the data source's column to operate with. If not defined it will default to the one defined in `column`.\n * @param  {string} props.operation - Operation to apply to the operationColumn. Must be one of those defined in `AggregationTypes` object.\n * @param  {Function} [props.formatter] - Function to format each value returned.\n * @param  {Object} [props.labels] - Overwrite category labels.\n * @param  {boolean} [props.animation] - Enable/disable widget animations on data updates. Enabled by default.\n * @param  {boolean} [props.filterable] - Enable/disable widget filtering capabilities. Enabled by default.\n * @param  {boolean} [props.searchable] - Enable/disable widget searching capabilities. Enabled by default.\n * @param  {Function} [props.onError] - Function to handle error messages from the widget.\n * @param  {Object} [props.wrapperProps] - Extra props to pass to [WrapperWidgetUI](https://storybook-react.carto.com/?path=/docs/widgets-wrapperwidgetui--default)\n * @param  {Object} [props.noDataAlertProps] - Extra props to pass to [NoDataAlert]()\n * @param {Array} [props.otherSources] - Extra sources to filter based on the main source.\n */\nfunction CustomCategoryWidget(props) {\n  const {\n    id,\n    title,\n    dataSource,\n    column,\n    operationColumn,\n    operation,\n    formatter,\n    labels,\n    animation,\n    filterable,\n    searchable,\n    onError,\n    wrapperProps,\n    noDataAlertProps,\n    otherSources,\n  } = props;\n  const dispatch = useDispatch();\n  const isSourceReady = useSelector(\n    (state) => selectAreFeaturesReadyForSource(state, dataSource)\n    // bool should\n  );\n\n  const [categoryData, setCategoryData] = useState([]);\n\n  const [isLoading, setIsLoading] = useState(true);\n\n  const filters = useSourceFilters({ dataSource, id });\n  const selectedCategories =\n    useWidgetFilterValues({ dataSource, id, column, type: FilterTypes.IN }) ||\n    EMPTY_ARRAY;\n\n  useEffect(() => {\n    setIsLoading(true);\n\n    if (isSourceReady) {\n      getCategories({\n        column,\n        operationColumn,\n        operation,\n        filters,\n        dataSource,\n      })\n        .then((data) => {\n          if (data) {\n            setIsLoading(false);\n            setCategoryData(data);\n          }\n        })\n        .catch((error) => {\n          setIsLoading(false);\n          if (onError) onError(error);\n        });\n    }\n  }, [\n    id,\n    column,\n    operationColumn,\n    operation,\n    filters,\n    dataSource,\n    setIsLoading,\n    onError,\n    isSourceReady,\n  ]);\n\n  const handleSelectedCategoriesChange = useCallback(\n    (categories) => {\n      if (categories && categories.length) {\n        dispatch(\n          addFilter({\n            id: dataSource,\n            column,\n            type: FilterTypes.IN,\n            values: categories,\n            owner: id,\n          })\n        );\n        otherSources.forEach((e) => {\n          dispatch(\n            addFilter({\n              id: e.id,\n              column: e.column,\n              type: FilterTypes.IN,\n              values: categories,\n              owner: id,\n            })\n          );\n        });\n      } else {\n        dispatch(\n          removeFilter({\n            id: dataSource,\n            column,\n          })\n        );\n        otherSources.forEach((e) => {\n          dispatch(\n            removeFilter({\n              id: e.id,\n              column: e.column,\n            })\n          );\n        });\n      }\n    },\n    [column, dataSource, id, dispatch]\n  );\n\n  return (\n    <WrapperWidgetUI title={title} isLoading={isLoading} {...wrapperProps}>\n      {categoryData.length || isLoading ? (\n        <CategoryWidgetUI\n          data={categoryData}\n          formatter={formatter}\n          labels={labels}\n          selectedCategories={selectedCategories}\n          onSelectedCategoriesChange={handleSelectedCategoriesChange}\n          animation={animation}\n          filterable={filterable}\n          searchable={searchable}\n        />\n      ) : (\n        <NoDataAlert {...noDataAlertProps} />\n      )}\n    </WrapperWidgetUI>\n  );\n}\n\nCustomCategoryWidget.propTypes = {\n  id: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  dataSource: PropTypes.string.isRequired,\n  column: PropTypes.string.isRequired,\n  operationColumn: PropTypes.string,\n  operation: PropTypes.oneOf(Object.values(AggregationTypes)).isRequired,\n  formatter: PropTypes.func,\n  labels: PropTypes.object,\n  animation: PropTypes.bool,\n  filterable: PropTypes.bool,\n  searchable: PropTypes.bool,\n  onError: PropTypes.func,\n  wrapperProps: PropTypes.object,\n  noDataAlertProps: PropTypes.object,\n};\n\nCustomCategoryWidget.defaultProps = {\n  labels: {},\n  animation: true,\n  filterable: true,\n  searchable: true,\n  wrapperProps: {},\n  noDataAlertProps: {},\n};\n\nexport default CustomCategoryWidget;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}