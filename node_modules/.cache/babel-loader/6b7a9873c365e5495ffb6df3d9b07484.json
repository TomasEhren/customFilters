{"ast":null,"code":"import{useEffect}from'react';import popAggSource from'data/sources/popAggSource';import{POP_AGG_LAYER_ID}from'components/layers/PopAggLayer';import populationSource from'data/sources/populationSource';import{POPULATION_LAYER_ID}from'components/layers/PopulationLayer';import countiesSource from'data/sources/countiesSource';import{COUNTIES_LAYER_ID}from'components/layers/CountiesLayer';import{useDispatch}from'react-redux';import{addLayer,removeLayer,addSource,removeSource}from'@carto/react-redux';import{makeStyles}from'@material-ui/core/styles';import{Grid}from'@material-ui/core';//import { CategoryWidget } from '@carto/react-widgets';\nimport{AggregationTypes}from'@carto/react-core';import CustomCategoryWidget from'components/widgets/CustomCategoryWidget';import{FormulaWidget}from'@carto/react-widgets';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var useStyles=makeStyles(function(){return{filters:{}};});export default function Filters(){var dispatch=useDispatch();var classes=useStyles();useEffect(function(){dispatch(addSource(populationSource));dispatch(addLayer({id:POPULATION_LAYER_ID,source:populationSource.id}));return function(){dispatch(removeLayer(POPULATION_LAYER_ID));dispatch(removeSource(populationSource.id));};},[dispatch]);useEffect(function(){dispatch(addSource(countiesSource));dispatch(addLayer({id:COUNTIES_LAYER_ID,source:countiesSource.id}));return function(){dispatch(removeLayer(COUNTIES_LAYER_ID));dispatch(removeSource(countiesSource.id));};},[dispatch]);useEffect(function(){dispatch(addSource(popAggSource));dispatch(addLayer({id:POP_AGG_LAYER_ID,source:popAggSource.id}));return function(){dispatch(removeLayer(POP_AGG_LAYER_ID));dispatch(removeSource(popAggSource.id));};},[dispatch]);// [hygen] Add useEffect\nvar CustomFormatter=function CustomFormatter(value){var formatted=value>1e6?\"\".concat(Math.round(value/1e6,2),\" M\"):value>1e3?\"\".concat(Math.round(value/1e3,2),\" k\"):\"\".concat(value);return formatted;};return/*#__PURE__*/_jsx(Grid,{container:true,direction:\"column\",className:classes.filters,children:/*#__PURE__*/_jsxs(Grid,{item:true,children:[/*#__PURE__*/_jsx(FormulaWidget,{id:\"totPop\",title:\"Total Population\",dataSource:popAggSource.id,column:\"aggregated_total\",operation:AggregationTypes.SUM,formatter:function formatter(v){return CustomFormatter(v);},onError:console.error}),/*#__PURE__*/_jsx(CustomCategoryWidget,{id:\"stateCategory\",title:\"State Name\",dataSource:countiesSource.id,column:\"state\",operation:AggregationTypes.COUNT,onError:console.error,otherSources:[{id:populationSource.id,column:'state'},{id:popAggSource.id,column:'state'}]}),/*#__PURE__*/_jsx(CustomCategoryWidget,{id:\"countyCategory\",title:\"County Name\",dataSource:countiesSource.id,column:\"county\",operation:AggregationTypes.COUNT,onError:console.error,otherSources:[{id:populationSource.id,column:'county'},{id:popAggSource.id,column:'county'}]})]})});}","map":{"version":3,"names":["useEffect","popAggSource","POP_AGG_LAYER_ID","populationSource","POPULATION_LAYER_ID","countiesSource","COUNTIES_LAYER_ID","useDispatch","addLayer","removeLayer","addSource","removeSource","makeStyles","Grid","AggregationTypes","CustomCategoryWidget","FormulaWidget","useStyles","filters","Filters","dispatch","classes","id","source","CustomFormatter","value","formatted","Math","round","SUM","v","console","error","COUNT","column"],"sources":["/Users/tomasehrenfeld/projs/se-team/tomas/react-apps/custom_filter/src/components/views/Filters.js"],"sourcesContent":["import { useEffect } from 'react';\nimport popAggSource from 'data/sources/popAggSource';\nimport { POP_AGG_LAYER_ID } from 'components/layers/PopAggLayer';\nimport populationSource from 'data/sources/populationSource';\nimport { POPULATION_LAYER_ID } from 'components/layers/PopulationLayer';\nimport countiesSource from 'data/sources/countiesSource';\nimport { COUNTIES_LAYER_ID } from 'components/layers/CountiesLayer';\nimport { useDispatch } from 'react-redux';\nimport { addLayer, removeLayer, addSource, removeSource } from '@carto/react-redux';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Grid } from '@material-ui/core';\n\n//import { CategoryWidget } from '@carto/react-widgets';\nimport { AggregationTypes } from '@carto/react-core';\n\nimport CustomCategoryWidget from 'components/widgets/CustomCategoryWidget';\nimport { FormulaWidget } from '@carto/react-widgets';\n\nconst useStyles = makeStyles(() => ({\n  filters: {},\n}));\n\nexport default function Filters() {\n  const dispatch = useDispatch();\n  const classes = useStyles();\n\n  useEffect(() => {\n    dispatch(addSource(populationSource));\n\n    dispatch(\n      addLayer({\n        id: POPULATION_LAYER_ID,\n        source: populationSource.id,\n      })\n    );\n\n    return () => {\n      dispatch(removeLayer(POPULATION_LAYER_ID));\n      dispatch(removeSource(populationSource.id));\n    };\n  }, [dispatch]);\n\n  useEffect(() => {\n    dispatch(addSource(countiesSource));\n\n    dispatch(\n      addLayer({\n        id: COUNTIES_LAYER_ID,\n        source: countiesSource.id,\n      })\n    );\n\n    return () => {\n      dispatch(removeLayer(COUNTIES_LAYER_ID));\n      dispatch(removeSource(countiesSource.id));\n    };\n  }, [dispatch]);\n\n  useEffect(() => {\n    dispatch(addSource(popAggSource));\n\n    dispatch(\n      addLayer({\n        id: POP_AGG_LAYER_ID,\n        source: popAggSource.id,\n      })\n    );\n\n    return () => {\n      dispatch(removeLayer(POP_AGG_LAYER_ID));\n      dispatch(removeSource(popAggSource.id));\n    };\n  }, [dispatch]);\n\n  // [hygen] Add useEffect\n  const CustomFormatter = (value) => {\n    const formatted =\n      value > 1e6\n        ? `${Math.round(value / 1e6, 2)} M`\n        : value > 1e3\n        ? `${Math.round(value / 1e3, 2)} k`\n        : `${value}`;\n    return formatted;\n  };\n  return (\n    <Grid container direction='column' className={classes.filters}>\n      <Grid item>\n        <FormulaWidget\n          id='totPop'\n          title='Total Population'\n          dataSource={popAggSource.id}\n          column='aggregated_total'\n          operation={AggregationTypes.SUM}\n          formatter={(v) => CustomFormatter(v)}\n          onError={console.error}\n        />\n        <CustomCategoryWidget\n          id='stateCategory'\n          title='State Name'\n          dataSource={countiesSource.id}\n          column='state'\n          operation={AggregationTypes.COUNT}\n          onError={console.error}\n          otherSources={[\n            { id: populationSource.id, column: 'state' },\n            { id: popAggSource.id, column: 'state' },\n          ]}\n        />\n        <CustomCategoryWidget\n          id='countyCategory'\n          title='County Name'\n          dataSource={countiesSource.id}\n          column='county'\n          operation={AggregationTypes.COUNT}\n          onError={console.error}\n          otherSources={[\n            { id: populationSource.id, column: 'county' },\n            { id: popAggSource.id, column: 'county' },\n          ]}\n        />\n      </Grid>\n    </Grid>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}