{"ast":null,"code":"import { resolvePath } from '@loaders.gl/loader-utils';\nimport { makeResponse } from '../utils/response-utils';\nexport async function fetchFile(url, options) {\n  if (typeof url === 'string') {\n    url = resolvePath(url);\n    let fetchOptions = options;\n\n    if (options !== null && options !== void 0 && options.fetch && typeof (options === null || options === void 0 ? void 0 : options.fetch) !== 'function') {\n      fetchOptions = options.fetch;\n    }\n\n    return await fetch(url, fetchOptions);\n  }\n\n  return await makeResponse(url);\n}","map":{"version":3,"mappings":"AAAA,SAAQA,WAAR,QAA0B,0BAA1B;AACA,SAAQC,YAAR,QAA2B,yBAA3B;AAYA,OAAO,eAAeC,SAAf,CACLC,GADK,EAELC,OAFK,EAGc;EACnB,IAAI,OAAOD,GAAP,KAAe,QAAnB,EAA6B;IAC3BA,GAAG,GAAGH,WAAW,CAACG,GAAD,CAAjBA;IAEA,IAAIE,YAAyB,GAAGD,OAAhC;;IACA,IAAIA,OAAO,SAAPA,WAAO,WAAPA,WAAO,CAAEE,KAATF,IAAkB,QAAOA,OAAP,SAAOA,WAAP,WAAOA,GAAP,MAAOA,UAAO,CAAEE,KAAhB,MAA0B,UAAhD,EAA4D;MAC1DD,YAAY,GAAGD,OAAO,CAACE,KAAvBD;IACD;;IAED,OAAO,MAAMC,KAAK,CAACH,GAAD,EAAME,YAAN,CAAlB;EACD;;EAED,OAAO,MAAMJ,YAAY,CAACE,GAAD,CAAzB;AACD","names":["resolvePath","makeResponse","fetchFile","url","options","fetchOptions","fetch"],"sources":["../../../../src/lib/fetch/fetch-file.ts"],"sourcesContent":["import {resolvePath} from '@loaders.gl/loader-utils';\nimport {makeResponse} from '../utils/response-utils';\n// import {getErrorMessageFromResponse} from './fetch-error-message';\n\n/**\n * fetch compatible function\n * Reads file data from:\n * - http/http urls\n * - data urls\n * - File/Blob objects\n * Leverages `@loaders.gl/polyfills` for Node.js support\n * Respects pathPrefix and file aliases\n */\nexport async function fetchFile(\n  url: string | Blob,\n  options?: RequestInit & {fetch?: RequestInit | Function}\n): Promise<Response> {\n  if (typeof url === 'string') {\n    url = resolvePath(url);\n\n    let fetchOptions: RequestInit = options as RequestInit;\n    if (options?.fetch && typeof options?.fetch !== 'function') {\n      fetchOptions = options.fetch;\n    }\n\n    return await fetch(url, fetchOptions);\n  }\n\n  return await makeResponse(url);\n}\n"]},"metadata":{},"sourceType":"module"}