{"ast":null,"code":"import _objectSpread from \"/Users/tomasehrenfeld/projs/se-team/tomas/react-apps/custom_filter/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _classCallCheck from \"/Users/tomasehrenfeld/projs/se-team/tomas/react-apps/custom_filter/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/tomasehrenfeld/projs/se-team/tomas/react-apps/custom_filter/node_modules/@babel/runtime/helpers/esm/createClass.js\";\n\nfunction noop() {}\n\nvar DEFAULT_SETTINGS = {\n  onStart: noop,\n  onUpdate: noop,\n  onInterrupt: noop,\n  onEnd: noop\n};\n\nvar Transition = /*#__PURE__*/function () {\n  function Transition(timeline) {\n    _classCallCheck(this, Transition);\n\n    this._inProgress = false;\n    this._handle = null;\n    this.timeline = timeline;\n    this.settings = {};\n  }\n\n  _createClass(Transition, [{\n    key: \"inProgress\",\n    get: function get() {\n      return this._inProgress;\n    }\n  }, {\n    key: \"start\",\n    value: function start(props) {\n      this.cancel();\n      this.settings = _objectSpread(_objectSpread({}, DEFAULT_SETTINGS), props);\n      this._inProgress = true;\n      this.settings.onStart(this);\n    }\n  }, {\n    key: \"end\",\n    value: function end() {\n      if (this._inProgress) {\n        this.timeline.removeChannel(this._handle);\n        this._handle = null;\n        this._inProgress = false;\n        this.settings.onEnd(this);\n      }\n    }\n  }, {\n    key: \"cancel\",\n    value: function cancel() {\n      if (this._inProgress) {\n        this.settings.onInterrupt(this);\n        this.timeline.removeChannel(this._handle);\n        this._handle = null;\n        this._inProgress = false;\n      }\n    }\n  }, {\n    key: \"update\",\n    value: function update() {\n      if (!this._inProgress) {\n        return false;\n      }\n\n      if (this._handle === null) {\n        var timeline = this.timeline,\n            settings = this.settings;\n        this._handle = timeline.addChannel({\n          delay: timeline.getTime(),\n          duration: settings.duration\n        });\n      }\n\n      this.time = this.timeline.getTime(this._handle);\n\n      this._onUpdate();\n\n      this.settings.onUpdate(this);\n\n      if (this.timeline.isFinished(this._handle)) {\n        this.end();\n      }\n\n      return true;\n    }\n  }, {\n    key: \"_onUpdate\",\n    value: function _onUpdate() {}\n  }]);\n\n  return Transition;\n}();\n\nexport { Transition as default };","map":{"version":3,"mappings":";;;;AAAA,SAASA,IAAT,GAAgB,CAAE;;AAElB,IAAMC,gBAAgB,GAAG;EACvBC,OAAO,EAAEF,IADc;EAEvBG,QAAQ,EAAEH,IAFa;EAGvBI,WAAW,EAAEJ,IAHU;EAIvBK,KAAK,EAAEL;AAJgB,CAAzB;;IAOqBM,U;EAInBC,oBAAYC,QAAZD,EAAsB;IAAA;;IACpB,KAAKE,WAAL,GAAmB,KAAnB;IACA,KAAKC,OAAL,GAAe,IAAf;IACA,KAAKF,QAAL,GAAgBA,QAAhB;IAGA,KAAKG,QAAL,GAAgB,EAAhB;EACD;;;;SAGa,eAAG;MACf,OAAO,KAAKF,WAAZ;IACD;;;WAMDG,eAAMC,KAAND,EAAa;MACX,KAAKE,MAAL;MACA,KAAKH,QAAL,mCAAoBV,gBAApB,GAAyCY,KAAzC;MACA,KAAKJ,WAAL,GAAmB,IAAnB;MACA,KAAKE,QAAL,CAAcT,OAAd,CAAsB,IAAtB;IACD;;;WAKDa,eAAM;MACJ,IAAI,KAAKN,WAAT,EAAsB;QACpB,KAAKD,QAAL,CAAcQ,aAAd,CAA4B,KAAKN,OAAjC;QACA,KAAKA,OAAL,GAAe,IAAf;QACA,KAAKD,WAAL,GAAmB,KAAnB;QACA,KAAKE,QAAL,CAAcN,KAAd,CAAoB,IAApB;MACD;IACF;;;WAKDS,kBAAS;MACP,IAAI,KAAKL,WAAT,EAAsB;QACpB,KAAKE,QAAL,CAAcP,WAAd,CAA0B,IAA1B;QACA,KAAKI,QAAL,CAAcQ,aAAd,CAA4B,KAAKN,OAAjC;QACA,KAAKA,OAAL,GAAe,IAAf;QACA,KAAKD,WAAL,GAAmB,KAAnB;MACD;IACF;;;WAKDQ,kBAAS;MACP,IAAI,CAAC,KAAKR,WAAV,EAAuB;QACrB,OAAO,KAAP;MACD;;MAMD,IAAI,KAAKC,OAAL,KAAiB,IAArB,EAA2B;QACzB,IAAOF,QAAP,GAA6B,IAA7B,CAAOA,QAAP;QAAA,IAAiBG,QAAjB,GAA6B,IAA7B,CAAiBA,QAAjB;QACA,KAAKD,OAAL,GAAeF,QAAQ,CAACU,UAATV,CAAoB;UACjCW,KAAK,EAAEX,QAAQ,CAACY,OAATZ,EAD0B;UAEjCa,QAAQ,EAAEV,QAAQ,CAACU;QAFc,CAApBb,CAAf;MAID;;MAED,KAAKc,IAAL,GAAY,KAAKd,QAAL,CAAcY,OAAd,CAAsB,KAAKV,OAA3B,CAAZ;;MAEA,KAAKa,SAAL;;MAEA,KAAKZ,QAAL,CAAcR,QAAd,CAAuB,IAAvB;;MAIA,IAAI,KAAKK,QAAL,CAAcgB,UAAd,CAAyB,KAAKd,OAA9B,CAAJ,EAA4C;QAC1C,KAAKK,GAAL;MACD;;MACD,OAAO,IAAP;IACD;;;WAIDQ,qBAAY,CAEX;;;;;;SA3FkBjB,U","names":["noop","DEFAULT_SETTINGS","onStart","onUpdate","onInterrupt","onEnd","Transition","constructor","timeline","_inProgress","_handle","settings","start","props","cancel","end","removeChannel","update","addChannel","delay","getTime","duration","time","_onUpdate","isFinished"],"sources":["../../../src/transitions/transition.js"],"sourcesContent":["function noop() {}\n\nconst DEFAULT_SETTINGS = {\n  onStart: noop,\n  onUpdate: noop,\n  onInterrupt: noop,\n  onEnd: noop\n};\n\nexport default class Transition {\n  /**\n   * @params timeline {Timeline}\n   */\n  constructor(timeline) {\n    this._inProgress = false;\n    this._handle = null;\n    this.timeline = timeline;\n\n    // Defaults\n    this.settings = {};\n  }\n\n  /* Public API */\n  get inProgress() {\n    return this._inProgress;\n  }\n\n  /**\n   * (re)start this transition.\n   * @params props {object} - optional overriding props. see constructor\n   */\n  start(props) {\n    this.cancel();\n    this.settings = {...DEFAULT_SETTINGS, ...props};\n    this._inProgress = true;\n    this.settings.onStart(this);\n  }\n\n  /**\n   * end this transition if it is in progress.\n   */\n  end() {\n    if (this._inProgress) {\n      this.timeline.removeChannel(this._handle);\n      this._handle = null;\n      this._inProgress = false;\n      this.settings.onEnd(this);\n    }\n  }\n\n  /**\n   * cancel this transition if it is in progress.\n   */\n  cancel() {\n    if (this._inProgress) {\n      this.settings.onInterrupt(this);\n      this.timeline.removeChannel(this._handle);\n      this._handle = null;\n      this._inProgress = false;\n    }\n  }\n\n  /**\n   * update this transition. Returns `true` if updated.\n   */\n  update() {\n    if (!this._inProgress) {\n      return false;\n    }\n\n    // It is important to initialize the handle during `update` instead of `start`.\n    // The CPU time that the `start` frame takes should not be counted towards the duration.\n    // On the other hand, `update` always happens during a render cycle. The clock starts when the\n    // transition is rendered for the first time.\n    if (this._handle === null) {\n      const {timeline, settings} = this;\n      this._handle = timeline.addChannel({\n        delay: timeline.getTime(),\n        duration: settings.duration\n      });\n    }\n\n    this.time = this.timeline.getTime(this._handle);\n    // Call subclass method\n    this._onUpdate();\n    // Call user callback\n    this.settings.onUpdate(this);\n\n    // This only works if `settings.duration` is set\n    // Spring transition must call `end` manually\n    if (this.timeline.isFinished(this._handle)) {\n      this.end();\n    }\n    return true;\n  }\n\n  /* Private API */\n\n  _onUpdate() {\n    // for subclass override\n  }\n}\n"]},"metadata":{},"sourceType":"module"}