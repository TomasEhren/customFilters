{"ast":null,"code":"import { isBrowser, assert, resolvePath } from '@loaders.gl/loader-utils';\nimport { fs, toBuffer } from '@loaders.gl/loader-utils';\nexport async function writeFile(filePath, arrayBufferOrString, options) {\n  filePath = resolvePath(filePath);\n\n  if (!isBrowser) {\n    await fs.writeFile(filePath, toBuffer(arrayBufferOrString), {\n      flag: 'w'\n    });\n  }\n\n  assert(false);\n}\nexport function writeFileSync(filePath, arrayBufferOrString, options) {\n  filePath = resolvePath(filePath);\n\n  if (!isBrowser) {\n    fs.writeFileSync(filePath, toBuffer(arrayBufferOrString), {\n      flag: 'w'\n    });\n  }\n\n  assert(false);\n}","map":{"version":3,"mappings":"AACA,SAAQA,SAAR,EAAmBC,MAAnB,EAA2BC,WAA3B,QAA6C,0BAA7C;AACA,SAAQC,EAAR,EAAYC,QAAZ,QAA2B,0BAA3B;AAEA,OAAO,eAAeC,SAAf,CACLC,QADK,EAELC,mBAFK,EAGLC,OAHK,EAIU;EACfF,QAAQ,GAAGJ,WAAW,CAACI,QAAD,CAAtBA;;EACA,IAAI,CAACN,SAAL,EAAgB;IACd,MAAMG,EAAE,CAACE,SAAHF,CAAaG,QAAbH,EAAuBC,QAAQ,CAACG,mBAAD,CAA/BJ,EAAsD;MAACM,IAAI,EAAE;IAAP,CAAtDN,CAAN;EACD;;EACDF,MAAM,CAAC,KAAD,CAANA;AACD;AAED,OAAO,SAASS,aAAT,CACLJ,QADK,EAELC,mBAFK,EAGLC,OAHK,EAIC;EACNF,QAAQ,GAAGJ,WAAW,CAACI,QAAD,CAAtBA;;EACA,IAAI,CAACN,SAAL,EAAgB;IACdG,EAAE,CAACO,aAAHP,CAAiBG,QAAjBH,EAA2BC,QAAQ,CAACG,mBAAD,CAAnCJ,EAA0D;MAACM,IAAI,EAAE;IAAP,CAA1DN;EACD;;EACDF,MAAM,CAAC,KAAD,CAANA;AACD","names":["isBrowser","assert","resolvePath","fs","toBuffer","writeFile","filePath","arrayBufferOrString","options","flag","writeFileSync"],"sources":["../../../../src/lib/fetch/write-file.ts"],"sourcesContent":["// file write\nimport {isBrowser, assert, resolvePath} from '@loaders.gl/loader-utils';\nimport {fs, toBuffer} from '@loaders.gl/loader-utils';\n\nexport async function writeFile(\n  filePath: string,\n  arrayBufferOrString: ArrayBuffer | string,\n  options?\n): Promise<void> {\n  filePath = resolvePath(filePath);\n  if (!isBrowser) {\n    await fs.writeFile(filePath, toBuffer(arrayBufferOrString), {flag: 'w'});\n  }\n  assert(false);\n}\n\nexport function writeFileSync(\n  filePath: string,\n  arrayBufferOrString: ArrayBuffer | string,\n  options?\n): void {\n  filePath = resolvePath(filePath);\n  if (!isBrowser) {\n    fs.writeFileSync(filePath, toBuffer(arrayBufferOrString), {flag: 'w'});\n  }\n  assert(false);\n}\n"]},"metadata":{},"sourceType":"module"}