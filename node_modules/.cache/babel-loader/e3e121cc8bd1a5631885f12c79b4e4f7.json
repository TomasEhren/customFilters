{"ast":null,"code":"function noop() {}\n\nconst DEFAULT_SETTINGS = {\n  onStart: noop,\n  onUpdate: noop,\n  onInterrupt: noop,\n  onEnd: noop\n};\nexport default class Transition {\n  constructor(timeline) {\n    this._inProgress = false;\n    this._handle = null;\n    this.timeline = timeline;\n    this.settings = {};\n  }\n\n  get inProgress() {\n    return this._inProgress;\n  }\n\n  start(props) {\n    this.cancel();\n    this.settings = { ...DEFAULT_SETTINGS,\n      ...props\n    };\n    this._inProgress = true;\n    this.settings.onStart(this);\n  }\n\n  end() {\n    if (this._inProgress) {\n      this.timeline.removeChannel(this._handle);\n      this._handle = null;\n      this._inProgress = false;\n      this.settings.onEnd(this);\n    }\n  }\n\n  cancel() {\n    if (this._inProgress) {\n      this.settings.onInterrupt(this);\n      this.timeline.removeChannel(this._handle);\n      this._handle = null;\n      this._inProgress = false;\n    }\n  }\n\n  update() {\n    if (!this._inProgress) {\n      return false;\n    }\n\n    if (this._handle === null) {\n      const {\n        timeline,\n        settings\n      } = this;\n      this._handle = timeline.addChannel({\n        delay: timeline.getTime(),\n        duration: settings.duration\n      });\n    }\n\n    this.time = this.timeline.getTime(this._handle);\n\n    this._onUpdate();\n\n    this.settings.onUpdate(this);\n\n    if (this.timeline.isFinished(this._handle)) {\n      this.end();\n    }\n\n    return true;\n  }\n\n  _onUpdate() {}\n\n}","map":{"version":3,"mappings":"AAAA,SAASA,IAAT,GAAgB,CAAE;;AAElB,MAAMC,gBAAgB,GAAG;EACvBC,OAAO,EAAEF,IADc;EAEvBG,QAAQ,EAAEH,IAFa;EAGvBI,WAAW,EAAEJ,IAHU;EAIvBK,KAAK,EAAEL;AAJgB,CAAzB;AAOA,eAAe,MAAMM,UAAN,CAAiB;EAI9BC,WAAW,CAACC,QAAD,EAAW;IACpB,KAAKC,WAAL,GAAmB,KAAnB;IACA,KAAKC,OAAL,GAAe,IAAf;IACA,KAAKF,QAAL,GAAgBA,QAAhB;IAGA,KAAKG,QAAL,GAAgB,EAAhB;EACD;;EAGa,IAAVC,UAAU,GAAG;IACf,OAAO,KAAKH,WAAZ;EACD;;EAMDI,KAAK,CAACC,KAAD,EAAQ;IACX,KAAKC,MAAL;IACA,KAAKJ,QAAL,GAAgB,EAAC,GAAGV,gBAAJ;MAAsB,GAAGa;IAAzB,CAAhB;IACA,KAAKL,WAAL,GAAmB,IAAnB;IACA,KAAKE,QAAL,CAAcT,OAAd,CAAsB,IAAtB;EACD;;EAKDc,GAAG,GAAG;IACJ,IAAI,KAAKP,WAAT,EAAsB;MACpB,KAAKD,QAAL,CAAcS,aAAd,CAA4B,KAAKP,OAAjC;MACA,KAAKA,OAAL,GAAe,IAAf;MACA,KAAKD,WAAL,GAAmB,KAAnB;MACA,KAAKE,QAAL,CAAcN,KAAd,CAAoB,IAApB;IACD;EACF;;EAKDU,MAAM,GAAG;IACP,IAAI,KAAKN,WAAT,EAAsB;MACpB,KAAKE,QAAL,CAAcP,WAAd,CAA0B,IAA1B;MACA,KAAKI,QAAL,CAAcS,aAAd,CAA4B,KAAKP,OAAjC;MACA,KAAKA,OAAL,GAAe,IAAf;MACA,KAAKD,WAAL,GAAmB,KAAnB;IACD;EACF;;EAKDS,MAAM,GAAG;IACP,IAAI,CAAC,KAAKT,WAAV,EAAuB;MACrB,OAAO,KAAP;IACD;;IAMD,IAAI,KAAKC,OAAL,KAAiB,IAArB,EAA2B;MACzB,MAAM;QAACF,QAAD;QAAWG;MAAX,IAAuB,IAA7B;MACA,KAAKD,OAAL,GAAeF,QAAQ,CAACW,UAATX,CAAoB;QACjCY,KAAK,EAAEZ,QAAQ,CAACa,OAATb,EAD0B;QAEjCc,QAAQ,EAAEX,QAAQ,CAACW;MAFc,CAApBd,CAAf;IAID;;IAED,KAAKe,IAAL,GAAY,KAAKf,QAAL,CAAca,OAAd,CAAsB,KAAKX,OAA3B,CAAZ;;IAEA,KAAKc,SAAL;;IAEA,KAAKb,QAAL,CAAcR,QAAd,CAAuB,IAAvB;;IAIA,IAAI,KAAKK,QAAL,CAAciB,UAAd,CAAyB,KAAKf,OAA9B,CAAJ,EAA4C;MAC1C,KAAKM,GAAL;IACD;;IACD,OAAO,IAAP;EACD;;EAIDQ,SAAS,GAAG,CAEX;;AA3F6B","names":["noop","DEFAULT_SETTINGS","onStart","onUpdate","onInterrupt","onEnd","Transition","constructor","timeline","_inProgress","_handle","settings","inProgress","start","props","cancel","end","removeChannel","update","addChannel","delay","getTime","duration","time","_onUpdate","isFinished"],"sources":["../../../src/transitions/transition.js"],"sourcesContent":["function noop() {}\n\nconst DEFAULT_SETTINGS = {\n  onStart: noop,\n  onUpdate: noop,\n  onInterrupt: noop,\n  onEnd: noop\n};\n\nexport default class Transition {\n  /**\n   * @params timeline {Timeline}\n   */\n  constructor(timeline) {\n    this._inProgress = false;\n    this._handle = null;\n    this.timeline = timeline;\n\n    // Defaults\n    this.settings = {};\n  }\n\n  /* Public API */\n  get inProgress() {\n    return this._inProgress;\n  }\n\n  /**\n   * (re)start this transition.\n   * @params props {object} - optional overriding props. see constructor\n   */\n  start(props) {\n    this.cancel();\n    this.settings = {...DEFAULT_SETTINGS, ...props};\n    this._inProgress = true;\n    this.settings.onStart(this);\n  }\n\n  /**\n   * end this transition if it is in progress.\n   */\n  end() {\n    if (this._inProgress) {\n      this.timeline.removeChannel(this._handle);\n      this._handle = null;\n      this._inProgress = false;\n      this.settings.onEnd(this);\n    }\n  }\n\n  /**\n   * cancel this transition if it is in progress.\n   */\n  cancel() {\n    if (this._inProgress) {\n      this.settings.onInterrupt(this);\n      this.timeline.removeChannel(this._handle);\n      this._handle = null;\n      this._inProgress = false;\n    }\n  }\n\n  /**\n   * update this transition. Returns `true` if updated.\n   */\n  update() {\n    if (!this._inProgress) {\n      return false;\n    }\n\n    // It is important to initialize the handle during `update` instead of `start`.\n    // The CPU time that the `start` frame takes should not be counted towards the duration.\n    // On the other hand, `update` always happens during a render cycle. The clock starts when the\n    // transition is rendered for the first time.\n    if (this._handle === null) {\n      const {timeline, settings} = this;\n      this._handle = timeline.addChannel({\n        delay: timeline.getTime(),\n        duration: settings.duration\n      });\n    }\n\n    this.time = this.timeline.getTime(this._handle);\n    // Call subclass method\n    this._onUpdate();\n    // Call user callback\n    this.settings.onUpdate(this);\n\n    // This only works if `settings.duration` is set\n    // Spring transition must call `end` manually\n    if (this.timeline.isFinished(this._handle)) {\n      this.end();\n    }\n    return true;\n  }\n\n  /* Private API */\n\n  _onUpdate() {\n    // for subclass override\n  }\n}\n"]},"metadata":{},"sourceType":"module"}