{"ast":null,"code":"import _classCallCheck from \"/Users/tomasehrenfeld/projs/se-team/tomas/react-apps/custom_filter/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/tomasehrenfeld/projs/se-team/tomas/react-apps/custom_filter/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nvar defaultStyle = {\n  zIndex: 1,\n  position: 'absolute',\n  pointerEvents: 'none',\n  color: '#a0a7b4',\n  backgroundColor: '#29323c',\n  padding: '10px',\n  top: 0,\n  left: 0,\n  display: 'none'\n};\n\nvar Tooltip = /*#__PURE__*/function () {\n  function Tooltip(canvas) {\n    _classCallCheck(this, Tooltip);\n\n    var canvasParent = canvas.parentElement;\n\n    if (canvasParent) {\n      this.el = document.createElement('div');\n      this.el.className = 'deck-tooltip';\n      Object.assign(this.el.style, defaultStyle);\n      canvasParent.appendChild(this.el);\n    }\n\n    this.isVisible = false;\n  }\n\n  _createClass(Tooltip, [{\n    key: \"setTooltip\",\n    value: function setTooltip(displayInfo, x, y) {\n      var el = this.el;\n\n      if (typeof displayInfo === 'string') {\n        el.innerText = displayInfo;\n      } else if (!displayInfo) {\n        this.isVisible = false;\n        el.style.display = 'none';\n        return;\n      } else {\n        if ('text' in displayInfo) {\n          el.innerText = displayInfo.text;\n        }\n\n        if ('html' in displayInfo) {\n          el.innerHTML = displayInfo.html;\n        }\n\n        if ('className' in displayInfo) {\n          el.className = displayInfo.className;\n        }\n\n        Object.assign(el.style, displayInfo.style);\n      }\n\n      this.isVisible = true;\n      el.style.display = 'block';\n      el.style.transform = \"translate(\".concat(x, \"px, \").concat(y, \"px)\");\n    }\n  }, {\n    key: \"remove\",\n    value: function remove() {\n      if (this.el) {\n        this.el.remove();\n      }\n    }\n  }]);\n\n  return Tooltip;\n}();\n\nexport { Tooltip as default };","map":{"version":3,"mappings":";;AAqBA,IAAMA,YAAY,GAAG;EACnBC,MAAM,EAAE,CADW;EAEnBC,QAAQ,EAAE,UAFS;EAGnBC,aAAa,EAAE,MAHI;EAInBC,KAAK,EAAE,SAJY;EAKnBC,eAAe,EAAE,SALE;EAMnBC,OAAO,EAAE,MANU;EAOnBC,GAAG,EAAE,CAPc;EAQnBC,IAAI,EAAE,CARa;EASnBC,OAAO,EAAE;AATU,CAArB;;IAYqBC,O;EACnBC,iBAAYC,MAAZD,EAAoB;IAAA;;IAClB,IAAME,YAAY,GAAGD,MAAM,CAACE,aAA5B;;IAEA,IAAID,YAAJ,EAAkB;MAChB,KAAKE,EAAL,GAAUC,QAAQ,CAACC,aAATD,CAAuB,KAAvBA,CAAV;MACA,KAAKD,EAAL,CAAQG,SAAR,GAAoB,cAApB;MACAC,MAAM,CAACC,MAAPD,CAAc,KAAKJ,EAAL,CAAQM,KAAtBF,EAA6BnB,YAA7BmB;MACAN,YAAY,CAACS,WAAbT,CAAyB,KAAKE,EAA9BF;IACD;;IAED,KAAKU,SAAL,GAAiB,KAAjB;EACD;;;;WAEDC,oBAAWC,WAAXD,EAAwBE,CAAxBF,EAA2BG,CAA3BH,EAA8B;MAC5B,IAAMT,EAAE,GAAG,KAAKA,EAAhB;;MAEA,IAAI,OAAOU,WAAP,KAAuB,QAA3B,EAAqC;QACnCV,EAAE,CAACa,SAAHb,GAAeU,WAAfV;MADF,OAEO,IAAI,CAACU,WAAL,EAAkB;QACvB,KAAKF,SAAL,GAAiB,KAAjB;QACAR,EAAE,CAACM,KAAHN,CAASN,OAATM,GAAmB,MAAnBA;QACA;MAHK,OAIA;QACL,IAAI,UAAUU,WAAd,EAA2B;UACzBV,EAAE,CAACa,SAAHb,GAAeU,WAAW,CAACI,IAA3Bd;QACD;;QACD,IAAI,UAAUU,WAAd,EAA2B;UACzBV,EAAE,CAACe,SAAHf,GAAeU,WAAW,CAACM,IAA3BhB;QACD;;QACD,IAAI,eAAeU,WAAnB,EAAgC;UAC9BV,EAAE,CAACG,SAAHH,GAAeU,WAAW,CAACP,SAA3BH;QACD;;QACDI,MAAM,CAACC,MAAPD,CAAcJ,EAAE,CAACM,KAAjBF,EAAwBM,WAAW,CAACJ,KAApCF;MACD;;MACD,KAAKI,SAAL,GAAiB,IAAjB;MACAR,EAAE,CAACM,KAAHN,CAASN,OAATM,GAAmB,OAAnBA;MACAA,EAAE,CAACM,KAAHN,CAASiB,SAATjB,uBAAkCW,CAAlC,iBAA0CC,CAA1C;IACD;;;WAEDM,kBAAS;MACP,IAAI,KAAKlB,EAAT,EAAa;QACX,KAAKA,EAAL,CAAQkB,MAAR;MACD;IACF;;;;;;SA5CkBvB,O","names":["defaultStyle","zIndex","position","pointerEvents","color","backgroundColor","padding","top","left","display","Tooltip","constructor","canvas","canvasParent","parentElement","el","document","createElement","className","Object","assign","style","appendChild","isVisible","setTooltip","displayInfo","x","y","innerText","text","innerHTML","html","transform","remove"],"sources":["../../../src/lib/tooltip.js"],"sourcesContent":["// Copyright (c) 2015 - 2019 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n/* global document */\nconst defaultStyle = {\n  zIndex: 1,\n  position: 'absolute',\n  pointerEvents: 'none',\n  color: '#a0a7b4',\n  backgroundColor: '#29323c',\n  padding: '10px',\n  top: 0,\n  left: 0,\n  display: 'none'\n};\n\nexport default class Tooltip {\n  constructor(canvas) {\n    const canvasParent = canvas.parentElement;\n\n    if (canvasParent) {\n      this.el = document.createElement('div');\n      this.el.className = 'deck-tooltip';\n      Object.assign(this.el.style, defaultStyle);\n      canvasParent.appendChild(this.el);\n    }\n\n    this.isVisible = false;\n  }\n\n  setTooltip(displayInfo, x, y) {\n    const el = this.el;\n\n    if (typeof displayInfo === 'string') {\n      el.innerText = displayInfo;\n    } else if (!displayInfo) {\n      this.isVisible = false;\n      el.style.display = 'none';\n      return;\n    } else {\n      if ('text' in displayInfo) {\n        el.innerText = displayInfo.text;\n      }\n      if ('html' in displayInfo) {\n        el.innerHTML = displayInfo.html;\n      }\n      if ('className' in displayInfo) {\n        el.className = displayInfo.className;\n      }\n      Object.assign(el.style, displayInfo.style);\n    }\n    this.isVisible = true;\n    el.style.display = 'block';\n    el.style.transform = `translate(${x}px, ${y}px)`;\n  }\n\n  remove() {\n    if (this.el) {\n      this.el.remove();\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}