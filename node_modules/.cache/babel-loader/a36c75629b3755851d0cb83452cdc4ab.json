{"ast":null,"code":"import _createForOfIteratorHelper from \"/Users/tomasehrenfeld/projs/se-team/tomas/react-apps/custom_filter/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _objectSpread from \"/Users/tomasehrenfeld/projs/se-team/tomas/react-apps/custom_filter/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport { isPureObject, isObject } from '../../javascript-utils/is-type';\nimport { fetchFile } from '../fetch/fetch-file';\nimport { probeLog, NullLog } from './loggers';\nimport { DEFAULT_LOADER_OPTIONS, REMOVED_LOADER_OPTIONS } from './option-defaults';\nexport function getGlobalLoaderState() {\n  globalThis.loaders = globalThis.loaders || {};\n  var loaders = globalThis.loaders;\n  loaders._state = loaders._state || {};\n  return loaders._state;\n}\n\nvar getGlobalLoaderOptions = function getGlobalLoaderOptions() {\n  var state = getGlobalLoaderState();\n  state.globalOptions = state.globalOptions || _objectSpread({}, DEFAULT_LOADER_OPTIONS);\n  return state.globalOptions;\n};\n\nexport function setGlobalOptions(options) {\n  var state = getGlobalLoaderState();\n  var globalOptions = getGlobalLoaderOptions();\n  state.globalOptions = normalizeOptionsInternal(globalOptions, options);\n}\nexport function normalizeOptions(options, loader, loaders, url) {\n  loaders = loaders || [];\n  loaders = Array.isArray(loaders) ? loaders : [loaders];\n  validateOptions(options, loaders);\n  return normalizeOptionsInternal(loader, options, url);\n}\nexport function getFetchFunction(options, context) {\n  var globalOptions = getGlobalLoaderOptions();\n  var fetchOptions = options || globalOptions;\n\n  if (typeof fetchOptions.fetch === 'function') {\n    return fetchOptions.fetch;\n  }\n\n  if (isObject(fetchOptions.fetch)) {\n    return function (url) {\n      return fetchFile(url, fetchOptions);\n    };\n  }\n\n  if (context !== null && context !== void 0 && context.fetch) {\n    return context === null || context === void 0 ? void 0 : context.fetch;\n  }\n\n  return fetchFile;\n}\n\nfunction validateOptions(options, loaders) {\n  validateOptionsObject(options, null, DEFAULT_LOADER_OPTIONS, REMOVED_LOADER_OPTIONS, loaders);\n\n  var _iterator = _createForOfIteratorHelper(loaders),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var loader = _step.value;\n      var idOptions = options && options[loader.id] || {};\n      var loaderOptions = loader.options && loader.options[loader.id] || {};\n      var deprecatedOptions = loader.deprecatedOptions && loader.deprecatedOptions[loader.id] || {};\n      validateOptionsObject(idOptions, loader.id, loaderOptions, deprecatedOptions, loaders);\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n}\n\nfunction validateOptionsObject(options, id, defaultOptions, deprecatedOptions, loaders) {\n  var loaderName = id || 'Top level';\n  var prefix = id ? \"\".concat(id, \".\") : '';\n\n  for (var key in options) {\n    var isSubOptions = !id && isObject(options[key]);\n    var isBaseUriOption = key === 'baseUri' && !id;\n    var isWorkerUrlOption = key === 'workerUrl' && id;\n\n    if (!(key in defaultOptions) && !isBaseUriOption && !isWorkerUrlOption) {\n      if (key in deprecatedOptions) {\n        probeLog.warn(\"\".concat(loaderName, \" loader option '\").concat(prefix).concat(key, \"' no longer supported, use '\").concat(deprecatedOptions[key], \"'\"))();\n      } else if (!isSubOptions) {\n        var suggestion = findSimilarOption(key, loaders);\n        probeLog.warn(\"\".concat(loaderName, \" loader option '\").concat(prefix).concat(key, \"' not recognized. \").concat(suggestion))();\n      }\n    }\n  }\n}\n\nfunction findSimilarOption(optionKey, loaders) {\n  var lowerCaseOptionKey = optionKey.toLowerCase();\n  var bestSuggestion = '';\n\n  var _iterator2 = _createForOfIteratorHelper(loaders),\n      _step2;\n\n  try {\n    for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n      var loader = _step2.value;\n\n      for (var key in loader.options) {\n        if (optionKey === key) {\n          return \"Did you mean '\".concat(loader.id, \".\").concat(key, \"'?\");\n        }\n\n        var lowerCaseKey = key.toLowerCase();\n        var isPartialMatch = lowerCaseOptionKey.startsWith(lowerCaseKey) || lowerCaseKey.startsWith(lowerCaseOptionKey);\n\n        if (isPartialMatch) {\n          bestSuggestion = bestSuggestion || \"Did you mean '\".concat(loader.id, \".\").concat(key, \"'?\");\n        }\n      }\n    }\n  } catch (err) {\n    _iterator2.e(err);\n  } finally {\n    _iterator2.f();\n  }\n\n  return bestSuggestion;\n}\n\nfunction normalizeOptionsInternal(loader, options, url) {\n  var loaderDefaultOptions = loader.options || {};\n\n  var mergedOptions = _objectSpread({}, loaderDefaultOptions);\n\n  addUrlOptions(mergedOptions, url);\n\n  if (mergedOptions.log === null) {\n    mergedOptions.log = new NullLog();\n  }\n\n  mergeNestedFields(mergedOptions, getGlobalLoaderOptions());\n  mergeNestedFields(mergedOptions, options);\n  return mergedOptions;\n}\n\nfunction mergeNestedFields(mergedOptions, options) {\n  for (var key in options) {\n    if (key in options) {\n      var value = options[key];\n\n      if (isPureObject(value) && isPureObject(mergedOptions[key])) {\n        mergedOptions[key] = _objectSpread(_objectSpread({}, mergedOptions[key]), options[key]);\n      } else {\n        mergedOptions[key] = options[key];\n      }\n    }\n  }\n}\n\nfunction addUrlOptions(options, url) {\n  if (url && !('baseUri' in options)) {\n    options.baseUri = url;\n  }\n}","map":{"version":3,"mappings":"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","names":["isPureObject","isObject","fetchFile","probeLog","NullLog","DEFAULT_LOADER_OPTIONS","REMOVED_LOADER_OPTIONS","getGlobalLoaderState","globalThis","loaders","_state","getGlobalLoaderOptions","state","globalOptions","setGlobalOptions","options","normalizeOptionsInternal","normalizeOptions","loader","url","Array","isArray","validateOptions","getFetchFunction","context","fetchOptions","fetch","validateOptionsObject","idOptions","id","loaderOptions","deprecatedOptions","defaultOptions","loaderName","prefix","key","isSubOptions","isBaseUriOption","isWorkerUrlOption","warn","suggestion","findSimilarOption","optionKey","lowerCaseOptionKey","toLowerCase","bestSuggestion","lowerCaseKey","isPartialMatch","startsWith","loaderDefaultOptions","mergedOptions","addUrlOptions","log","mergeNestedFields","value","baseUri"],"sources":["../../../../src/lib/loader-utils/option-utils.ts"],"sourcesContent":["import type {Loader, LoaderContext, LoaderOptions} from '@loaders.gl/loader-utils';\nimport {isPureObject, isObject} from '../../javascript-utils/is-type';\nimport {fetchFile} from '../fetch/fetch-file';\nimport {probeLog, NullLog} from './loggers';\nimport {DEFAULT_LOADER_OPTIONS, REMOVED_LOADER_OPTIONS} from './option-defaults';\n/**\n * Global state for loaders.gl. Stored on `global.loaders._state`\n */\ntype GlobalLoaderState = {\n  loaderRegistry: Loader[];\n  globalOptions: {[key: string]: any};\n};\n\n/**\n * Helper for safely accessing global loaders.gl variables\n * Wraps initialization of global variable in function to defeat overly aggressive tree-shakers\n */\nexport function getGlobalLoaderState(): GlobalLoaderState {\n  // @ts-ignore\n  globalThis.loaders = globalThis.loaders || {};\n  // @ts-ignore\n  const {loaders} = globalThis;\n\n  // Add _state object to keep separate from modules added to globalThis.loaders\n  loaders._state = loaders._state || {};\n  return loaders._state;\n}\n\n// Store global loader options on the global object to increase chances of cross loaders-version interoperability\n// NOTE: This use case is not reliable but can help when testing new versions of loaders.gl with existing frameworks\nconst getGlobalLoaderOptions = () => {\n  const state = getGlobalLoaderState();\n  // Ensure all default loader options from this library are mentioned\n  state.globalOptions = state.globalOptions || {...DEFAULT_LOADER_OPTIONS};\n  return state.globalOptions;\n};\n\n/**\n * Set global loader options\n * @param options\n */\nexport function setGlobalOptions(options: object): void {\n  const state = getGlobalLoaderState();\n  const globalOptions = getGlobalLoaderOptions();\n  state.globalOptions = normalizeOptionsInternal(globalOptions, options);\n}\n\n/**\n * Merges options with global opts and loader defaults, also injects baseUri\n * @param options\n * @param loader\n * @param loaders\n * @param url\n */\nexport function normalizeOptions(\n  options: object,\n  loader: Loader,\n  loaders?: Loader[],\n  url?: string\n): object {\n  loaders = loaders || [];\n  loaders = Array.isArray(loaders) ? loaders : [loaders];\n\n  validateOptions(options, loaders);\n  return normalizeOptionsInternal(loader, options, url);\n}\n\n/**\n * Gets the current fetch function from options and context\n * @param options\n * @param context\n */\nexport function getFetchFunction(\n  options?: LoaderOptions,\n  context?: Omit<LoaderContext, 'fetch'> & Partial<Pick<LoaderContext, 'fetch'>>\n) {\n  const globalOptions = getGlobalLoaderOptions();\n\n  const fetchOptions = options || globalOptions;\n\n  // options.fetch can be a function\n  if (typeof fetchOptions.fetch === 'function') {\n    return fetchOptions.fetch;\n  }\n\n  // options.fetch can be an options object\n  if (isObject(fetchOptions.fetch)) {\n    return (url) => fetchFile(url, fetchOptions);\n  }\n\n  // else refer to context (from parent loader) if available\n  if (context?.fetch) {\n    return context?.fetch;\n  }\n\n  // else return the default fetch function\n  return fetchFile;\n}\n\n// VALIDATE OPTIONS\n\n/**\n * Warn for unsupported options\n * @param options\n * @param loaders\n */\nfunction validateOptions(options: LoaderOptions, loaders: Loader[]) {\n  // Check top level options\n  validateOptionsObject(options, null, DEFAULT_LOADER_OPTIONS, REMOVED_LOADER_OPTIONS, loaders);\n  for (const loader of loaders) {\n    // Get the scoped, loader specific options from the user supplied options\n    const idOptions = (options && options[loader.id]) || {};\n\n    // Get scoped, loader specific default and deprecated options from the selected loader\n    const loaderOptions = (loader.options && loader.options[loader.id]) || {};\n    const deprecatedOptions =\n      (loader.deprecatedOptions && loader.deprecatedOptions[loader.id]) || {};\n\n    // Validate loader specific options\n    validateOptionsObject(idOptions, loader.id, loaderOptions, deprecatedOptions, loaders);\n  }\n}\n\n// eslint-disable-next-line max-params, complexity\nfunction validateOptionsObject(\n  options,\n  id: string | null,\n  defaultOptions,\n  deprecatedOptions,\n  loaders: Loader[]\n) {\n  const loaderName = id || 'Top level';\n  const prefix = id ? `${id}.` : '';\n\n  for (const key in options) {\n    // If top level option value is an object it could options for a loader, so ignore\n    const isSubOptions = !id && isObject(options[key]);\n    const isBaseUriOption = key === 'baseUri' && !id;\n    const isWorkerUrlOption = key === 'workerUrl' && id;\n    // <loader>.workerUrl requires special handling as it is now auto-generated and no longer specified as a default option.\n    if (!(key in defaultOptions) && !isBaseUriOption && !isWorkerUrlOption) {\n      // Issue deprecation warnings\n      if (key in deprecatedOptions) {\n        probeLog.warn(\n          `${loaderName} loader option \\'${prefix}${key}\\' no longer supported, use \\'${deprecatedOptions[key]}\\'`\n        )();\n      } else if (!isSubOptions) {\n        const suggestion = findSimilarOption(key, loaders);\n        probeLog.warn(\n          `${loaderName} loader option \\'${prefix}${key}\\' not recognized. ${suggestion}`\n        )();\n      }\n    }\n  }\n}\n\nfunction findSimilarOption(optionKey, loaders) {\n  const lowerCaseOptionKey = optionKey.toLowerCase();\n  let bestSuggestion = '';\n  for (const loader of loaders) {\n    for (const key in loader.options) {\n      if (optionKey === key) {\n        return `Did you mean \\'${loader.id}.${key}\\'?`;\n      }\n      const lowerCaseKey = key.toLowerCase();\n      const isPartialMatch =\n        lowerCaseOptionKey.startsWith(lowerCaseKey) || lowerCaseKey.startsWith(lowerCaseOptionKey);\n      if (isPartialMatch) {\n        bestSuggestion = bestSuggestion || `Did you mean \\'${loader.id}.${key}\\'?`;\n      }\n    }\n  }\n  return bestSuggestion;\n}\n\nfunction normalizeOptionsInternal(loader, options, url?: string) {\n  const loaderDefaultOptions = loader.options || {};\n\n  const mergedOptions = {...loaderDefaultOptions};\n\n  addUrlOptions(mergedOptions, url);\n\n  // LOGGING: options.log can be set to `null` to defeat logging\n  if (mergedOptions.log === null) {\n    mergedOptions.log = new NullLog();\n  }\n\n  mergeNestedFields(mergedOptions, getGlobalLoaderOptions());\n  mergeNestedFields(mergedOptions, options);\n\n  return mergedOptions;\n}\n\n// Merge nested options objects\nfunction mergeNestedFields(mergedOptions, options) {\n  for (const key in options) {\n    // Check for nested options\n    // object in options => either no key in defaultOptions or object in defaultOptions\n    if (key in options) {\n      const value = options[key];\n      if (isPureObject(value) && isPureObject(mergedOptions[key])) {\n        mergedOptions[key] = {\n          ...mergedOptions[key],\n          ...options[key]\n        };\n      } else {\n        mergedOptions[key] = options[key];\n      }\n    }\n    // else: No need to merge nested opts, and the initial merge already copied over the nested options\n  }\n}\n\n// Harvest information from the url\n// TODO - baseUri should be a directory, i.e. remove file component from baseUri\n// TODO - extract extension?\n// TODO - extract query parameters?\n// TODO - should these be injected on context instead of options?\nfunction addUrlOptions(options, url?: string) {\n  if (url && !('baseUri' in options)) {\n    options.baseUri = url;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}