{"ast":null,"code":"import _objectSpread from\"/Users/tomasehrenfeld/projs/se-team/tomas/react-apps/custom_filter/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import{useSelector}from'react-redux';import{CartoLayer}from'@deck.gl/carto';import{selectSourceById}from'@carto/react-redux';import{useCartoLayerProps}from'@carto/react-api';import htmlForFeature from'utils/htmlForFeature';export var POP_AGG_LAYER_ID='popAggLayer';export default function PopAggLayer(){var _useSelector=useSelector(function(state){return state.carto.layers;}),popAggLayer=_useSelector.popAggLayer;var source=useSelector(function(state){return selectSourceById(state,popAggLayer===null||popAggLayer===void 0?void 0:popAggLayer.source);});var cartoLayerProps=useCartoLayerProps({source:source});if(popAggLayer&&source){return new CartoLayer(_objectSpread(_objectSpread({},cartoLayerProps),{},{id:POP_AGG_LAYER_ID,getFillColor:[241,109,122],pointRadiusMinPixels:2,getLineColor:[255,0,0],lineWidthMinPixels:1,pickable:true,visible:false,onHover:function onHover(info){if(info!==null&&info!==void 0&&info.object){info.object={html:htmlForFeature({feature:info.object}),style:{}};}}}));}}","map":{"version":3,"names":["useSelector","CartoLayer","selectSourceById","useCartoLayerProps","htmlForFeature","POP_AGG_LAYER_ID","PopAggLayer","state","carto","layers","popAggLayer","source","cartoLayerProps","id","getFillColor","pointRadiusMinPixels","getLineColor","lineWidthMinPixels","pickable","visible","onHover","info","object","html","feature","style"],"sources":["/Users/tomasehrenfeld/projs/se-team/tomas/react-apps/custom_filter/src/components/layers/PopAggLayer.js"],"sourcesContent":["import { useSelector } from 'react-redux';\nimport { CartoLayer } from '@deck.gl/carto';\nimport { selectSourceById } from '@carto/react-redux';\nimport { useCartoLayerProps } from '@carto/react-api';\nimport htmlForFeature from 'utils/htmlForFeature';\n\nexport const POP_AGG_LAYER_ID = 'popAggLayer';\n\nexport default function PopAggLayer() {\n  const { popAggLayer } = useSelector((state) => state.carto.layers);\n  const source = useSelector((state) => selectSourceById(state, popAggLayer?.source));\n  const cartoLayerProps = useCartoLayerProps({ source });\n\n  if (popAggLayer && source) {\n    return new CartoLayer({\n      ...cartoLayerProps,\n      id: POP_AGG_LAYER_ID,\n      getFillColor: [241, 109, 122],\n      pointRadiusMinPixels: 2,\n      getLineColor: [255, 0, 0],\n      lineWidthMinPixels: 1,\n      pickable: true,\n      visible: false,\n      onHover: (info) => {\n        if (info?.object) {\n          info.object = {\n            html: htmlForFeature({ feature: info.object }),\n            style: {},\n          };\n        }\n      },\n    });\n  }\n}\n"],"mappings":"uJAAA,OAASA,WAAT,KAA4B,aAA5B,CACA,OAASC,UAAT,KAA2B,gBAA3B,CACA,OAASC,gBAAT,KAAiC,oBAAjC,CACA,OAASC,kBAAT,KAAmC,kBAAnC,CACA,MAAOC,CAAAA,cAAP,KAA2B,sBAA3B,CAEA,MAAO,IAAMC,CAAAA,gBAAgB,CAAG,aAAzB,CAEP,cAAe,SAASC,CAAAA,WAAT,EAAuB,CACpC,iBAAwBN,WAAW,CAAC,SAACO,KAAD,QAAWA,CAAAA,KAAK,CAACC,KAAN,CAAYC,MAAvB,EAAD,CAAnC,CAAQC,WAAR,cAAQA,WAAR,CACA,GAAMC,CAAAA,MAAM,CAAGX,WAAW,CAAC,SAACO,KAAD,QAAWL,CAAAA,gBAAgB,CAACK,KAAD,CAAQG,WAAR,SAAQA,WAAR,iBAAQA,WAAW,CAAEC,MAArB,CAA3B,EAAD,CAA1B,CACA,GAAMC,CAAAA,eAAe,CAAGT,kBAAkB,CAAC,CAAEQ,MAAM,CAANA,MAAF,CAAD,CAA1C,CAEA,GAAID,WAAW,EAAIC,MAAnB,CAA2B,CACzB,MAAO,IAAIV,CAAAA,UAAJ,gCACFW,eADE,MAELC,EAAE,CAAER,gBAFC,CAGLS,YAAY,CAAE,CAAC,GAAD,CAAM,GAAN,CAAW,GAAX,CAHT,CAILC,oBAAoB,CAAE,CAJjB,CAKLC,YAAY,CAAE,CAAC,GAAD,CAAM,CAAN,CAAS,CAAT,CALT,CAMLC,kBAAkB,CAAE,CANf,CAOLC,QAAQ,CAAE,IAPL,CAQLC,OAAO,CAAE,KARJ,CASLC,OAAO,CAAE,iBAACC,IAAD,CAAU,CACjB,GAAIA,IAAJ,SAAIA,IAAJ,WAAIA,IAAI,CAAEC,MAAV,CAAkB,CAChBD,IAAI,CAACC,MAAL,CAAc,CACZC,IAAI,CAAEnB,cAAc,CAAC,CAAEoB,OAAO,CAAEH,IAAI,CAACC,MAAhB,CAAD,CADR,CAEZG,KAAK,CAAE,EAFK,CAAd,CAID,CACF,CAhBI,GAAP,CAkBD,CACF"},"metadata":{},"sourceType":"module"}