{"ast":null,"code":"import { GLType } from '@loaders.gl/math';\nimport { assert } from '@loaders.gl/loader-utils';\nconst COMPONENTS_PER_ATTRIBUTE = {\n  SCALAR: 1,\n  VEC2: 2,\n  VEC3: 3,\n  VEC4: 4,\n  MAT2: 4,\n  MAT3: 9,\n  MAT4: 16\n};\nconst UNPACKER = {\n  SCALAR: (values, i) => values[i],\n  VEC2: (values, i) => [values[2 * i + 0], values[2 * i + 1]],\n  VEC3: (values, i) => [values[3 * i + 0], values[3 * i + 1], values[3 * i + 2]],\n  VEC4: (values, i) => [values[4 * i + 0], values[4 * i + 1], values[4 * i + 2], values[4 * i + 3]],\n  MAT2: (values, i) => [values[4 * i + 0], values[4 * i + 1], values[4 * i + 2], values[4 * i + 3]],\n  MAT3: (values, i) => [values[9 * i + 0], values[9 * i + 1], values[9 * i + 2], values[9 * i + 3], values[9 * i + 4], values[9 * i + 5], values[9 * i + 6], values[9 * i + 7], values[9 * i + 8]],\n  MAT4: (values, i) => [values[16 * i + 0], values[16 * i + 1], values[16 * i + 2], values[16 * i + 3], values[16 * i + 4], values[16 * i + 5], values[16 * i + 6], values[16 * i + 7], values[16 * i + 8], values[16 * i + 9], values[16 * i + 10], values[16 * i + 11], values[16 * i + 12], values[16 * i + 13], values[16 * i + 14], values[16 * i + 15]]\n};\nconst PACKER = {\n  SCALAR: (x, values, i) => {\n    values[i] = x;\n  },\n  VEC2: (x, values, i) => {\n    values[2 * i + 0] = x[0];\n    values[2 * i + 1] = x[1];\n  },\n  VEC3: (x, values, i) => {\n    values[3 * i + 0] = x[0];\n    values[3 * i + 1] = x[1];\n    values[3 * i + 2] = x[2];\n  },\n  VEC4: (x, values, i) => {\n    values[4 * i + 0] = x[0];\n    values[4 * i + 1] = x[1];\n    values[4 * i + 2] = x[2];\n    values[4 * i + 3] = x[3];\n  },\n  MAT2: (x, values, i) => {\n    values[4 * i + 0] = x[0];\n    values[4 * i + 1] = x[1];\n    values[4 * i + 2] = x[2];\n    values[4 * i + 3] = x[3];\n  },\n  MAT3: (x, values, i) => {\n    values[9 * i + 0] = x[0];\n    values[9 * i + 1] = x[1];\n    values[9 * i + 2] = x[2];\n    values[9 * i + 3] = x[3];\n    values[9 * i + 4] = x[4];\n    values[9 * i + 5] = x[5];\n    values[9 * i + 6] = x[6];\n    values[9 * i + 7] = x[7];\n    values[9 * i + 8] = x[8];\n    values[9 * i + 9] = x[9];\n  },\n  MAT4: (x, values, i) => {\n    values[16 * i + 0] = x[0];\n    values[16 * i + 1] = x[1];\n    values[16 * i + 2] = x[2];\n    values[16 * i + 3] = x[3];\n    values[16 * i + 4] = x[4];\n    values[16 * i + 5] = x[5];\n    values[16 * i + 6] = x[6];\n    values[16 * i + 7] = x[7];\n    values[16 * i + 8] = x[8];\n    values[16 * i + 9] = x[9];\n    values[16 * i + 10] = x[10];\n    values[16 * i + 11] = x[11];\n    values[16 * i + 12] = x[12];\n    values[16 * i + 13] = x[13];\n    values[16 * i + 14] = x[14];\n    values[16 * i + 15] = x[15];\n  }\n};\nexport function createTypedArrayFromAccessor(tile3DAccessor, buffer, byteOffset, length) {\n  const {\n    componentType\n  } = tile3DAccessor;\n  assert(tile3DAccessor.componentType);\n  const type = typeof componentType === 'string' ? GLType.fromName(componentType) : componentType;\n  const size = COMPONENTS_PER_ATTRIBUTE[tile3DAccessor.type];\n  const unpacker = UNPACKER[tile3DAccessor.type];\n  const packer = PACKER[tile3DAccessor.type];\n  byteOffset += tile3DAccessor.byteOffset;\n  const values = GLType.createTypedArray(type, buffer, byteOffset, size * length);\n  return {\n    values,\n    type,\n    size,\n    unpacker,\n    packer\n  };\n}","map":{"version":3,"mappings":"AAAA,SAAQA,MAAR,QAAqB,kBAArB;AACA,SAAQC,MAAR,QAAqB,0BAArB;AAEA,MAAMC,wBAAwB,GAAG;EAC/BC,MAAM,EAAE,CADuB;EAE/BC,IAAI,EAAE,CAFyB;EAG/BC,IAAI,EAAE,CAHyB;EAI/BC,IAAI,EAAE,CAJyB;EAK/BC,IAAI,EAAE,CALyB;EAM/BC,IAAI,EAAE,CANyB;EAO/BC,IAAI,EAAE;AAPyB,CAAjC;AAYA,MAAMC,QAAQ,GAAG;EACfP,MAAM,EAAE,CAACQ,MAAD,EAASC,CAAT,KAAeD,MAAM,CAACC,CAAD,CADd;EAEfR,IAAI,EAAE,CAACO,MAAD,EAASC,CAAT,KAAe,CAACD,MAAM,CAAC,IAAIC,CAAJ,GAAQ,CAAT,CAAP,EAAoBD,MAAM,CAAC,IAAIC,CAAJ,GAAQ,CAAT,CAA1B,CAFN;EAGfP,IAAI,EAAE,CAACM,MAAD,EAASC,CAAT,KAAe,CAACD,MAAM,CAAC,IAAIC,CAAJ,GAAQ,CAAT,CAAP,EAAoBD,MAAM,CAAC,IAAIC,CAAJ,GAAQ,CAAT,CAA1B,EAAuCD,MAAM,CAAC,IAAIC,CAAJ,GAAQ,CAAT,CAA7C,CAHN;EAIfN,IAAI,EAAE,CAACK,MAAD,EAASC,CAAT,KAAe,CAACD,MAAM,CAAC,IAAIC,CAAJ,GAAQ,CAAT,CAAP,EAAoBD,MAAM,CAAC,IAAIC,CAAJ,GAAQ,CAAT,CAA1B,EAAuCD,MAAM,CAAC,IAAIC,CAAJ,GAAQ,CAAT,CAA7C,EAA0DD,MAAM,CAAC,IAAIC,CAAJ,GAAQ,CAAT,CAAhE,CAJN;EAMfL,IAAI,EAAE,CAACI,MAAD,EAASC,CAAT,KAAe,CACnBD,MAAM,CAAC,IAAIC,CAAJ,GAAQ,CAAT,CADa,EACAD,MAAM,CAAC,IAAIC,CAAJ,GAAQ,CAAT,CADN,EAEnBD,MAAM,CAAC,IAAIC,CAAJ,GAAQ,CAAT,CAFa,EAEAD,MAAM,CAAC,IAAIC,CAAJ,GAAQ,CAAT,CAFN,CANN;EAUfJ,IAAI,EAAE,CAACG,MAAD,EAASC,CAAT,KAAe,CACnBD,MAAM,CAAC,IAAIC,CAAJ,GAAQ,CAAT,CADa,EACAD,MAAM,CAAC,IAAIC,CAAJ,GAAQ,CAAT,CADN,EACmBD,MAAM,CAAC,IAAIC,CAAJ,GAAQ,CAAT,CADzB,EAEnBD,MAAM,CAAC,IAAIC,CAAJ,GAAQ,CAAT,CAFa,EAEAD,MAAM,CAAC,IAAIC,CAAJ,GAAQ,CAAT,CAFN,EAEmBD,MAAM,CAAC,IAAIC,CAAJ,GAAQ,CAAT,CAFzB,EAGnBD,MAAM,CAAC,IAAIC,CAAJ,GAAQ,CAAT,CAHa,EAGAD,MAAM,CAAC,IAAIC,CAAJ,GAAQ,CAAT,CAHN,EAGmBD,MAAM,CAAC,IAAIC,CAAJ,GAAQ,CAAT,CAHzB,CAVN;EAefH,IAAI,EAAE,CAACE,MAAD,EAASC,CAAT,KAAe,CACnBD,MAAM,CAAC,KAAKC,CAAL,GAAS,CAAV,CADa,EACCD,MAAM,CAAC,KAAKC,CAAL,GAAS,CAAV,CADP,EACqBD,MAAM,CAAC,KAAKC,CAAL,GAAS,CAAV,CAD3B,EACyCD,MAAM,CAAC,KAAKC,CAAL,GAAS,CAAV,CAD/C,EAEnBD,MAAM,CAAC,KAAKC,CAAL,GAAS,CAAV,CAFa,EAECD,MAAM,CAAC,KAAKC,CAAL,GAAS,CAAV,CAFP,EAEqBD,MAAM,CAAC,KAAKC,CAAL,GAAS,CAAV,CAF3B,EAEyCD,MAAM,CAAC,KAAKC,CAAL,GAAS,CAAV,CAF/C,EAGnBD,MAAM,CAAC,KAAKC,CAAL,GAAS,CAAV,CAHa,EAGCD,MAAM,CAAC,KAAKC,CAAL,GAAS,CAAV,CAHP,EAGqBD,MAAM,CAAC,KAAKC,CAAL,GAAS,EAAV,CAH3B,EAG0CD,MAAM,CAAC,KAAKC,CAAL,GAAS,EAAV,CAHhD,EAInBD,MAAM,CAAC,KAAKC,CAAL,GAAS,EAAV,CAJa,EAIED,MAAM,CAAC,KAAKC,CAAL,GAAS,EAAV,CAJR,EAIuBD,MAAM,CAAC,KAAKC,CAAL,GAAS,EAAV,CAJ7B,EAI4CD,MAAM,CAAC,KAAKC,CAAL,GAAS,EAAV,CAJlD;AAfN,CAAjB;AAuBA,MAAMC,MAAM,GAAG;EACbV,MAAM,EAAE,CAACW,CAAD,EAAIH,MAAJ,EAAYC,CAAZ,KAAkB;IACxBD,MAAM,CAACC,CAAD,CAAND,GAAYG,CAAZH;EAFW;EAIbP,IAAI,EAAE,CAACU,CAAD,EAAIH,MAAJ,EAAYC,CAAZ,KAAkB;IACtBD,MAAM,CAAC,IAAIC,CAAJ,GAAQ,CAAT,CAAND,GAAoBG,CAAC,CAAC,CAAD,CAArBH;IACAA,MAAM,CAAC,IAAIC,CAAJ,GAAQ,CAAT,CAAND,GAAoBG,CAAC,CAAC,CAAD,CAArBH;EANW;EAQbN,IAAI,EAAE,CAACS,CAAD,EAAIH,MAAJ,EAAYC,CAAZ,KAAkB;IACtBD,MAAM,CAAC,IAAIC,CAAJ,GAAQ,CAAT,CAAND,GAAoBG,CAAC,CAAC,CAAD,CAArBH;IACAA,MAAM,CAAC,IAAIC,CAAJ,GAAQ,CAAT,CAAND,GAAoBG,CAAC,CAAC,CAAD,CAArBH;IACAA,MAAM,CAAC,IAAIC,CAAJ,GAAQ,CAAT,CAAND,GAAoBG,CAAC,CAAC,CAAD,CAArBH;EAXW;EAabL,IAAI,EAAE,CAACQ,CAAD,EAAIH,MAAJ,EAAYC,CAAZ,KAAkB;IACtBD,MAAM,CAAC,IAAIC,CAAJ,GAAQ,CAAT,CAAND,GAAoBG,CAAC,CAAC,CAAD,CAArBH;IACAA,MAAM,CAAC,IAAIC,CAAJ,GAAQ,CAAT,CAAND,GAAoBG,CAAC,CAAC,CAAD,CAArBH;IACAA,MAAM,CAAC,IAAIC,CAAJ,GAAQ,CAAT,CAAND,GAAoBG,CAAC,CAAC,CAAD,CAArBH;IACAA,MAAM,CAAC,IAAIC,CAAJ,GAAQ,CAAT,CAAND,GAAoBG,CAAC,CAAC,CAAD,CAArBH;EAjBW;EAoBbJ,IAAI,EAAE,CAACO,CAAD,EAAIH,MAAJ,EAAYC,CAAZ,KAAkB;IACtBD,MAAM,CAAC,IAAIC,CAAJ,GAAQ,CAAT,CAAND,GAAoBG,CAAC,CAAC,CAAD,CAArBH;IACAA,MAAM,CAAC,IAAIC,CAAJ,GAAQ,CAAT,CAAND,GAAoBG,CAAC,CAAC,CAAD,CAArBH;IACAA,MAAM,CAAC,IAAIC,CAAJ,GAAQ,CAAT,CAAND,GAAoBG,CAAC,CAAC,CAAD,CAArBH;IACAA,MAAM,CAAC,IAAIC,CAAJ,GAAQ,CAAT,CAAND,GAAoBG,CAAC,CAAC,CAAD,CAArBH;EAxBW;EA0BbH,IAAI,EAAE,CAACM,CAAD,EAAIH,MAAJ,EAAYC,CAAZ,KAAkB;IACtBD,MAAM,CAAC,IAAIC,CAAJ,GAAQ,CAAT,CAAND,GAAoBG,CAAC,CAAC,CAAD,CAArBH;IACAA,MAAM,CAAC,IAAIC,CAAJ,GAAQ,CAAT,CAAND,GAAoBG,CAAC,CAAC,CAAD,CAArBH;IACAA,MAAM,CAAC,IAAIC,CAAJ,GAAQ,CAAT,CAAND,GAAoBG,CAAC,CAAC,CAAD,CAArBH;IACAA,MAAM,CAAC,IAAIC,CAAJ,GAAQ,CAAT,CAAND,GAAoBG,CAAC,CAAC,CAAD,CAArBH;IACAA,MAAM,CAAC,IAAIC,CAAJ,GAAQ,CAAT,CAAND,GAAoBG,CAAC,CAAC,CAAD,CAArBH;IACAA,MAAM,CAAC,IAAIC,CAAJ,GAAQ,CAAT,CAAND,GAAoBG,CAAC,CAAC,CAAD,CAArBH;IACAA,MAAM,CAAC,IAAIC,CAAJ,GAAQ,CAAT,CAAND,GAAoBG,CAAC,CAAC,CAAD,CAArBH;IACAA,MAAM,CAAC,IAAIC,CAAJ,GAAQ,CAAT,CAAND,GAAoBG,CAAC,CAAC,CAAD,CAArBH;IACAA,MAAM,CAAC,IAAIC,CAAJ,GAAQ,CAAT,CAAND,GAAoBG,CAAC,CAAC,CAAD,CAArBH;IACAA,MAAM,CAAC,IAAIC,CAAJ,GAAQ,CAAT,CAAND,GAAoBG,CAAC,CAAC,CAAD,CAArBH;EApCW;EAsCbF,IAAI,EAAE,CAACK,CAAD,EAAIH,MAAJ,EAAYC,CAAZ,KAAkB;IACtBD,MAAM,CAAC,KAAKC,CAAL,GAAS,CAAV,CAAND,GAAqBG,CAAC,CAAC,CAAD,CAAtBH;IACAA,MAAM,CAAC,KAAKC,CAAL,GAAS,CAAV,CAAND,GAAqBG,CAAC,CAAC,CAAD,CAAtBH;IACAA,MAAM,CAAC,KAAKC,CAAL,GAAS,CAAV,CAAND,GAAqBG,CAAC,CAAC,CAAD,CAAtBH;IACAA,MAAM,CAAC,KAAKC,CAAL,GAAS,CAAV,CAAND,GAAqBG,CAAC,CAAC,CAAD,CAAtBH;IACAA,MAAM,CAAC,KAAKC,CAAL,GAAS,CAAV,CAAND,GAAqBG,CAAC,CAAC,CAAD,CAAtBH;IACAA,MAAM,CAAC,KAAKC,CAAL,GAAS,CAAV,CAAND,GAAqBG,CAAC,CAAC,CAAD,CAAtBH;IACAA,MAAM,CAAC,KAAKC,CAAL,GAAS,CAAV,CAAND,GAAqBG,CAAC,CAAC,CAAD,CAAtBH;IACAA,MAAM,CAAC,KAAKC,CAAL,GAAS,CAAV,CAAND,GAAqBG,CAAC,CAAC,CAAD,CAAtBH;IACAA,MAAM,CAAC,KAAKC,CAAL,GAAS,CAAV,CAAND,GAAqBG,CAAC,CAAC,CAAD,CAAtBH;IACAA,MAAM,CAAC,KAAKC,CAAL,GAAS,CAAV,CAAND,GAAqBG,CAAC,CAAC,CAAD,CAAtBH;IACAA,MAAM,CAAC,KAAKC,CAAL,GAAS,EAAV,CAAND,GAAsBG,CAAC,CAAC,EAAD,CAAvBH;IACAA,MAAM,CAAC,KAAKC,CAAL,GAAS,EAAV,CAAND,GAAsBG,CAAC,CAAC,EAAD,CAAvBH;IACAA,MAAM,CAAC,KAAKC,CAAL,GAAS,EAAV,CAAND,GAAsBG,CAAC,CAAC,EAAD,CAAvBH;IACAA,MAAM,CAAC,KAAKC,CAAL,GAAS,EAAV,CAAND,GAAsBG,CAAC,CAAC,EAAD,CAAvBH;IACAA,MAAM,CAAC,KAAKC,CAAL,GAAS,EAAV,CAAND,GAAsBG,CAAC,CAAC,EAAD,CAAvBH;IACAA,MAAM,CAAC,KAAKC,CAAL,GAAS,EAAV,CAAND,GAAsBG,CAAC,CAAC,EAAD,CAAvBH;EACD;AAvDY,CAAf;AA0DA,OAAO,SAASI,4BAAT,CAAsCC,cAAtC,EAAsDC,MAAtD,EAA8DC,UAA9D,EAA0EC,MAA1E,EAAkF;EACvF,MAAM;IAACC;EAAD,IAAkBJ,cAAxB;EACAf,MAAM,CAACe,cAAc,CAACI,aAAhB,CAANnB;EACA,MAAMoB,IAAI,GAAG,OAAOD,aAAP,KAAyB,QAAzB,GAAoCpB,MAAM,CAACsB,QAAPtB,CAAgBoB,aAAhBpB,CAApC,GAAqEoB,aAAlF;EACA,MAAMG,IAAI,GAAGrB,wBAAwB,CAACc,cAAc,CAACK,IAAhB,CAArC;EACA,MAAMG,QAAQ,GAAGd,QAAQ,CAACM,cAAc,CAACK,IAAhB,CAAzB;EACA,MAAMI,MAAM,GAAGZ,MAAM,CAACG,cAAc,CAACK,IAAhB,CAArB;EAEAH,UAAU,IAAIF,cAAc,CAACE,UAA7BA;EACA,MAAMP,MAAM,GAAGX,MAAM,CAAC0B,gBAAP1B,CAAwBqB,IAAxBrB,EAA8BiB,MAA9BjB,EAAsCkB,UAAtClB,EAAkDuB,IAAI,GAAGJ,MAAzDnB,CAAf;EAEA,OAAO;IACLW,MADK;IAELU,IAFK;IAGLE,IAHK;IAILC,QAJK;IAKLC;EALK,CAAP;AAOD","names":["GLType","assert","COMPONENTS_PER_ATTRIBUTE","SCALAR","VEC2","VEC3","VEC4","MAT2","MAT3","MAT4","UNPACKER","values","i","PACKER","x","createTypedArrayFromAccessor","tile3DAccessor","buffer","byteOffset","length","componentType","type","fromName","size","unpacker","packer","createTypedArray"],"sources":["../../../../../src/lib/classes/helpers/tile-3d-accessor-utils.ts"],"sourcesContent":["import {GLType} from '@loaders.gl/math'; // '@math.gl/geometry';\nimport {assert} from '@loaders.gl/loader-utils';\n\nconst COMPONENTS_PER_ATTRIBUTE = {\n  SCALAR: 1,\n  VEC2: 2,\n  VEC3: 3,\n  VEC4: 4,\n  MAT2: 4,\n  MAT3: 9,\n  MAT4: 16\n};\n\n// TODO - could just return typed array views...\n// prettier-ignore\nconst UNPACKER = {\n  SCALAR: (values, i) => values[i],\n  VEC2: (values, i) => [values[2 * i + 0], values[2 * i + 1]],\n  VEC3: (values, i) => [values[3 * i + 0], values[3 * i + 1], values[3 * i + 2]],\n  VEC4: (values, i) => [values[4 * i + 0], values[4 * i + 1], values[4 * i + 2], values[4 * i + 3]],\n  // TODO: check column major\n  MAT2: (values, i) => [\n    values[4 * i + 0], values[4 * i + 1],\n    values[4 * i + 2], values[4 * i + 3]\n  ],\n  MAT3: (values, i) => [\n    values[9 * i + 0], values[9 * i + 1], values[9 * i + 2],\n    values[9 * i + 3], values[9 * i + 4], values[9 * i + 5],\n    values[9 * i + 6], values[9 * i + 7], values[9 * i + 8]\n  ],\n  MAT4: (values, i) => [\n    values[16 * i + 0], values[16 * i + 1], values[16 * i + 2], values[16 * i + 3],\n    values[16 * i + 4], values[16 * i + 5], values[16 * i + 6], values[16 * i + 7],\n    values[16 * i + 8], values[16 * i + 9], values[16 * i + 10], values[16 * i + 11],\n    values[16 * i + 12], values[16 * i + 13], values[16 * i + 14], values[16 * i + 15]\n  ]\n};\n\nconst PACKER = {\n  SCALAR: (x, values, i) => {\n    values[i] = x;\n  },\n  VEC2: (x, values, i) => {\n    values[2 * i + 0] = x[0];\n    values[2 * i + 1] = x[1];\n  },\n  VEC3: (x, values, i) => {\n    values[3 * i + 0] = x[0];\n    values[3 * i + 1] = x[1];\n    values[3 * i + 2] = x[2];\n  },\n  VEC4: (x, values, i) => {\n    values[4 * i + 0] = x[0];\n    values[4 * i + 1] = x[1];\n    values[4 * i + 2] = x[2];\n    values[4 * i + 3] = x[3];\n  },\n  // TODO: check column major correctness\n  MAT2: (x, values, i) => {\n    values[4 * i + 0] = x[0];\n    values[4 * i + 1] = x[1];\n    values[4 * i + 2] = x[2];\n    values[4 * i + 3] = x[3];\n  },\n  MAT3: (x, values, i) => {\n    values[9 * i + 0] = x[0];\n    values[9 * i + 1] = x[1];\n    values[9 * i + 2] = x[2];\n    values[9 * i + 3] = x[3];\n    values[9 * i + 4] = x[4];\n    values[9 * i + 5] = x[5];\n    values[9 * i + 6] = x[6];\n    values[9 * i + 7] = x[7];\n    values[9 * i + 8] = x[8];\n    values[9 * i + 9] = x[9];\n  },\n  MAT4: (x, values, i) => {\n    values[16 * i + 0] = x[0];\n    values[16 * i + 1] = x[1];\n    values[16 * i + 2] = x[2];\n    values[16 * i + 3] = x[3];\n    values[16 * i + 4] = x[4];\n    values[16 * i + 5] = x[5];\n    values[16 * i + 6] = x[6];\n    values[16 * i + 7] = x[7];\n    values[16 * i + 8] = x[8];\n    values[16 * i + 9] = x[9];\n    values[16 * i + 10] = x[10];\n    values[16 * i + 11] = x[11];\n    values[16 * i + 12] = x[12];\n    values[16 * i + 13] = x[13];\n    values[16 * i + 14] = x[14];\n    values[16 * i + 15] = x[15];\n  }\n};\n\nexport function createTypedArrayFromAccessor(tile3DAccessor, buffer, byteOffset, length) {\n  const {componentType} = tile3DAccessor;\n  assert(tile3DAccessor.componentType);\n  const type = typeof componentType === 'string' ? GLType.fromName(componentType) : componentType;\n  const size = COMPONENTS_PER_ATTRIBUTE[tile3DAccessor.type];\n  const unpacker = UNPACKER[tile3DAccessor.type];\n  const packer = PACKER[tile3DAccessor.type];\n\n  byteOffset += tile3DAccessor.byteOffset;\n  const values = GLType.createTypedArray(type, buffer, byteOffset, size * length);\n\n  return {\n    values,\n    type,\n    size,\n    unpacker,\n    packer\n  };\n}\n"]},"metadata":{},"sourceType":"module"}