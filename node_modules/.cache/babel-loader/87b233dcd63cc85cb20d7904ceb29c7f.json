{"ast":null,"code":"import _createForOfIteratorHelper from \"/Users/tomasehrenfeld/projs/se-team/tomas/react-apps/custom_filter/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _objectSpread from \"/Users/tomasehrenfeld/projs/se-team/tomas/react-apps/custom_filter/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _classCallCheck from \"/Users/tomasehrenfeld/projs/se-team/tomas/react-apps/custom_filter/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/tomasehrenfeld/projs/se-team/tomas/react-apps/custom_filter/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _get from \"/Users/tomasehrenfeld/projs/se-team/tomas/react-apps/custom_filter/node_modules/@babel/runtime/helpers/esm/get.js\";\nimport _getPrototypeOf from \"/Users/tomasehrenfeld/projs/se-team/tomas/react-apps/custom_filter/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _inherits from \"/Users/tomasehrenfeld/projs/se-team/tomas/react-apps/custom_filter/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/tomasehrenfeld/projs/se-team/tomas/react-apps/custom_filter/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport Layer from './layer';\nimport debug from '../debug';\nimport { flatten } from '../utils/flatten';\nvar TRACE_RENDER_LAYERS = 'compositeLayer.renderLayers';\n\nvar CompositeLayer = /*#__PURE__*/function (_Layer) {\n  _inherits(CompositeLayer, _Layer);\n\n  var _super = _createSuper(CompositeLayer);\n\n  function CompositeLayer() {\n    _classCallCheck(this, CompositeLayer);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(CompositeLayer, [{\n    key: \"isComposite\",\n    get: function get() {\n      return true;\n    }\n  }, {\n    key: \"isLoaded\",\n    get: function get() {\n      return _get(_getPrototypeOf(CompositeLayer.prototype), \"isLoaded\", this) && this.getSubLayers().every(function (layer) {\n        return layer.isLoaded;\n      });\n    }\n  }, {\n    key: \"getSubLayers\",\n    value: function getSubLayers() {\n      return this.internalState && this.internalState.subLayers || [];\n    }\n  }, {\n    key: \"initializeState\",\n    value: function initializeState() {}\n  }, {\n    key: \"setState\",\n    value: function setState(updateObject) {\n      _get(_getPrototypeOf(CompositeLayer.prototype), \"setState\", this).call(this, updateObject);\n\n      this.setNeedsUpdate();\n    }\n  }, {\n    key: \"getPickingInfo\",\n    value: function getPickingInfo(_ref) {\n      var info = _ref.info;\n      var object = info.object;\n      var isDataWrapped = object && object.__source && object.__source.parent && object.__source.parent.id === this.id;\n\n      if (!isDataWrapped) {\n        return info;\n      }\n\n      info.object = object.__source.object;\n      info.index = object.__source.index;\n      return info;\n    }\n  }, {\n    key: \"renderLayers\",\n    value: function renderLayers() {\n      return null;\n    }\n  }, {\n    key: \"filterSubLayer\",\n    value: function filterSubLayer(context) {\n      return true;\n    }\n  }, {\n    key: \"shouldRenderSubLayer\",\n    value: function shouldRenderSubLayer(id, data) {\n      return data && data.length;\n    }\n  }, {\n    key: \"getSubLayerClass\",\n    value: function getSubLayerClass(id, DefaultLayerClass) {\n      var overridingProps = this.props._subLayerProps;\n      return overridingProps && overridingProps[id] && overridingProps[id].type || DefaultLayerClass;\n    }\n  }, {\n    key: \"getSubLayerRow\",\n    value: function getSubLayerRow(row, sourceObject, sourceObjectIndex) {\n      row.__source = {\n        parent: this,\n        object: sourceObject,\n        index: sourceObjectIndex\n      };\n      return row;\n    }\n  }, {\n    key: \"getSubLayerAccessor\",\n    value: function getSubLayerAccessor(accessor) {\n      if (typeof accessor === 'function') {\n        var objectInfo = {\n          data: this.props.data,\n          target: []\n        };\n        return function (x, i) {\n          if (x && x.__source) {\n            objectInfo.index = x.__source.index;\n            return accessor(x.__source.object, objectInfo);\n          }\n\n          return accessor(x, i);\n        };\n      }\n\n      return accessor;\n    }\n  }, {\n    key: \"getSubLayerProps\",\n    value: function getSubLayerProps() {\n      var sublayerProps = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var _this$props = this.props,\n          opacity = _this$props.opacity,\n          pickable = _this$props.pickable,\n          visible = _this$props.visible,\n          parameters = _this$props.parameters,\n          getPolygonOffset = _this$props.getPolygonOffset,\n          highlightedObjectIndex = _this$props.highlightedObjectIndex,\n          autoHighlight = _this$props.autoHighlight,\n          highlightColor = _this$props.highlightColor,\n          coordinateSystem = _this$props.coordinateSystem,\n          coordinateOrigin = _this$props.coordinateOrigin,\n          wrapLongitude = _this$props.wrapLongitude,\n          positionFormat = _this$props.positionFormat,\n          modelMatrix = _this$props.modelMatrix,\n          extensions = _this$props.extensions,\n          fetch = _this$props.fetch,\n          operation = _this$props.operation,\n          overridingProps = _this$props._subLayerProps;\n      var newProps = {\n        opacity: opacity,\n        pickable: pickable,\n        visible: visible,\n        parameters: parameters,\n        getPolygonOffset: getPolygonOffset,\n        highlightedObjectIndex: highlightedObjectIndex,\n        autoHighlight: autoHighlight,\n        highlightColor: highlightColor,\n        coordinateSystem: coordinateSystem,\n        coordinateOrigin: coordinateOrigin,\n        wrapLongitude: wrapLongitude,\n        positionFormat: positionFormat,\n        modelMatrix: modelMatrix,\n        extensions: extensions,\n        fetch: fetch,\n        operation: operation\n      };\n      var overridingSublayerProps = overridingProps && overridingProps[sublayerProps.id];\n      var overridingSublayerTriggers = overridingSublayerProps && overridingSublayerProps.updateTriggers;\n      var sublayerId = sublayerProps.id || 'sublayer';\n\n      if (overridingSublayerProps) {\n        var propTypes = this.constructor._propTypes;\n        var subLayerPropTypes = sublayerProps.type ? sublayerProps.type._propTypes : {};\n\n        for (var key in overridingSublayerProps) {\n          var propType = subLayerPropTypes[key] || propTypes[key];\n\n          if (propType && propType.type === 'accessor') {\n            overridingSublayerProps[key] = this.getSubLayerAccessor(overridingSublayerProps[key]);\n          }\n        }\n      }\n\n      Object.assign(newProps, sublayerProps, overridingSublayerProps);\n      newProps.id = \"\".concat(this.props.id, \"-\").concat(sublayerId);\n      newProps.updateTriggers = _objectSpread(_objectSpread({\n        all: this.props.updateTriggers.all\n      }, sublayerProps.updateTriggers), overridingSublayerTriggers);\n\n      var _iterator = _createForOfIteratorHelper(extensions),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var extension = _step.value;\n          var passThroughProps = extension.getSubLayerProps.call(this, extension);\n\n          if (passThroughProps) {\n            Object.assign(newProps, passThroughProps, {\n              updateTriggers: Object.assign(newProps.updateTriggers, passThroughProps.updateTriggers)\n            });\n          }\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      return newProps;\n    }\n  }, {\n    key: \"_updateAutoHighlight\",\n    value: function _updateAutoHighlight(info) {\n      var _iterator2 = _createForOfIteratorHelper(this.getSubLayers()),\n          _step2;\n\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var layer = _step2.value;\n          layer.updateAutoHighlight(info);\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n    }\n  }, {\n    key: \"_getAttributeManager\",\n    value: function _getAttributeManager() {\n      return null;\n    }\n  }, {\n    key: \"_renderLayers\",\n    value: function _renderLayers() {\n      var subLayers = this.internalState.subLayers;\n      var shouldUpdate = !subLayers || this.needsUpdate();\n\n      if (shouldUpdate) {\n        subLayers = this.renderLayers();\n        subLayers = flatten(subLayers, Boolean);\n        this.internalState.subLayers = subLayers;\n      }\n\n      debug(TRACE_RENDER_LAYERS, this, shouldUpdate, subLayers);\n\n      var _iterator3 = _createForOfIteratorHelper(subLayers),\n          _step3;\n\n      try {\n        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n          var layer = _step3.value;\n          layer.parent = this;\n        }\n      } catch (err) {\n        _iterator3.e(err);\n      } finally {\n        _iterator3.f();\n      }\n    }\n  }]);\n\n  return CompositeLayer;\n}(Layer);\n\nexport { CompositeLayer as default };\nCompositeLayer.layerName = 'CompositeLayer';","map":{"version":3,"mappings":"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","names":["Layer","debug","flatten","TRACE_RENDER_LAYERS","CompositeLayer","getSubLayers","every","layer","isLoaded","internalState","subLayers","initializeState","setState","updateObject","setNeedsUpdate","getPickingInfo","info","object","isDataWrapped","__source","parent","id","index","renderLayers","filterSubLayer","context","shouldRenderSubLayer","data","length","getSubLayerClass","DefaultLayerClass","overridingProps","props","_subLayerProps","type","getSubLayerRow","row","sourceObject","sourceObjectIndex","getSubLayerAccessor","accessor","objectInfo","target","x","i","getSubLayerProps","sublayerProps","opacity","pickable","visible","parameters","getPolygonOffset","highlightedObjectIndex","autoHighlight","highlightColor","coordinateSystem","coordinateOrigin","wrapLongitude","positionFormat","modelMatrix","extensions","fetch","operation","newProps","overridingSublayerProps","overridingSublayerTriggers","updateTriggers","sublayerId","propTypes","constructor","_propTypes","subLayerPropTypes","key","propType","Object","assign","all","extension","passThroughProps","call","_updateAutoHighlight","updateAutoHighlight","_getAttributeManager","_renderLayers","shouldUpdate","needsUpdate","Boolean","layerName"],"sources":["../../../src/lib/composite-layer.js"],"sourcesContent":["// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\nimport Layer from './layer';\nimport debug from '../debug';\nimport {flatten} from '../utils/flatten';\n\nconst TRACE_RENDER_LAYERS = 'compositeLayer.renderLayers';\n\nexport default class CompositeLayer extends Layer {\n  get isComposite() {\n    return true;\n  }\n\n  get isLoaded() {\n    return super.isLoaded && this.getSubLayers().every(layer => layer.isLoaded);\n  }\n\n  getSubLayers() {\n    return (this.internalState && this.internalState.subLayers) || [];\n  }\n\n  // initializeState is usually not needed for composite layers\n  // Provide empty definition to disable check for missing definition\n  initializeState() {}\n\n  // Updates selected state members and marks the composite layer to need rerender\n  setState(updateObject) {\n    super.setState(updateObject);\n    // Trigger a layer update\n    // Although conceptually layer.draw and compositeLayer.renderLayers are equivalent,\n    // they are executed during different lifecycles.\n    // draw can be called without calling updateState (e.g. most viewport changes),\n    // while renderLayers can only be called during a recursive layer update.\n    this.setNeedsUpdate();\n  }\n\n  // called to augment the info object that is bubbled up from a sublayer\n  // override Layer.getPickingInfo() because decoding / setting uniform do\n  // not apply to a composite layer.\n  // @return null to cancel event\n  getPickingInfo({info}) {\n    const {object} = info;\n    const isDataWrapped =\n      object && object.__source && object.__source.parent && object.__source.parent.id === this.id;\n\n    if (!isDataWrapped) {\n      return info;\n    }\n\n    // override object with picked data\n    info.object = object.__source.object;\n    info.index = object.__source.index;\n\n    return info;\n  }\n\n  // Implement to generate subLayers\n  renderLayers() {\n    return null;\n  }\n\n  /**\n   * Filters sub layers at draw time\n   * @param {Layer} context.layer - sub layer instance\n   * @param {Viewport} context.viewport - the viewport being rendered in\n   * @param {Boolean} context.isPicking - whether it is a picking pass\n   * @param {String} context.pass - the current pass\n   * @return {Boolean} true if the sub layer should be drawn\n   */\n  filterSubLayer(context) {\n    return true;\n  }\n\n  // Returns true if sub layer needs to be rendered\n  shouldRenderSubLayer(id, data) {\n    return data && data.length;\n  }\n\n  // Returns sub layer class for a specific sublayer\n  getSubLayerClass(id, DefaultLayerClass) {\n    const {_subLayerProps: overridingProps} = this.props;\n\n    return (\n      (overridingProps && overridingProps[id] && overridingProps[id].type) || DefaultLayerClass\n    );\n  }\n\n  // When casting user data into another format to pass to sublayers,\n  // add reference to the original object and object index\n  getSubLayerRow(row, sourceObject, sourceObjectIndex) {\n    row.__source = {\n      parent: this,\n      object: sourceObject,\n      index: sourceObjectIndex\n    };\n    return row;\n  }\n\n  // Some composite layers cast user data into another format before passing to sublayers\n  // We need to unwrap them before calling the accessor so that they see the original data\n  // objects\n  getSubLayerAccessor(accessor) {\n    if (typeof accessor === 'function') {\n      const objectInfo = {\n        data: this.props.data,\n        target: []\n      };\n      return (x, i) => {\n        if (x && x.__source) {\n          objectInfo.index = x.__source.index;\n          return accessor(x.__source.object, objectInfo);\n        }\n        return accessor(x, i);\n      };\n    }\n    return accessor;\n  }\n\n  // Returns sub layer props for a specific sublayer\n  // eslint-disable-next-line complexity\n  getSubLayerProps(sublayerProps = {}) {\n    const {\n      opacity,\n      pickable,\n      visible,\n      parameters,\n      getPolygonOffset,\n      highlightedObjectIndex,\n      autoHighlight,\n      highlightColor,\n      coordinateSystem,\n      coordinateOrigin,\n      wrapLongitude,\n      positionFormat,\n      modelMatrix,\n      extensions,\n      fetch,\n      operation,\n      _subLayerProps: overridingProps\n    } = this.props;\n    const newProps = {\n      opacity,\n      pickable,\n      visible,\n      parameters,\n      getPolygonOffset,\n      highlightedObjectIndex,\n      autoHighlight,\n      highlightColor,\n      coordinateSystem,\n      coordinateOrigin,\n      wrapLongitude,\n      positionFormat,\n      modelMatrix,\n      extensions,\n      fetch,\n      operation\n    };\n\n    const overridingSublayerProps = overridingProps && overridingProps[sublayerProps.id];\n    const overridingSublayerTriggers =\n      overridingSublayerProps && overridingSublayerProps.updateTriggers;\n    const sublayerId = sublayerProps.id || 'sublayer';\n\n    if (overridingSublayerProps) {\n      const propTypes = this.constructor._propTypes;\n      const subLayerPropTypes = sublayerProps.type ? sublayerProps.type._propTypes : {};\n      for (const key in overridingSublayerProps) {\n        const propType = subLayerPropTypes[key] || propTypes[key];\n        // eslint-disable-next-line\n        if (propType && propType.type === 'accessor') {\n          overridingSublayerProps[key] = this.getSubLayerAccessor(overridingSublayerProps[key]);\n        }\n      }\n    }\n\n    Object.assign(\n      newProps,\n      sublayerProps,\n      // experimental feature that allows users to override sublayer props via parent layer prop\n      overridingSublayerProps\n    );\n    newProps.id = `${this.props.id}-${sublayerId}`;\n    newProps.updateTriggers = {\n      all: this.props.updateTriggers.all,\n      ...sublayerProps.updateTriggers,\n      ...overridingSublayerTriggers\n    };\n\n    // Pass through extension props\n    for (const extension of extensions) {\n      const passThroughProps = extension.getSubLayerProps.call(this, extension);\n      if (passThroughProps) {\n        Object.assign(newProps, passThroughProps, {\n          updateTriggers: Object.assign(newProps.updateTriggers, passThroughProps.updateTriggers)\n        });\n      }\n    }\n\n    return newProps;\n  }\n\n  _updateAutoHighlight(info) {\n    for (const layer of this.getSubLayers()) {\n      layer.updateAutoHighlight(info);\n    }\n  }\n\n  _getAttributeManager() {\n    return null;\n  }\n\n  // Called by layer manager to render subLayers\n  _renderLayers() {\n    let {subLayers} = this.internalState;\n    const shouldUpdate = !subLayers || this.needsUpdate();\n    if (shouldUpdate) {\n      subLayers = this.renderLayers();\n      // Flatten the returned array, removing any null, undefined or false\n      // this allows layers to render sublayers conditionally\n      // (see CompositeLayer.renderLayers docs)\n      subLayers = flatten(subLayers, Boolean);\n      this.internalState.subLayers = subLayers;\n    }\n    debug(TRACE_RENDER_LAYERS, this, shouldUpdate, subLayers);\n\n    // populate reference to parent layer (this layer)\n    // NOTE: needs to be done even when reusing layers as the parent may have changed\n    for (const layer of subLayers) {\n      layer.parent = this;\n    }\n  }\n}\n\nCompositeLayer.layerName = 'CompositeLayer';\n"]},"metadata":{},"sourceType":"module"}