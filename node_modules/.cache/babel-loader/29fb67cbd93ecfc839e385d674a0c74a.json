{"ast":null,"code":"import _createForOfIteratorHelper from \"/Users/tomasehrenfeld/projs/se-team/tomas/react-apps/custom_filter/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _classCallCheck from \"/Users/tomasehrenfeld/projs/se-team/tomas/react-apps/custom_filter/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/tomasehrenfeld/projs/se-team/tomas/react-apps/custom_filter/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { deepEqual } from '../utils/deep-equal';\nimport LightingEffect from '../effects/lighting/lighting-effect';\nimport MaskEffect from '../effects/mask/mask-effect';\nvar DEFAULT_LIGHTING_EFFECT = new LightingEffect();\n\nvar EffectManager = /*#__PURE__*/function () {\n  function EffectManager() {\n    _classCallCheck(this, EffectManager);\n\n    _defineProperty(this, \"effects\", void 0);\n\n    _defineProperty(this, \"_internalEffects\", void 0);\n\n    _defineProperty(this, \"_needsRedraw\", void 0);\n\n    this.effects = [];\n    this._internalEffects = [];\n    this._needsRedraw = 'Initial render';\n    this.setEffects();\n  }\n\n  _createClass(EffectManager, [{\n    key: \"setProps\",\n    value: function setProps(props) {\n      if ('effects' in props) {\n        if (props.effects.length !== this.effects.length || !deepEqual(props.effects, this.effects)) {\n          this.setEffects(props.effects);\n          this._needsRedraw = 'effects changed';\n        }\n      }\n    }\n  }, {\n    key: \"needsRedraw\",\n    value: function needsRedraw() {\n      var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n        clearRedrawFlags: false\n      };\n      var redraw = this._needsRedraw;\n\n      if (opts.clearRedrawFlags) {\n        this._needsRedraw = false;\n      }\n\n      return redraw;\n    }\n  }, {\n    key: \"getEffects\",\n    value: function getEffects() {\n      return this._internalEffects;\n    }\n  }, {\n    key: \"finalize\",\n    value: function finalize() {\n      this.cleanup();\n    }\n  }, {\n    key: \"setEffects\",\n    value: function setEffects() {\n      var effects = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n      this.cleanup();\n      this.effects = effects;\n      this._internalEffects = effects.slice();\n\n      this._internalEffects.push(new MaskEffect());\n\n      if (!effects.some(function (effect) {\n        return effect instanceof LightingEffect;\n      })) {\n        this._internalEffects.push(DEFAULT_LIGHTING_EFFECT);\n      }\n    }\n  }, {\n    key: \"cleanup\",\n    value: function cleanup() {\n      var _iterator = _createForOfIteratorHelper(this.effects),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var effect = _step.value;\n          effect.cleanup();\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      var _iterator2 = _createForOfIteratorHelper(this._internalEffects),\n          _step2;\n\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var _effect = _step2.value;\n\n          _effect.cleanup();\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n\n      this.effects.length = 0;\n      this._internalEffects.length = 0;\n    }\n  }]);\n\n  return EffectManager;\n}();\n\nexport { EffectManager as default };","map":{"version":3,"mappings":";;;;AAAA,SAAQA,SAAR,QAAwB,qBAAxB;AACA,OAAOC,cAAP,MAA2B,qCAA3B;AACA,OAAOC,UAAP,MAAuB,6BAAvB;AAGA,IAAMC,uBAAuB,GAAG,IAAIF,cAAJ,EAAhC;;IAEqBG,a;EAKnBC,yBAAc;IAAA;;IAAAC;;IAAAA;;IAAAA;;IACZ,KAAKC,OAAL,GAAe,EAAf;IACA,KAAKC,gBAAL,GAAwB,EAAxB;IACA,KAAKC,YAAL,GAAoB,gBAApB;IACA,KAAKC,UAAL;EACD;;;;WAEDC,kBAASC,KAATD,EAAgB;MACd,IAAI,aAAaC,KAAjB,EAAwB;QACtB,IAAIA,KAAK,CAACL,OAANK,CAAcC,MAAdD,KAAyB,KAAKL,OAAL,CAAaM,MAAtCD,IAAgD,CAACZ,SAAS,CAACY,KAAK,CAACL,OAAP,EAAgB,KAAKA,OAArB,CAA9D,EAA6F;UAC3F,KAAKG,UAAL,CAAgBE,KAAK,CAACL,OAAtB;UACA,KAAKE,YAAL,GAAoB,iBAApB;QACD;MACF;IACF;;;WAEDK,uBAA8C;MAAA,IAAlCC,IAAkC,uEAA3B;QAACC,gBAAgB,EAAE;MAAnB,CAA2B;MAC5C,IAAMC,MAAM,GAAG,KAAKR,YAApB;;MACA,IAAIM,IAAI,CAACC,gBAAT,EAA2B;QACzB,KAAKP,YAAL,GAAoB,KAApB;MACD;;MACD,OAAOQ,MAAP;IACD;;;WAEDC,sBAAa;MACX,OAAO,KAAKV,gBAAZ;IACD;;;WAEDW,oBAAW;MACT,KAAKC,OAAL;IACD;;;WAGDV,sBAAyB;MAAA,IAAdH,OAAc,uEAAJ,EAAI;MACvB,KAAKa,OAAL;MACA,KAAKb,OAAL,GAAeA,OAAf;MAEA,KAAKC,gBAAL,GAAwBD,OAAO,CAACc,KAARd,EAAxB;;MAEA,KAAKC,gBAAL,CAAsBc,IAAtB,CAA2B,IAAIpB,UAAJ,EAA3B;;MACA,IAAI,CAACK,OAAO,CAACgB,IAARhB,CAAaiB,gBAAM;QAAA,OAAIA,MAAM,YAAYvB,cAAtB;MAAA,CAAnBM,CAAL,EAA+D;QAC7D,KAAKC,gBAAL,CAAsBc,IAAtB,CAA2BnB,uBAA3B;MACD;IACF;;;WAEDiB,mBAAU;MAAA,2CACa,KAAKb,OADlB;MAAA;;MAAA;QACR,oDAAmC;UAAA,IAAxBiB,MAAwB;UACjCA,MAAM,CAACJ,OAAPI;QACD;MAHO;QAAA;MAAA;QAAA;MAAA;;MAAA,4CAKa,KAAKhB,gBALlB;MAAA;;MAAA;QAKR,uDAA4C;UAAA,IAAjCgB,OAAiC;;UAC1CA,OAAM,CAACJ,OAAPI;QACD;MAPO;QAAA;MAAA;QAAA;MAAA;;MAQR,KAAKjB,OAAL,CAAaM,MAAb,GAAsB,CAAtB;MACA,KAAKL,gBAAL,CAAsBK,MAAtB,GAA+B,CAA/B;IACD;;;;;;SA5DkBT,a","names":["deepEqual","LightingEffect","MaskEffect","DEFAULT_LIGHTING_EFFECT","EffectManager","constructor","_defineProperty","effects","_internalEffects","_needsRedraw","setEffects","setProps","props","length","needsRedraw","opts","clearRedrawFlags","redraw","getEffects","finalize","cleanup","slice","push","some","effect"],"sources":["../../../src/lib/effect-manager.ts"],"sourcesContent":["import {deepEqual} from '../utils/deep-equal';\nimport LightingEffect from '../effects/lighting/lighting-effect';\nimport MaskEffect from '../effects/mask/mask-effect';\nimport type Effect from './effect';\n\nconst DEFAULT_LIGHTING_EFFECT = new LightingEffect();\n\nexport default class EffectManager {\n  effects: Effect[];\n  _internalEffects: Effect[];\n  _needsRedraw: boolean | string;\n\n  constructor() {\n    this.effects = [];\n    this._internalEffects = [];\n    this._needsRedraw = 'Initial render';\n    this.setEffects();\n  }\n\n  setProps(props) {\n    if ('effects' in props) {\n      if (props.effects.length !== this.effects.length || !deepEqual(props.effects, this.effects)) {\n        this.setEffects(props.effects);\n        this._needsRedraw = 'effects changed';\n      }\n    }\n  }\n\n  needsRedraw(opts = {clearRedrawFlags: false}) {\n    const redraw = this._needsRedraw;\n    if (opts.clearRedrawFlags) {\n      this._needsRedraw = false;\n    }\n    return redraw;\n  }\n\n  getEffects() {\n    return this._internalEffects;\n  }\n\n  finalize() {\n    this.cleanup();\n  }\n\n  // Private\n  setEffects(effects = []) {\n    this.cleanup();\n    this.effects = effects;\n\n    this._internalEffects = effects.slice();\n    // Unique MaskEffect per EffectManager as GL context may be different\n    this._internalEffects.push(new MaskEffect());\n    if (!effects.some(effect => effect instanceof LightingEffect)) {\n      this._internalEffects.push(DEFAULT_LIGHTING_EFFECT);\n    }\n  }\n\n  cleanup() {\n    for (const effect of this.effects) {\n      effect.cleanup();\n    }\n\n    for (const effect of this._internalEffects) {\n      effect.cleanup();\n    }\n    this.effects.length = 0;\n    this._internalEffects.length = 0;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}