{"ast":null,"code":"import _asyncToGenerator from \"/Users/tomasehrenfeld/projs/se-team/tomas/react-apps/custom_filter/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _objectSpread from \"/Users/tomasehrenfeld/projs/se-team/tomas/react-apps/custom_filter/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _regeneratorRuntime from \"/Users/tomasehrenfeld/projs/se-team/tomas/react-apps/custom_filter/node_modules/@babel/runtime/regenerator/index.js\";\nimport parseQuantizedMesh from './lib/parse-quantized-mesh';\nimport loadTerrain from './lib/parse-terrain';\nimport { TerrainLoader as TerrainWorkerLoader } from './terrain-loader';\nimport { QuantizedMeshLoader as QuantizedMeshWorkerLoader } from './quantized-mesh-loader';\nexport { TerrainWorkerLoader };\nexport var TerrainLoader = _objectSpread(_objectSpread({}, TerrainWorkerLoader), {}, {\n  parse: loadTerrain\n});\nexport var _typecheckTerrainLoader = TerrainLoader;\nexport { QuantizedMeshWorkerLoader };\nexport var QuantizedMeshLoader = _objectSpread(_objectSpread({}, QuantizedMeshWorkerLoader), {}, {\n  parseSync: parseQuantizedMesh,\n  parse: function () {\n    var _parse = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(arrayBuffer, options) {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              return _context.abrupt(\"return\", parseQuantizedMesh(arrayBuffer, options));\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    function parse(_x, _x2) {\n      return _parse.apply(this, arguments);\n    }\n\n    return parse;\n  }()\n});\nexport var _typecheckQuantizedMeshLoader = QuantizedMeshLoader;","map":{"version":3,"mappings":";;;AACA,OAAOA,kBAAP,MAA+B,4BAA/B;AACA,OAAOC,WAAP,MAAwB,qBAAxB;AAEA,SAAQC,aAAa,IAAIC,mBAAzB,QAAmD,kBAAnD;AACA,SAAQC,mBAAmB,IAAIC,yBAA/B,QAA+D,yBAA/D;AAIA,SAAQF,mBAAR;AAEA,OAAO,IAAMD,aAAa,mCACrBC,mBADqB;EAExBG,KAAK,EAAEL;AAFiB,EAAnB;AAKP,OAAO,IAAMM,uBAAyC,GAAGL,aAAlD;AAIP,SAAQG,yBAAR;AAKA,OAAO,IAAMD,mBAAmB,mCAC3BC,yBAD2B;EAE9BG,SAAS,EAAER,kBAFmB;EAG9BM,KAAK;IAAA,sEAAE,iBAAOG,WAAP,EAAoBC,OAApB;MAAA;QAAA;UAAA;YAAA;cAAA,iCAAgCV,kBAAkB,CAACS,WAAD,EAAcC,OAAd,CAAlD;;YAAA;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA,CAAF;;IAAA;MAAA;IAAA;;IAAA;EAAA;AAHyB,EAAzB;AAMP,OAAO,IAAMC,6BAA+C,GAAGP,mBAAxD","names":["parseQuantizedMesh","loadTerrain","TerrainLoader","TerrainWorkerLoader","QuantizedMeshLoader","QuantizedMeshWorkerLoader","parse","_typecheckTerrainLoader","parseSync","arrayBuffer","options","_typecheckQuantizedMeshLoader"],"sources":["../../src/index.ts"],"sourcesContent":["import type {LoaderWithParser} from '@loaders.gl/loader-utils';\nimport parseQuantizedMesh from './lib/parse-quantized-mesh';\nimport loadTerrain from './lib/parse-terrain';\n\nimport {TerrainLoader as TerrainWorkerLoader} from './terrain-loader';\nimport {QuantizedMeshLoader as QuantizedMeshWorkerLoader} from './quantized-mesh-loader';\n\n// TerrainLoader\n\nexport {TerrainWorkerLoader};\n\nexport const TerrainLoader = {\n  ...TerrainWorkerLoader,\n  parse: loadTerrain\n};\n\nexport const _typecheckTerrainLoader: LoaderWithParser = TerrainLoader; // eslint-disable-line\n\n// QuantizedMeshLoader\n\nexport {QuantizedMeshWorkerLoader};\n\n/**\n * Loader for quantized meshes\n */\nexport const QuantizedMeshLoader = {\n  ...QuantizedMeshWorkerLoader,\n  parseSync: parseQuantizedMesh,\n  parse: async (arrayBuffer, options) => parseQuantizedMesh(arrayBuffer, options)\n};\n\nexport const _typecheckQuantizedMeshLoader: LoaderWithParser = QuantizedMeshLoader;\n"]},"metadata":{},"sourceType":"module"}