{"ast":null,"code":"import { Framebuffer, Texture2D, isWebGL2 } from '@luma.gl/core';\nconst DEFAULT_PARAMETERS = {\n  [10240]: 9728,\n  [10241]: 9728\n};\nexport function getFloatTexture(gl) {\n  let opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  const {\n    width = 1,\n    height = 1,\n    data = null,\n    unpackFlipY = true,\n    parameters = DEFAULT_PARAMETERS\n  } = opts;\n  const texture = new Texture2D(gl, {\n    data,\n    format: isWebGL2(gl) ? 34836 : 6408,\n    type: 5126,\n    border: 0,\n    mipmaps: false,\n    parameters,\n    dataFormat: 6408,\n    width,\n    height,\n    unpackFlipY\n  });\n  return texture;\n}\nexport function getFramebuffer(gl, opts) {\n  const {\n    id,\n    width = 1,\n    height = 1,\n    texture\n  } = opts;\n  const fb = new Framebuffer(gl, {\n    id,\n    width,\n    height,\n    attachments: {\n      [36064]: texture\n    }\n  });\n  return fb;\n}\nexport function getFloatArray(array, size) {\n  let fillValue = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n\n  if (!array || array.length < size) {\n    return new Float32Array(size).fill(fillValue);\n  }\n\n  return array;\n}","map":{"version":3,"mappings":"AACA,SAAQA,WAAR,EAAqBC,SAArB,EAAgCC,QAAhC,QAA+C,eAA/C;AAEA,MAAMC,kBAAkB,GAAG;EACzB,aADyB;EAEzB;AAFyB,CAA3B;AAKA,OAAO,SAASC,eAAT,CAAyBC,EAAzB,EAAwC;EAAA,IAAXC,IAAW,uEAAJ,EAAI;EAC7C,MAAM;IACJC,KAAK,GAAG,CADJ;IAEJC,MAAM,GAAG,CAFL;IAGJC,IAAI,GAAG,IAHH;IAIJC,WAAW,GAAG,IAJV;IAKJC,UAAU,GAAGR;EALT,IAMFG,IANJ;EAOA,MAAMM,OAAO,GAAG,IAAIX,SAAJ,CAAcI,EAAd,EAAkB;IAChCI,IADgC;IAEhCI,MAAM,EAAEX,QAAQ,CAACG,EAAD,CAARH,eAFwB;IAGhCY,IAAI,MAH4B;IAIhCC,MAAM,EAAE,CAJwB;IAKhCC,OAAO,EAAE,KALuB;IAMhCL,UANgC;IAOhCM,UAAU,MAPsB;IAQhCV,KARgC;IAShCC,MATgC;IAUhCE;EAVgC,CAAlB,CAAhB;EAYA,OAAOE,OAAP;AACD;AAED,OAAO,SAASM,cAAT,CAAwBb,EAAxB,EAA4BC,IAA5B,EAAkC;EACvC,MAAM;IAACa,EAAD;IAAKZ,KAAK,GAAG,CAAb;IAAgBC,MAAM,GAAG,CAAzB;IAA4BI;EAA5B,IAAuCN,IAA7C;EACA,MAAMc,EAAE,GAAG,IAAIpB,WAAJ,CAAgBK,EAAhB,EAAoB;IAC7Bc,EAD6B;IAE7BZ,KAF6B;IAG7BC,MAH6B;IAI7Ba,WAAW,EAAE;MACX,SAAwBT;IADb;EAJgB,CAApB,CAAX;EASA,OAAOQ,EAAP;AACD;AAED,OAAO,SAASE,aAAT,CAAuBC,KAAvB,EAA8BC,IAA9B,EAAmD;EAAA,IAAfC,SAAe,uEAAH,CAAG;;EACxD,IAAI,CAACF,KAAD,IAAUA,KAAK,CAACG,MAANH,GAAeC,IAA7B,EAAmC;IACjC,OAAO,IAAIG,YAAJ,CAAiBH,IAAjB,EAAuBI,IAAvB,CAA4BH,SAA5B,CAAP;EACD;;EACD,OAAOF,KAAP;AACD","names":["Framebuffer","Texture2D","isWebGL2","DEFAULT_PARAMETERS","getFloatTexture","gl","opts","width","height","data","unpackFlipY","parameters","texture","format","type","border","mipmaps","dataFormat","getFramebuffer","id","fb","attachments","getFloatArray","array","size","fillValue","length","Float32Array","fill"],"sources":["../../../src/utils/resource-utils.js"],"sourcesContent":["import GL from '@luma.gl/constants';\nimport {Framebuffer, Texture2D, isWebGL2} from '@luma.gl/core';\n\nconst DEFAULT_PARAMETERS = {\n  [GL.TEXTURE_MAG_FILTER]: GL.NEAREST,\n  [GL.TEXTURE_MIN_FILTER]: GL.NEAREST\n};\n\nexport function getFloatTexture(gl, opts = {}) {\n  const {\n    width = 1,\n    height = 1,\n    data = null,\n    unpackFlipY = true,\n    parameters = DEFAULT_PARAMETERS\n  } = opts;\n  const texture = new Texture2D(gl, {\n    data,\n    format: isWebGL2(gl) ? GL.RGBA32F : GL.RGBA,\n    type: GL.FLOAT,\n    border: 0,\n    mipmaps: false,\n    parameters,\n    dataFormat: GL.RGBA,\n    width,\n    height,\n    unpackFlipY\n  });\n  return texture;\n}\n\nexport function getFramebuffer(gl, opts) {\n  const {id, width = 1, height = 1, texture} = opts;\n  const fb = new Framebuffer(gl, {\n    id,\n    width,\n    height,\n    attachments: {\n      [GL.COLOR_ATTACHMENT0]: texture\n    }\n  });\n\n  return fb;\n}\n\nexport function getFloatArray(array, size, fillValue = 0) {\n  if (!array || array.length < size) {\n    return new Float32Array(size).fill(fillValue);\n  }\n  return array;\n}\n"]},"metadata":{},"sourceType":"module"}