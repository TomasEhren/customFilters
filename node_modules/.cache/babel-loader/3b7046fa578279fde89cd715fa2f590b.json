{"ast":null,"code":"import _asyncToGenerator from \"/Users/tomasehrenfeld/projs/se-team/tomas/react-apps/custom_filter/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _classCallCheck from \"/Users/tomasehrenfeld/projs/se-team/tomas/react-apps/custom_filter/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/tomasehrenfeld/projs/se-team/tomas/react-apps/custom_filter/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _regeneratorRuntime from \"/Users/tomasehrenfeld/projs/se-team/tomas/react-apps/custom_filter/node_modules/@babel/runtime/regenerator/index.js\";\nimport { isWebGL, createGLContext, instrumentGLContext, resizeGLContext, resetParameters } from '@luma.gl/gltools';\nimport { requestAnimationFrame, cancelAnimationFrame, Query, lumaStats, Framebuffer, log, assert } from '@luma.gl/webgl';\nimport { isBrowser } from 'probe.gl/env';\nvar isPage = isBrowser() && typeof document !== 'undefined';\nvar statIdCounter = 0;\n\nvar AnimationLoop = /*#__PURE__*/function () {\n  function AnimationLoop() {\n    var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, AnimationLoop);\n\n    var _props$onCreateContex = props.onCreateContext,\n        onCreateContext = _props$onCreateContex === void 0 ? function (opts) {\n      return createGLContext(opts);\n    } : _props$onCreateContex,\n        _props$onAddHTML = props.onAddHTML,\n        onAddHTML = _props$onAddHTML === void 0 ? null : _props$onAddHTML,\n        _props$onInitialize = props.onInitialize,\n        onInitialize = _props$onInitialize === void 0 ? function () {} : _props$onInitialize,\n        _props$onRender = props.onRender,\n        onRender = _props$onRender === void 0 ? function () {} : _props$onRender,\n        _props$onFinalize = props.onFinalize,\n        onFinalize = _props$onFinalize === void 0 ? function () {} : _props$onFinalize,\n        onError = props.onError,\n        _props$gl = props.gl,\n        gl = _props$gl === void 0 ? null : _props$gl,\n        _props$glOptions = props.glOptions,\n        glOptions = _props$glOptions === void 0 ? {} : _props$glOptions,\n        _props$debug = props.debug,\n        debug = _props$debug === void 0 ? false : _props$debug,\n        _props$createFramebuf = props.createFramebuffer,\n        createFramebuffer = _props$createFramebuf === void 0 ? false : _props$createFramebuf,\n        _props$autoResizeView = props.autoResizeViewport,\n        autoResizeViewport = _props$autoResizeView === void 0 ? true : _props$autoResizeView,\n        _props$autoResizeDraw = props.autoResizeDrawingBuffer,\n        autoResizeDrawingBuffer = _props$autoResizeDraw === void 0 ? true : _props$autoResizeDraw,\n        _props$stats = props.stats,\n        stats = _props$stats === void 0 ? lumaStats.get(\"animation-loop-\".concat(statIdCounter++)) : _props$stats;\n    var _props$useDevicePixel = props.useDevicePixels,\n        useDevicePixels = _props$useDevicePixel === void 0 ? true : _props$useDevicePixel;\n\n    if ('useDevicePixelRatio' in props) {\n      log.deprecated('useDevicePixelRatio', 'useDevicePixels')();\n      useDevicePixels = props.useDevicePixelRatio;\n    }\n\n    this.props = {\n      onCreateContext: onCreateContext,\n      onAddHTML: onAddHTML,\n      onInitialize: onInitialize,\n      onRender: onRender,\n      onFinalize: onFinalize,\n      onError: onError,\n      gl: gl,\n      glOptions: glOptions,\n      debug: debug,\n      createFramebuffer: createFramebuffer\n    };\n    this.gl = gl;\n    this.needsRedraw = null;\n    this.timeline = null;\n    this.stats = stats;\n    this.cpuTime = this.stats.get('CPU Time');\n    this.gpuTime = this.stats.get('GPU Time');\n    this.frameRate = this.stats.get('Frame Rate');\n    this._initialized = false;\n    this._running = false;\n    this._animationFrameId = null;\n    this._nextFramePromise = null;\n    this._resolveNextFrame = null;\n    this._cpuStartTime = 0;\n    this.setProps({\n      autoResizeViewport: autoResizeViewport,\n      autoResizeDrawingBuffer: autoResizeDrawingBuffer,\n      useDevicePixels: useDevicePixels\n    });\n    this.start = this.start.bind(this);\n    this.stop = this.stop.bind(this);\n    this._pageLoadPromise = null;\n    this._onMousemove = this._onMousemove.bind(this);\n    this._onMouseleave = this._onMouseleave.bind(this);\n  }\n\n  _createClass(AnimationLoop, [{\n    key: \"delete\",\n    value: function _delete() {\n      this.stop();\n\n      this._setDisplay(null);\n    }\n  }, {\n    key: \"setNeedsRedraw\",\n    value: function setNeedsRedraw(reason) {\n      assert(typeof reason === 'string');\n      this.needsRedraw = this.needsRedraw || reason;\n      return this;\n    }\n  }, {\n    key: \"setProps\",\n    value: function setProps(props) {\n      if ('autoResizeViewport' in props) {\n        this.autoResizeViewport = props.autoResizeViewport;\n      }\n\n      if ('autoResizeDrawingBuffer' in props) {\n        this.autoResizeDrawingBuffer = props.autoResizeDrawingBuffer;\n      }\n\n      if ('useDevicePixels' in props) {\n        this.useDevicePixels = props.useDevicePixels;\n      }\n\n      return this;\n    }\n  }, {\n    key: \"start\",\n    value: function start() {\n      var _this = this;\n\n      var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n      if (this._running) {\n        return this;\n      }\n\n      this._running = true;\n\n      var startPromise = this._getPageLoadPromise().then(function () {\n        if (!_this._running || _this._initialized) {\n          return null;\n        }\n\n        _this._createWebGLContext(opts);\n\n        _this._createFramebuffer();\n\n        _this._startEventHandling();\n\n        _this._initializeCallbackData();\n\n        _this._updateCallbackData();\n\n        _this._resizeCanvasDrawingBuffer();\n\n        _this._resizeViewport();\n\n        _this._gpuTimeQuery = Query.isSupported(_this.gl, ['timers']) ? new Query(_this.gl) : null;\n        _this._initialized = true;\n        return _this.onInitialize(_this.animationProps);\n      }).then(function (appContext) {\n        if (_this._running) {\n          _this._addCallbackData(appContext || {});\n\n          if (appContext !== false) {\n            _this._startLoop();\n          }\n        }\n      });\n\n      if (this.props.onError) {\n        startPromise.catch(this.props.onError);\n      }\n\n      return this;\n    }\n  }, {\n    key: \"redraw\",\n    value: function redraw() {\n      if (this.isContextLost()) {\n        return this;\n      }\n\n      this._beginTimers();\n\n      this._setupFrame();\n\n      this._updateCallbackData();\n\n      this._renderFrame(this.animationProps);\n\n      this._clearNeedsRedraw();\n\n      if (this.offScreen && this.gl.commit) {\n        this.gl.commit();\n      }\n\n      if (this._resolveNextFrame) {\n        this._resolveNextFrame(this);\n\n        this._nextFramePromise = null;\n        this._resolveNextFrame = null;\n      }\n\n      this._endTimers();\n\n      return this;\n    }\n  }, {\n    key: \"stop\",\n    value: function stop() {\n      if (this._running) {\n        this._finalizeCallbackData();\n\n        this._cancelAnimationFrame(this._animationFrameId);\n\n        this._nextFramePromise = null;\n        this._resolveNextFrame = null;\n        this._animationFrameId = null;\n        this._running = false;\n      }\n\n      return this;\n    }\n  }, {\n    key: \"attachTimeline\",\n    value: function attachTimeline(timeline) {\n      this.timeline = timeline;\n      return this.timeline;\n    }\n  }, {\n    key: \"detachTimeline\",\n    value: function detachTimeline() {\n      this.timeline = null;\n    }\n  }, {\n    key: \"waitForRender\",\n    value: function waitForRender() {\n      var _this2 = this;\n\n      this.setNeedsRedraw('waitForRender');\n\n      if (!this._nextFramePromise) {\n        this._nextFramePromise = new Promise(function (resolve) {\n          _this2._resolveNextFrame = resolve;\n        });\n      }\n\n      return this._nextFramePromise;\n    }\n  }, {\n    key: \"toDataURL\",\n    value: function () {\n      var _toDataURL = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                this.setNeedsRedraw('toDataURL');\n                _context.next = 3;\n                return this.waitForRender();\n\n              case 3:\n                return _context.abrupt(\"return\", this.gl.canvas.toDataURL());\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function toDataURL() {\n        return _toDataURL.apply(this, arguments);\n      }\n\n      return toDataURL;\n    }()\n  }, {\n    key: \"isContextLost\",\n    value: function isContextLost() {\n      return this.gl.isContextLost();\n    }\n  }, {\n    key: \"onCreateContext\",\n    value: function onCreateContext() {\n      var _this$props;\n\n      return (_this$props = this.props).onCreateContext.apply(_this$props, arguments);\n    }\n  }, {\n    key: \"onInitialize\",\n    value: function onInitialize() {\n      var _this$props2;\n\n      return (_this$props2 = this.props).onInitialize.apply(_this$props2, arguments);\n    }\n  }, {\n    key: \"onRender\",\n    value: function onRender() {\n      var _this$props3;\n\n      return (_this$props3 = this.props).onRender.apply(_this$props3, arguments);\n    }\n  }, {\n    key: \"onFinalize\",\n    value: function onFinalize() {\n      var _this$props4;\n\n      return (_this$props4 = this.props).onFinalize.apply(_this$props4, arguments);\n    }\n  }, {\n    key: \"getHTMLControlValue\",\n    value: function getHTMLControlValue(id) {\n      var defaultValue = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n      var element = document.getElementById(id);\n      return element ? Number(element.value) : defaultValue;\n    }\n  }, {\n    key: \"setViewParameters\",\n    value: function setViewParameters() {\n      log.removed('AnimationLoop.setViewParameters', 'AnimationLoop.setProps')();\n      return this;\n    }\n  }, {\n    key: \"_startLoop\",\n    value: function _startLoop() {\n      var _this3 = this;\n\n      var renderFrame = function renderFrame() {\n        if (!_this3._running) {\n          return;\n        }\n\n        _this3.redraw();\n\n        _this3._animationFrameId = _this3._requestAnimationFrame(renderFrame);\n      };\n\n      this._cancelAnimationFrame(this._animationFrameId);\n\n      this._animationFrameId = this._requestAnimationFrame(renderFrame);\n    }\n  }, {\n    key: \"_getPageLoadPromise\",\n    value: function _getPageLoadPromise() {\n      if (!this._pageLoadPromise) {\n        this._pageLoadPromise = isPage ? new Promise(function (resolve, reject) {\n          if (isPage && document.readyState === 'complete') {\n            resolve(document);\n            return;\n          }\n\n          window.addEventListener('load', function () {\n            resolve(document);\n          });\n        }) : Promise.resolve({});\n      }\n\n      return this._pageLoadPromise;\n    }\n  }, {\n    key: \"_setDisplay\",\n    value: function _setDisplay(display) {\n      if (this.display) {\n        this.display.delete();\n        this.display.animationLoop = null;\n      }\n\n      if (display) {\n        display.animationLoop = this;\n      }\n\n      this.display = display;\n    }\n  }, {\n    key: \"_cancelAnimationFrame\",\n    value: function _cancelAnimationFrame(animationFrameId) {\n      if (this.display && this.display.cancelAnimationFrame) {\n        return this.display.cancelAnimationFrame(animationFrameId);\n      }\n\n      return cancelAnimationFrame(animationFrameId);\n    }\n  }, {\n    key: \"_requestAnimationFrame\",\n    value: function _requestAnimationFrame(renderFrameCallback) {\n      if (this._running) {\n        if (this.display && this.display.requestAnimationFrame) {\n          return this.display.requestAnimationFrame(renderFrameCallback);\n        }\n\n        return requestAnimationFrame(renderFrameCallback);\n      }\n\n      return undefined;\n    }\n  }, {\n    key: \"_renderFrame\",\n    value: function _renderFrame() {\n      if (this.display) {\n        var _this$display;\n\n        (_this$display = this.display)._renderFrame.apply(_this$display, arguments);\n\n        return;\n      }\n\n      this.onRender.apply(this, arguments);\n    }\n  }, {\n    key: \"_clearNeedsRedraw\",\n    value: function _clearNeedsRedraw() {\n      this.needsRedraw = null;\n    }\n  }, {\n    key: \"_setupFrame\",\n    value: function _setupFrame() {\n      this._resizeCanvasDrawingBuffer();\n\n      this._resizeViewport();\n\n      this._resizeFramebuffer();\n    }\n  }, {\n    key: \"_initializeCallbackData\",\n    value: function _initializeCallbackData() {\n      this.animationProps = {\n        gl: this.gl,\n        stop: this.stop,\n        canvas: this.gl.canvas,\n        framebuffer: this.framebuffer,\n        useDevicePixels: this.useDevicePixels,\n        needsRedraw: null,\n        startTime: Date.now(),\n        engineTime: 0,\n        tick: 0,\n        tock: 0,\n        time: 0,\n        _timeline: this.timeline,\n        _loop: this,\n        _animationLoop: this,\n        _mousePosition: null\n      };\n    }\n  }, {\n    key: \"_updateCallbackData\",\n    value: function _updateCallbackData() {\n      var _this$_getSizeAndAspe = this._getSizeAndAspect(),\n          width = _this$_getSizeAndAspe.width,\n          height = _this$_getSizeAndAspe.height,\n          aspect = _this$_getSizeAndAspe.aspect;\n\n      if (width !== this.animationProps.width || height !== this.animationProps.height) {\n        this.setNeedsRedraw('drawing buffer resized');\n      }\n\n      if (aspect !== this.animationProps.aspect) {\n        this.setNeedsRedraw('drawing buffer aspect changed');\n      }\n\n      this.animationProps.width = width;\n      this.animationProps.height = height;\n      this.animationProps.aspect = aspect;\n      this.animationProps.needsRedraw = this.needsRedraw;\n      this.animationProps.engineTime = Date.now() - this.animationProps.startTime;\n\n      if (this.timeline) {\n        this.timeline.update(this.animationProps.engineTime);\n      }\n\n      this.animationProps.tick = Math.floor(this.animationProps.time / 1000 * 60);\n      this.animationProps.tock++;\n      this.animationProps.time = this.timeline ? this.timeline.getTime() : this.animationProps.engineTime;\n      this.animationProps._offScreen = this.offScreen;\n    }\n  }, {\n    key: \"_finalizeCallbackData\",\n    value: function _finalizeCallbackData() {\n      this.onFinalize(this.animationProps);\n    }\n  }, {\n    key: \"_addCallbackData\",\n    value: function _addCallbackData(appContext) {\n      if (typeof appContext === 'object' && appContext !== null) {\n        this.animationProps = Object.assign({}, this.animationProps, appContext);\n      }\n    }\n  }, {\n    key: \"_createWebGLContext\",\n    value: function _createWebGLContext(opts) {\n      this.offScreen = opts.canvas && typeof OffscreenCanvas !== 'undefined' && opts.canvas instanceof OffscreenCanvas;\n      opts = Object.assign({}, opts, this.props.glOptions);\n      this.gl = this.props.gl ? instrumentGLContext(this.props.gl, opts) : this.onCreateContext(opts);\n\n      if (!isWebGL(this.gl)) {\n        throw new Error('AnimationLoop.onCreateContext - illegal context returned');\n      }\n\n      resetParameters(this.gl);\n\n      this._createInfoDiv();\n    }\n  }, {\n    key: \"_createInfoDiv\",\n    value: function _createInfoDiv() {\n      if (this.gl.canvas && this.props.onAddHTML) {\n        var wrapperDiv = document.createElement('div');\n        document.body.appendChild(wrapperDiv);\n        wrapperDiv.style.position = 'relative';\n        var div = document.createElement('div');\n        div.style.position = 'absolute';\n        div.style.left = '10px';\n        div.style.bottom = '10px';\n        div.style.width = '300px';\n        div.style.background = 'white';\n        wrapperDiv.appendChild(this.gl.canvas);\n        wrapperDiv.appendChild(div);\n        var html = this.props.onAddHTML(div);\n\n        if (html) {\n          div.innerHTML = html;\n        }\n      }\n    }\n  }, {\n    key: \"_getSizeAndAspect\",\n    value: function _getSizeAndAspect() {\n      var width = this.gl.drawingBufferWidth;\n      var height = this.gl.drawingBufferHeight;\n      var aspect = 1;\n      var canvas = this.gl.canvas;\n\n      if (canvas && canvas.clientHeight) {\n        aspect = canvas.clientWidth / canvas.clientHeight;\n      } else if (width > 0 && height > 0) {\n        aspect = width / height;\n      }\n\n      return {\n        width: width,\n        height: height,\n        aspect: aspect\n      };\n    }\n  }, {\n    key: \"_resizeViewport\",\n    value: function _resizeViewport() {\n      if (this.autoResizeViewport) {\n        this.gl.viewport(0, 0, this.gl.drawingBufferWidth, this.gl.drawingBufferHeight);\n      }\n    }\n  }, {\n    key: \"_resizeCanvasDrawingBuffer\",\n    value: function _resizeCanvasDrawingBuffer() {\n      if (this.autoResizeDrawingBuffer) {\n        resizeGLContext(this.gl, {\n          useDevicePixels: this.useDevicePixels\n        });\n      }\n    }\n  }, {\n    key: \"_createFramebuffer\",\n    value: function _createFramebuffer() {\n      if (this.props.createFramebuffer) {\n        this.framebuffer = new Framebuffer(this.gl);\n      }\n    }\n  }, {\n    key: \"_resizeFramebuffer\",\n    value: function _resizeFramebuffer() {\n      if (this.framebuffer) {\n        this.framebuffer.resize({\n          width: this.gl.drawingBufferWidth,\n          height: this.gl.drawingBufferHeight\n        });\n      }\n    }\n  }, {\n    key: \"_beginTimers\",\n    value: function _beginTimers() {\n      this.frameRate.timeEnd();\n      this.frameRate.timeStart();\n\n      if (this._gpuTimeQuery && this._gpuTimeQuery.isResultAvailable() && !this._gpuTimeQuery.isTimerDisjoint()) {\n        this.stats.get('GPU Time').addTime(this._gpuTimeQuery.getTimerMilliseconds());\n      }\n\n      if (this._gpuTimeQuery) {\n        this._gpuTimeQuery.beginTimeElapsedQuery();\n      }\n\n      this.cpuTime.timeStart();\n    }\n  }, {\n    key: \"_endTimers\",\n    value: function _endTimers() {\n      this.cpuTime.timeEnd();\n\n      if (this._gpuTimeQuery) {\n        this._gpuTimeQuery.end();\n      }\n    }\n  }, {\n    key: \"_startEventHandling\",\n    value: function _startEventHandling() {\n      var canvas = this.gl.canvas;\n\n      if (canvas) {\n        canvas.addEventListener('mousemove', this._onMousemove);\n        canvas.addEventListener('mouseleave', this._onMouseleave);\n      }\n    }\n  }, {\n    key: \"_onMousemove\",\n    value: function _onMousemove(e) {\n      this.animationProps._mousePosition = [e.offsetX, e.offsetY];\n    }\n  }, {\n    key: \"_onMouseleave\",\n    value: function _onMouseleave(e) {\n      this.animationProps._mousePosition = null;\n    }\n  }]);\n\n  return AnimationLoop;\n}();\n\nexport { AnimationLoop as default };","map":{"version":3,"mappings":"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","names":["isWebGL","createGLContext","instrumentGLContext","resizeGLContext","resetParameters","requestAnimationFrame","cancelAnimationFrame","Query","lumaStats","Framebuffer","log","assert","isBrowser","isPage","document","statIdCounter","AnimationLoop","constructor","props","onCreateContext","opts","onAddHTML","onInitialize","onRender","onFinalize","onError","gl","glOptions","debug","createFramebuffer","autoResizeViewport","autoResizeDrawingBuffer","stats","get","useDevicePixels","deprecated","useDevicePixelRatio","needsRedraw","timeline","cpuTime","gpuTime","frameRate","_initialized","_running","_animationFrameId","_nextFramePromise","_resolveNextFrame","_cpuStartTime","setProps","start","bind","stop","_pageLoadPromise","_onMousemove","_onMouseleave","delete","_setDisplay","setNeedsRedraw","reason","startPromise","_getPageLoadPromise","then","_createWebGLContext","_createFramebuffer","_startEventHandling","_initializeCallbackData","_updateCallbackData","_resizeCanvasDrawingBuffer","_resizeViewport","_gpuTimeQuery","isSupported","animationProps","appContext","_addCallbackData","_startLoop","catch","redraw","isContextLost","_beginTimers","_setupFrame","_renderFrame","_clearNeedsRedraw","offScreen","commit","_endTimers","_finalizeCallbackData","_cancelAnimationFrame","attachTimeline","detachTimeline","waitForRender","Promise","resolve","canvas","toDataURL","getHTMLControlValue","id","defaultValue","element","getElementById","Number","value","setViewParameters","removed","renderFrame","_requestAnimationFrame","reject","readyState","window","addEventListener","display","animationLoop","animationFrameId","renderFrameCallback","undefined","_resizeFramebuffer","framebuffer","startTime","Date","now","engineTime","tick","tock","time","_timeline","_loop","_animationLoop","_mousePosition","_getSizeAndAspect","width","height","aspect","update","Math","floor","getTime","_offScreen","Object","assign","OffscreenCanvas","Error","_createInfoDiv","wrapperDiv","createElement","body","appendChild","style","position","div","left","bottom","background","html","innerHTML","drawingBufferWidth","drawingBufferHeight","clientHeight","clientWidth","viewport","resize","timeEnd","timeStart","isResultAvailable","isTimerDisjoint","addTime","getTimerMilliseconds","beginTimeElapsedQuery","end","e","offsetX","offsetY"],"sources":["../../../src/lib/animation-loop.js"],"sourcesContent":["import {\n  isWebGL,\n  createGLContext,\n  instrumentGLContext,\n  resizeGLContext,\n  resetParameters\n} from '@luma.gl/gltools';\n\nimport {\n  requestAnimationFrame,\n  cancelAnimationFrame,\n  Query,\n  lumaStats,\n  // TODO - remove dependency on framebuffer (bundle size impact)\n  Framebuffer,\n  log,\n  assert\n} from '@luma.gl/webgl';\n\nimport {isBrowser} from 'probe.gl/env';\n\nconst isPage = isBrowser() && typeof document !== 'undefined';\n\nlet statIdCounter = 0;\n\nexport default class AnimationLoop {\n  /*\n   * @param {HTMLCanvasElement} canvas - if provided, width and height will be passed to context\n   */\n  constructor(props = {}) {\n    const {\n      onCreateContext = opts => createGLContext(opts),\n      onAddHTML = null,\n      onInitialize = () => {},\n      onRender = () => {},\n      onFinalize = () => {},\n      onError,\n\n      gl = null,\n      glOptions = {},\n      debug = false,\n\n      createFramebuffer = false,\n\n      // view parameters\n      autoResizeViewport = true,\n      autoResizeDrawingBuffer = true,\n      stats = lumaStats.get(`animation-loop-${statIdCounter++}`)\n    } = props;\n\n    let {useDevicePixels = true} = props;\n\n    if ('useDevicePixelRatio' in props) {\n      log.deprecated('useDevicePixelRatio', 'useDevicePixels')();\n      // @ts-ignore\n      useDevicePixels = props.useDevicePixelRatio;\n    }\n\n    this.props = {\n      onCreateContext,\n      onAddHTML,\n      onInitialize,\n      onRender,\n      onFinalize,\n      onError,\n\n      gl,\n      glOptions,\n      debug,\n      createFramebuffer\n    };\n\n    // state\n    this.gl = gl;\n    this.needsRedraw = null;\n    this.timeline = null;\n    this.stats = stats;\n    this.cpuTime = this.stats.get('CPU Time');\n    this.gpuTime = this.stats.get('GPU Time');\n    this.frameRate = this.stats.get('Frame Rate');\n\n    this._initialized = false;\n    this._running = false;\n    this._animationFrameId = null;\n    this._nextFramePromise = null;\n    this._resolveNextFrame = null;\n    this._cpuStartTime = 0;\n\n    this.setProps({\n      autoResizeViewport,\n      autoResizeDrawingBuffer,\n      useDevicePixels\n    });\n\n    // Bind methods\n    this.start = this.start.bind(this);\n    this.stop = this.stop.bind(this);\n\n    this._pageLoadPromise = null;\n\n    this._onMousemove = this._onMousemove.bind(this);\n    this._onMouseleave = this._onMouseleave.bind(this);\n  }\n\n  delete() {\n    this.stop();\n    this._setDisplay(null);\n  }\n\n  setNeedsRedraw(reason) {\n    assert(typeof reason === 'string');\n    this.needsRedraw = this.needsRedraw || reason;\n    return this;\n  }\n\n  setProps(props) {\n    if ('autoResizeViewport' in props) {\n      this.autoResizeViewport = props.autoResizeViewport;\n    }\n    if ('autoResizeDrawingBuffer' in props) {\n      this.autoResizeDrawingBuffer = props.autoResizeDrawingBuffer;\n    }\n    if ('useDevicePixels' in props) {\n      this.useDevicePixels = props.useDevicePixels;\n    }\n    return this;\n  }\n\n  // Starts a render loop if not already running\n  // @param {Object} context - contains frame specific info (E.g. tick, width, height, etc)\n  start(opts = {}) {\n    if (this._running) {\n      return this;\n    }\n    this._running = true;\n    // console.debug(`Starting ${this.constructor.name}`);\n    // Wait for start promise before rendering frame\n    const startPromise = this._getPageLoadPromise()\n      .then(() => {\n        if (!this._running || this._initialized) {\n          return null;\n        }\n\n        // Create the WebGL context\n        this._createWebGLContext(opts);\n        this._createFramebuffer();\n        this._startEventHandling();\n\n        // Initialize the callback data\n        this._initializeCallbackData();\n        this._updateCallbackData();\n\n        // Default viewport setup, in case onInitialize wants to render\n        this._resizeCanvasDrawingBuffer();\n        this._resizeViewport();\n\n        this._gpuTimeQuery = Query.isSupported(this.gl, ['timers']) ? new Query(this.gl) : null;\n\n        this._initialized = true;\n\n        // Note: onIntialize can return a promise (in case it needs to load resources)\n        return this.onInitialize(this.animationProps);\n      })\n      .then(appContext => {\n        if (this._running) {\n          this._addCallbackData(appContext || {});\n          if (appContext !== false) {\n            this._startLoop();\n          }\n        }\n      });\n\n    if (this.props.onError) {\n      startPromise.catch(this.props.onError);\n    }\n\n    return this;\n  }\n\n  // Redraw now\n  redraw() {\n    if (this.isContextLost()) {\n      return this;\n    }\n\n    this._beginTimers();\n\n    this._setupFrame();\n    this._updateCallbackData();\n\n    this._renderFrame(this.animationProps);\n\n    // clear needsRedraw flag\n    this._clearNeedsRedraw();\n\n    // https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/commit\n    // Chrome's offscreen canvas does not require gl.commit\n    if (this.offScreen && this.gl.commit) {\n      this.gl.commit();\n    }\n\n    if (this._resolveNextFrame) {\n      this._resolveNextFrame(this);\n      this._nextFramePromise = null;\n      this._resolveNextFrame = null;\n    }\n\n    this._endTimers();\n\n    return this;\n  }\n\n  // Stops a render loop if already running, finalizing\n  stop() {\n    // console.debug(`Stopping ${this.constructor.name}`);\n    if (this._running) {\n      this._finalizeCallbackData();\n      this._cancelAnimationFrame(this._animationFrameId);\n      this._nextFramePromise = null;\n      this._resolveNextFrame = null;\n      this._animationFrameId = null;\n      this._running = false;\n    }\n    return this;\n  }\n\n  attachTimeline(timeline) {\n    this.timeline = timeline;\n\n    return this.timeline;\n  }\n\n  detachTimeline() {\n    this.timeline = null;\n  }\n\n  waitForRender() {\n    this.setNeedsRedraw('waitForRender');\n\n    if (!this._nextFramePromise) {\n      this._nextFramePromise = new Promise(resolve => {\n        this._resolveNextFrame = resolve;\n      });\n    }\n    return this._nextFramePromise;\n  }\n\n  async toDataURL() {\n    this.setNeedsRedraw('toDataURL');\n\n    await this.waitForRender();\n\n    return this.gl.canvas.toDataURL();\n  }\n\n  isContextLost() {\n    return this.gl.isContextLost();\n  }\n\n  onCreateContext(...args) {\n    return this.props.onCreateContext(...args);\n  }\n\n  onInitialize(...args) {\n    return this.props.onInitialize(...args);\n  }\n\n  onRender(...args) {\n    return this.props.onRender(...args);\n  }\n\n  onFinalize(...args) {\n    return this.props.onFinalize(...args);\n  }\n\n  // DEPRECATED/REMOVED METHODS\n\n  getHTMLControlValue(id, defaultValue = 1) {\n    const element = document.getElementById(id);\n    // @ts-ignore Not all html elements have value\n    return element ? Number(element.value) : defaultValue;\n  }\n\n  // Update parameters\n  setViewParameters() {\n    log.removed('AnimationLoop.setViewParameters', 'AnimationLoop.setProps')();\n    return this;\n  }\n\n  // PRIVATE METHODS\n\n  _startLoop() {\n    const renderFrame = () => {\n      if (!this._running) {\n        return;\n      }\n      this.redraw();\n      this._animationFrameId = this._requestAnimationFrame(renderFrame);\n    };\n\n    // cancel any pending renders to ensure only one loop can ever run\n    this._cancelAnimationFrame(this._animationFrameId);\n    this._animationFrameId = this._requestAnimationFrame(renderFrame);\n  }\n\n  // PRIVATE METHODS\n\n  _getPageLoadPromise() {\n    if (!this._pageLoadPromise) {\n      this._pageLoadPromise = isPage\n        ? new Promise((resolve, reject) => {\n            if (isPage && document.readyState === 'complete') {\n              resolve(document);\n              return;\n            }\n            window.addEventListener('load', () => {\n              resolve(document);\n            });\n          })\n        : Promise.resolve({});\n    }\n    return this._pageLoadPromise;\n  }\n\n  _setDisplay(display) {\n    if (this.display) {\n      this.display.delete();\n      this.display.animationLoop = null;\n    }\n\n    // store animation loop on the display\n    if (display) {\n      display.animationLoop = this;\n    }\n\n    this.display = display;\n  }\n\n  _cancelAnimationFrame(animationFrameId) {\n    // E.g. VR display has a separate animation frame to sync with headset\n    if (this.display && this.display.cancelAnimationFrame) {\n      return this.display.cancelAnimationFrame(animationFrameId);\n    }\n\n    return cancelAnimationFrame(animationFrameId);\n  }\n\n  _requestAnimationFrame(renderFrameCallback) {\n    if (this._running) {\n      // E.g. VR display has a separate animation frame to sync with headset\n      if (this.display && this.display.requestAnimationFrame) {\n        return this.display.requestAnimationFrame(renderFrameCallback);\n      }\n\n      return requestAnimationFrame(renderFrameCallback);\n    }\n    return undefined;\n  }\n\n  // Called on each frame, can be overridden to call onRender multiple times\n  // to support e.g. stereoscopic rendering\n  _renderFrame(...args) {\n    // Allow e.g. VR display to render multiple frames.\n    if (this.display) {\n      this.display._renderFrame(...args);\n      return;\n    }\n\n    // call callback\n    this.onRender(...args);\n    // end callback\n  }\n\n  _clearNeedsRedraw() {\n    this.needsRedraw = null;\n  }\n\n  _setupFrame() {\n    this._resizeCanvasDrawingBuffer();\n    this._resizeViewport();\n    this._resizeFramebuffer();\n  }\n\n  // Initialize the  object that will be passed to app callbacks\n  _initializeCallbackData() {\n    this.animationProps = {\n      gl: this.gl,\n\n      stop: this.stop,\n      canvas: this.gl.canvas,\n      framebuffer: this.framebuffer,\n\n      // Initial values\n      useDevicePixels: this.useDevicePixels,\n      needsRedraw: null,\n\n      // Animation props\n      startTime: Date.now(),\n      engineTime: 0,\n      tick: 0,\n      tock: 0,\n\n      // Timeline time for back compatibility\n      time: 0,\n\n      // Experimental\n      _timeline: this.timeline,\n      _loop: this,\n      _animationLoop: this,\n      _mousePosition: null // Event props\n    };\n  }\n\n  // Update the context object that will be passed to app callbacks\n  _updateCallbackData() {\n    const {width, height, aspect} = this._getSizeAndAspect();\n    if (width !== this.animationProps.width || height !== this.animationProps.height) {\n      this.setNeedsRedraw('drawing buffer resized');\n    }\n    if (aspect !== this.animationProps.aspect) {\n      this.setNeedsRedraw('drawing buffer aspect changed');\n    }\n\n    this.animationProps.width = width;\n    this.animationProps.height = height;\n    this.animationProps.aspect = aspect;\n\n    this.animationProps.needsRedraw = this.needsRedraw;\n\n    // Update time properties\n    this.animationProps.engineTime = Date.now() - this.animationProps.startTime;\n\n    if (this.timeline) {\n      this.timeline.update(this.animationProps.engineTime);\n    }\n\n    this.animationProps.tick = Math.floor((this.animationProps.time / 1000) * 60);\n    this.animationProps.tock++;\n\n    // For back compatibility\n    this.animationProps.time = this.timeline\n      ? this.timeline.getTime()\n      : this.animationProps.engineTime;\n\n    // experimental\n    this.animationProps._offScreen = this.offScreen;\n  }\n\n  _finalizeCallbackData() {\n    // call callback\n    this.onFinalize(this.animationProps);\n    // end callback\n  }\n\n  // Add application's data to the app context object\n  _addCallbackData(appContext) {\n    if (typeof appContext === 'object' && appContext !== null) {\n      this.animationProps = Object.assign({}, this.animationProps, appContext);\n    }\n  }\n\n  // Either uses supplied or existing context, or calls provided callback to create one\n  _createWebGLContext(opts) {\n    this.offScreen =\n      opts.canvas &&\n      typeof OffscreenCanvas !== 'undefined' &&\n      opts.canvas instanceof OffscreenCanvas;\n\n    // Create the WebGL context if necessary\n    opts = Object.assign({}, opts, this.props.glOptions);\n    this.gl = this.props.gl ? instrumentGLContext(this.props.gl, opts) : this.onCreateContext(opts);\n\n    if (!isWebGL(this.gl)) {\n      throw new Error('AnimationLoop.onCreateContext - illegal context returned');\n    }\n\n    // Reset the WebGL context.\n    resetParameters(this.gl);\n\n    this._createInfoDiv();\n  }\n\n  _createInfoDiv() {\n    if (this.gl.canvas && this.props.onAddHTML) {\n      const wrapperDiv = document.createElement('div');\n      document.body.appendChild(wrapperDiv);\n      wrapperDiv.style.position = 'relative';\n      const div = document.createElement('div');\n      div.style.position = 'absolute';\n      div.style.left = '10px';\n      div.style.bottom = '10px';\n      div.style.width = '300px';\n      div.style.background = 'white';\n      wrapperDiv.appendChild(this.gl.canvas);\n      wrapperDiv.appendChild(div);\n      const html = this.props.onAddHTML(div);\n      if (html) {\n        div.innerHTML = html;\n      }\n    }\n  }\n\n  _getSizeAndAspect() {\n    // https://webglfundamentals.org/webgl/lessons/webgl-resizing-the-canvas.html\n    const width = this.gl.drawingBufferWidth;\n    const height = this.gl.drawingBufferHeight;\n\n    // https://webglfundamentals.org/webgl/lessons/webgl-anti-patterns.html\n    let aspect = 1;\n    const {canvas} = this.gl;\n\n    if (canvas && canvas.clientHeight) {\n      aspect = canvas.clientWidth / canvas.clientHeight;\n    } else if (width > 0 && height > 0) {\n      aspect = width / height;\n    }\n\n    return {width, height, aspect};\n  }\n\n  // Default viewport setup\n  _resizeViewport() {\n    if (this.autoResizeViewport) {\n      this.gl.viewport(0, 0, this.gl.drawingBufferWidth, this.gl.drawingBufferHeight);\n    }\n  }\n\n  // Resize the render buffer of the canvas to match canvas client size\n  // Optionally multiplying with devicePixel ratio\n  _resizeCanvasDrawingBuffer() {\n    if (this.autoResizeDrawingBuffer) {\n      resizeGLContext(this.gl, {useDevicePixels: this.useDevicePixels});\n    }\n  }\n\n  // TBD - deprecated?\n  _createFramebuffer() {\n    // Setup default framebuffer\n    if (this.props.createFramebuffer) {\n      this.framebuffer = new Framebuffer(this.gl);\n    }\n  }\n\n  _resizeFramebuffer() {\n    if (this.framebuffer) {\n      this.framebuffer.resize({\n        width: this.gl.drawingBufferWidth,\n        height: this.gl.drawingBufferHeight\n      });\n    }\n  }\n\n  _beginTimers() {\n    this.frameRate.timeEnd();\n    this.frameRate.timeStart();\n\n    // Check if timer for last frame has completed.\n    // GPU timer results are never available in the same\n    // frame they are captured.\n    if (\n      this._gpuTimeQuery &&\n      this._gpuTimeQuery.isResultAvailable() &&\n      !this._gpuTimeQuery.isTimerDisjoint()\n    ) {\n      this.stats.get('GPU Time').addTime(this._gpuTimeQuery.getTimerMilliseconds());\n    }\n\n    if (this._gpuTimeQuery) {\n      // GPU time query start\n      this._gpuTimeQuery.beginTimeElapsedQuery();\n    }\n\n    this.cpuTime.timeStart();\n  }\n\n  _endTimers() {\n    this.cpuTime.timeEnd();\n\n    if (this._gpuTimeQuery) {\n      // GPU time query end. Results will be available on next frame.\n      this._gpuTimeQuery.end();\n    }\n  }\n\n  // Event handling\n\n  _startEventHandling() {\n    const {canvas} = this.gl;\n    if (canvas) {\n      canvas.addEventListener('mousemove', this._onMousemove);\n      canvas.addEventListener('mouseleave', this._onMouseleave);\n    }\n  }\n\n  _onMousemove(e) {\n    this.animationProps._mousePosition = [e.offsetX, e.offsetY];\n  }\n  _onMouseleave(e) {\n    this.animationProps._mousePosition = null;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}